{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/GovernanceUtil.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","delegateVesting","_callee3","delegate","founderVesting","_args3","_context3","length","undefined","genericContractCall","console","log","parseInt","initContract","VesterABI","getUnclaimedTokens","_callee4","rewards","_context4","fixTokenDecimals","decimals","getAPR","_ref5","_callee5","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref6","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args5","_context5","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","_ref8","_callee6","cachedData","idleSpeeds","blocksPerYear","distribution","_context6","getCachedData","address","_x5","getAvgApr","_callee8","availableTokens","output","totalAllocation","_args8","_context8","availableStrategies","selectedStrategy","asyncForEach","keys","_ref10","_callee7","_ref11","_ref12","idleApr","_context7","plus","_x6","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","tooltip","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","oldTokenConfig","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","tokenPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","tokenAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","tokenAPY","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","style","ref","_ref13","_ref14","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","idleTokenEnabled","apyLong","showTooltip","iconProps","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","pb","whiteSpace","desc","openTooltipModal","TableHeader","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","apr2apy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","showAPYDisclaimer","getTokensToMigrate","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","showAPR","protocol","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","idleTokenAddress","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args6","idleTokensBalance","getDepositTimestamp","deposits","_args7","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_callee9","_args9","_context9","getEtherscanBaseTxs","_callee10","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args10","_context10","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveCachedRequest","_callee11","_args11","_context11","filterCurveTxs","_callee12","allAvailableTokens","etherscanTxsToStore","cachedRequestData","_args12","_context12","processStoredTxs","txInfo","_ref16","_callee13","_args13","_context13","_ref17","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref18","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","t1","_ref21","_callee15","_context15","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x13","_x14","_x9","_x10","_x8","_x7","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref26","_callee20","_context20","txReceipt","_x19","_x20","_ref27","_callee21","_context21","_x21","_x22","raw","_ref28","_callee22","_context22","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x25","_ref30","_callee27","return_data","_args27","_context27","_x26","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref33","_callee30","_context30","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref34","_callee31","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args31","_context31","_x33","_ref35","_callee32","_context32","_x34","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee33","contractPaused","_args33","_context33","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref37","_callee36","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context36","allocationPromise","_ref38","_callee34","_context34","lastAmounts","call","_x36","_x37","availableTokenPromise","_ref39","_callee35","_context35","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref40","_callee37","_context37","_x40","_x41","_ref41","_callee38","signedParameters","callback_receipt","_contract$methods","_context38","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref42","_callee39","biconomyInfo","res","_context39","headers","x-api-key","_x47","_ref43","_callee40","messageToSign","_this$getSignaturePar","_context40","getNonce","_address","personal","sign","_x48","_x49","_x50","_x51","sendBiconomyTx","_ref44","_callee41","EIP712Domain","MetaTransaction","domainData","dataToSign","_context41","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x52","_x53","_x54","_x55","_x56","_ref45","_callee42","contractAddr","walletAddr","allowance","_context42","getAllowance","_x57","_x58","_x59","_ref46","_callee43","_context43","_x60","_x61","_x62","methodName","txData","toTwosComplement","_ref47","_callee44","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref48","_ref49","curveAvgBuyPrice","curveTokenBalance","_ref50","_ref51","amountLentCurve1","redeemableBalanceCurve","_ref52","_ref53","earningPerYear","_ref54","_ref55","amountLent1","redeemableBalance1","tokenApys","curveAPY","_ref56","_ref57","daysFirstDeposit","depositTimestamps","_ref58","_ref59","tokenAPY1","_earningPerYear","_govTokenConfig","_ref60","_ref61","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref62","_ref63","amountLentCurve2","redeemableBalanceCurve1","_ref64","_ref65","redeemableBalance2","_args44","_context44","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getCompAvgApr","avgApy","t3","t4","getUserTokenFees","t5","t6","getGovTokenUserBalance","_x63","_x64","_x65","_x66","_ref66","_callee45","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args45","_context45","_x67","clearCachedData","expirationDate","_ref67","_callee46","fixDecimals","_ref68","_ref69","_args46","_context46","_x68","_x69","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref70","_callee47","_context47","getProtocolBalance","_x70","_x71","_ref71","_callee48","_context48","_x72","_x73","getAprs","_ref72","_callee49","_context49","_x74","genericIdleCall","_ref73","_callee50","callParams","_args50","_context50","_x75","estimateGas","_ref74","_callee51","_contract$methods2","_args51","_context51","_x76","_x77","getTxDecodedLogs","_ref75","_callee53","logAddr","decodeLogs","internalTransfers","_context53","_ref76","_callee52","_context52","_x82","_x83","_x78","_x79","_x80","_x81","getBlockNumber","_callee54","_context54","getContractPastEvents","_ref78","_callee55","_args55","_context55","getPastEvents","_x84","_x85","_ref79","_callee56","_contract$methods3","_args56","_context56","_x86","_x87","_ref80","_callee57","_args57","_context57","_x88","_x89","getUnlentBalance","_ref81","_callee58","unlentBalance","_context58","_x90","_ref82","_callee60","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args60","_context60","_ref83","_callee59","_ref84","_ref85","protocolBalance","_context59","_x92","_x93","getGovTokensBalances","total","getTokenConversionRate","_x91","getUniswapConversionRate_path","_ref86","_callee61","unires","_context61","_x94","_ref87","_callee62","tokenConfigFrom","tokenConfigDest","_context62","_x95","_x96","getCurveDepositedTokens","_ref88","_callee63","idleTokensBalances","remainingCurveTokens","_args63","_context63","_x97","getCurveUnevenTokenAmounts","_ref89","_callee64","amounts","max_burn_amount","unevenAmounts","_context64","getCurveSwapContract","_x98","_x99","_callee65","curveRatesInfo","_context65","strategyTokens","getCurveAPYContract","_callee66","blocksForPrevTokenPrice","_ref92","_ref93","_tokenPrice","prevTokenPrice","blocksMultiplier","curveAPR","_context66","getCurveTokenSupply","_callee67","_context67","getCurvePoolContract","_callee68","_args68","_context68","_callee69","_args69","_context69","_ref97","_callee70","_ref98","_ref99","_context70","_x100","getCurveDepositContract","_callee71","depositContractInfo","_context71","getCurveZapContract","_callee72","zapContractInfo","_context72","_callee73","poolContractInfo","_context73","_callee74","_context74","getCurveIdleTokensAmounts","_callee76","max_slippage","curveTokenSupply","curveTokenShare","_args76","_context76","_ref105","_callee75","curveIdleTokens","_context75","_x101","getCurveTokensAmounts","_callee78","_args78","_context78","_ref107","_callee77","_ref108","_ref109","totalTokenSupply","_context77","_x102","getCurveAmounts","_ref110","_callee80","_args80","_context80","_ref111","_callee79","_context79","_x105","_x103","_x104","getCurveTokenAmount","_ref112","_callee81","_args81","_context81","_x106","getCurveSlippage","_ref113","_callee82","uneven_amounts","_ref114","_ref115","virtualPrice","Sv","_args82","_context82","_x107","_x108","getCompAPR","_ref116","_callee83","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","cTokenInfo","compValue","compoundAllocation","_ref117","_ref118","_args83","_context83","getCompDistribution","_x109","_x110","_ref119","_callee84","compoundAllocationPerc","_ref120","_ref121","cTokenTotalSupply","compSpeed","_args84","_context84","_x111","_callee86","_args86","_context86","_ref123","_callee85","_ref124","_ref125","compApr","_context85","_x112","getTokensCsv","_callee89","csv","_context89","prototype","sum","pv","cv","avg","_ref127","_callee88","_context88","_ref128","_callee87","header","rows","aprAvg","scoreAvg","lastRow","_context87","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x114","_x113","_callee91","_args91","_context91","_ref130","_callee90","compTokenBalance","_context90","_x115","getIdleGovToken","getGovTokensAprs","_ref131","_callee93","govTokensAprs","_args93","_context93","_ref132","_callee92","govTokenApr","_ref133","_ref134","compoundInfo","_context92","_x118","_x116","_x117","_callee95","_args95","_context95","_ref136","_callee94","tokenConversionRate","fromTokenConfig","_context94","_x119","getGovTokenConfigByAddress","_callee96","govTokensEarnings","_args96","_context96","acc","govTokenAmount","_callee99","_args99","_context99","_ref139","_callee98","idleTokenConfig","govTokensAmounts","_context98","_ref140","_callee97","govTokenAddress","_context97","_x121","_x122","_x120","_callee100","_args100","_context100","_callee101","_ref143","_ref144","gain","fees","_args101","_context101","_ref145","_callee102","_args102","_context102","_x123","getAggregatedStats","_callee105","avgAPR","totalAUM","_args105","_context105","_ref147","_callee104","_context104","_ref148","_callee103","oldTokenAllocation","oldTokenTotalAllocation","_context103","_x125","_x124","getTokenApy","_ref149","_callee106","_context106","_x126","_callee109","_args109","_context109","_ref151","_callee108","_context108","_ref152","_callee107","_ref153","_context107","_x128","_x127","getProtocolsTokensBalances","_callee111","tokenBalances","minTokenBalance","protocolsTokens","_args111","_context111","_ref155","_callee110","tokenContract","_context110","_x129","_ref156","_callee112","_args112","_context112","_x130","_x131","_x132","_ref157","_callee113","_args113","_context113","_x133","_x134","_ref158","_callee114","_ref159","_ref160","_context114","protocolScore","getTokenScoreApi","_x135","_x136","_ref161","_callee115","_context115","_x137","_x138","_ref162","_callee117","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args117","_context117","_ref163","_callee116","addrIndex","protocolApr","protocolApy","_context116","_x140","_x141","_x139","isNegative","suffixNum","decimalPart","mod","toPrecision","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","menuLink","menuIndex","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensUserBalance","govTokensTotalAprTooltip","govTokensTotalBalanceTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","verticalAlign","AssetPage","tokenFees","availableGovTokens","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","txStatus","claimCallback","DashboardHeader","govModalOpened","isDashboard","isGovernance","dashboardRoute","governanceRoute","src_MenuAccount_MenuAccount","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","accountBalance","accountBalanceToken","accountBalanceLow","web3Infura","checkPreflight","rejectAccountConnect","accountValidationPending","rejectValidation","enableUnderlyingWithdraw","checkNetwork","userRejectedValidation","transactionConnectionModalIsOpen","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","closeUserRejectedValidationModal","openUserRejectedValidationModal","openConnectionErrorModal","openTransactionErrorModal","openWrongNetworkModal","openLowFundsModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getCurrentDelegate","getCurrentVotes","votes","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","getDelegates","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","delegateAccounts","all_votes","_e$returnValues","returnValues","getVotes","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args15","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","governanceUtil","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","newDelegate","checkNewDelegate","currentDelegate","changeDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.f7418f61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__1G5iO\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__3HlA5\",\"bgContainer\":\"PageNotFound_bgContainer__16Bn7\",\"list\":\"PageNotFound_list__rJgDr\",\"textContainer\":\"PageNotFound_textContainer__2hI3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__3RZVU\",\"empty\":\"Header_empty__1vLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__30U-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__ciXDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__2Fu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__3-tUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__fYFu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__Km4rQ\",\"newPill\":\"CryptoInput_newPill__6lu6P\",\"mainInput\":\"CryptoInput_mainInput__H7-Y7\",\"button\":\"CryptoInput_button__2c5mT\",\"gradientButton\":\"CryptoInput_gradientButton__3fhnj\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__33Yn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__XoI9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__4jmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__1Tm4t\",\"headerBgFiller\":\"Tos_headerBgFiller__1Elt6\",\"bgContainer\":\"Tos_bgContainer__Bqzo0\",\"list\":\"Tos_list__2AtPw\",\"textContainer\":\"Tos_textContainer__xCW50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__3aRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__Bj_aP\",\"hidden\":\"DashboardCard_hidden__13XeU\",\"interactive\":\"DashboardCard_interactive__34cn8\",\"active\":\"DashboardCard_active__3L5-p\",\"rainbow\":\"DashboardCard_rainbow__3z92q\",\"disabled\":\"DashboardCard_disabled__2kZdZ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#4f4f4f',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#4f4f4f',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#4f4f4f',\n      },\n      actionBg:{\n        send:'#dadada',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#dadada',\n        migrate:'#ced6ff',\n        withdraw:'#dadada',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  delegateVesting = async (account=null,delegate=null) => {\n    account = account ? account : this.props.account;\n\n    const founderVesting = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n    console.log('founderVesting',account,founderVesting);\n\n    if (parseInt(founderVesting) === 0){\n      return false;\n    }\n\n    await this.props.initContract('Vester',founderVesting,VesterABI);\n    // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n    await this.functionsUtil.contractMethodSendWrapper('Vester','setDelegate',[delegate]);\n\n    console.log('delegates vesterFounder to founder');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[tokenConfig.idle.address]);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,distribution);\n    }\n\n    return null;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenPrice:output.toString()\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n          }\n          output = oldContractBalanceFormatted;\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenAPR:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              this.state.govTokens.map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:this.state.govTokens.length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}%</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n        const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n        const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              idleTokenEnabled && showTooltip && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      message:apyLong,\n                      placement:'top',\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport { Flex, Heading, Icon, Link } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        pb={[2,3]}\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'flex-start'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Icon\n                  ml={1}\n                  name={\"Info\"}\n                  color={'cellTitle'}\n                  size={ this.props.isMobile ? '1em' : '1.2em'}\n                />\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPR = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPR = tokenAprs.avgApr;\n        tokenAPY = this.functionsUtil.apr2apy(tokenAPR.div(100));\n        earningsYear = amountLent.times(tokenAPY);\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!amountLent.isNaN() && !idleTokenPrice.isNaN() && !earnings.isNaN() && !earningsYear.isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPR = this.functionsUtil.BNify(tokenAprs.avgApr).div(100);\n          const tokenAPY = this.functionsUtil.apr2apy(tokenAPR).times(100);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n\n        const earningsStart = totalEarnings.plus(govTokensTotalBalance);\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100)).plus(govTokensTotalBalance);\n\n        // debugger;\n\n        const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n        const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:showAPYDisclaimer ? this.functionsUtil.getGlobalConfig(['messages','apyLong']) : null\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings also include accrued interest and yield from governance tokens'+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (~ $${govTokensTotalBalance.toFixed(2)})` : ''),\n              children:(\n                <CountUp\n                  delay={0}\n                  decimals={8}\n                  decimal={'.'}\n                  separator={''}\n                  useEasing={false}\n                  duration={31536000}\n                  end={parseFloat(earningsEnd)}\n                  start={parseFloat(earningsStart)}\n                  formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,12,8) }\n                >\n                  {({ countUpRef, start }) => (\n                    <span\n                      ref={countUpRef}\n                      style={{\n                        lineHeight:1,\n                        color:this.props.theme.colors.copyColor,\n                        fontFamily:this.props.theme.fonts.counter,\n                        fontWeight: this.props.isMobile ? 600 : 700,\n                        fontSize:this.props.isMobile ? '21px' : '1.7em',\n                      }}\n                    />\n                  )}\n                </CountUp>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    /*\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const availableGovTokens = Object.keys(govTokens).reduce((enabledTokens,token) => {\n      if (govTokens[token].enabled){\n        enabledTokens[token] = govTokens[token];\n      }\n      return enabledTokens;\n    },{});\n    */\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex id=\"available-assets\" width={1} flexDirection={'column'}>\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.2,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.16],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:0.16,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.12],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.1],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.18,0.08],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.25,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.12],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.2,this.state.depositedTokens.length>0 ? 0.10 : 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.17],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width: this.state.depositedTokens.length>0 ? 0.28 : 0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                /*\n                Object.keys(availableGovTokens).length>0 && \n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(availableGovTokens)}\n                      handleClick={(props) => {}}\n                      cols={[\n                        {\n                          title:'CURRENCY',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.24, 0.19],\n                          },\n                          fields:[\n                            {\n                              name:'pool',\n                              props:{\n                                decimals:2\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR',\n                          props:{\n                            width:[0.23,0.19],\n                          },\n                          fields:[\n                            {\n                              name:'apr'\n                            }\n                          ]\n                        },\n                        {\n                          title:'BALANCE',\n                          props:{\n                            width:[0.23,0.19],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'balance'\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR LAST WEEK',\n                          mobile:false,\n                          props:{\n                            width: 0.28,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'aprChart',\n                            }\n                          ]\n                        },\n                      ]}\n                      {...this.props}\n                      availableTokens={availableGovTokens}\n                    />\n                  </Flex>\n                */\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={2} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                How do you prefer to buy {this.state.selectedToken}?\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.0',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (i) the current yield advertised by the underlying protocol, (ii) the current distribution rate of IDLE based on percentage share of liquidity pool and (iii) the current estimated price of IDLE and other governance tokens.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAPR:true, // Include IDLE Apr\n      protocol:'idle',\n      showBalance:true, // Include IDLE balance in earnings\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAPR:true, // Include COMP Apr\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'iEarn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              // console.log('avgPrice',selectedToken,idleTokens.toFixed(5),tokenPrice.toFixed(5),idleTokensBalance.toFixed(5),prevAvgBuyPrice.toFixed(5),avgBuyPrice.toFixed(5));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save new etherscan txs\n              this.saveCachedRequest(etherscanBaseEndpoint,false,etherscanBaseTxs);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n\n        const etherscanTxsToStore = {};\n\n        Object.keys(etherscanTxs).forEach(txHash => {\n          const txInfo = etherscanTxs[txHash];\n          if (txInfo.blockNumber){\n            etherscanTxsToStore[txHash] = txInfo;\n          }\n        });\n\n        const cachedRequestData = {\n          data:{\n            result:etherscanTxsToStore\n          }\n        };\n\n        this.saveCachedRequest(etherscanBaseEndpoint,false,cachedRequestData);\n      }\n    }\n\n    // this.customLog('etherscanTxs',etherscanTxs);\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (enabledTokens.includes(tx.token.toUpperCase())) )\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[]) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice/* && txHash.toLowerCase() !== '0x000000000000000000000000000'.toLowerCase()*/){\n          return false;\n        }\n        // const txFound = etherscanTxs.find(etherscanTx => (etherscanTx.hash === tx.transactionHash && etherscanTx.status === tx.status) );\n        // if (txFound){\n        //   return false;\n        // }\n\n        if (txPending && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n    }\n\n    if (localStorage) {\n      const timestamp = parseInt(new Date().getTime()/1000);\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      return this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return false;\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key]){\n        return cachedRequests[key].data;\n      }\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n        return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n      }\n    }\n\n    const data = await axios\n                        .get(endpoint)\n                        .catch(err => {\n                          console.error('Error getting request');\n                        });\n    if (localStorage) {\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n            output = tokenAllocation.totalAllocationWithUnlent;\n          }\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedData(cachedDataKey);\n      if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    if (blockNumber !== 'latest'){\n      this.setCachedData(cachedDataKey,tokenPrice);\n    }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=120) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  getCachedData = (key,defaultValue=null) => {\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      const cachedData = this.props.cachedData[key.toLowerCase()];\n      if (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000)){\n        return cachedData.data;\n      }\n    }\n    return defaultValue;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      return this.setCachedData(cachedDataKey,tokenBalance);\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationWithUnlent:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.protocolsBalances = protocolsBalances;\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',tokenConfigDest.address,price);\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          return this.setCachedData(cachedDataKey,curveApy);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let compAPR = this.BNify(0);\n\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      let compoundAllocation = null;\n\n      cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'totalSupply');\n\n      // this.customLog('getCompAPR',cTokenInfo.token,cTokenIdleSupply ? cTokenIdleSupply.toString() : null);\n\n      if (cTokenIdleSupply){\n        let [tokenDecimals,exchangeRate] = await Promise.all([\n          this.getTokenDecimals(cTokenInfo.token),\n          this.genericContractCall(cTokenInfo.token,cTokenInfo.functions.exchangeRate.name,cTokenInfo.functions.exchangeRate.params)\n        ]);\n\n        if (exchangeRate){\n          exchangeRate = this.fixTokenDecimals(exchangeRate,cTokenInfo.decimals);\n          compoundAllocation = this.fixTokenDecimals(cTokenIdleSupply,tokenDecimals,exchangeRate);\n          // this.customLog('getCompAPR',token,compValue.toString(),cTokenIdleSupply.toString(),exchangeRate.toString(),tokenDecimals.toString(),compoundAllocation.toString());\n        }\n      }\n\n      if (compoundAllocation){\n        compoundAllocation = await this.convertTokenBalance(compoundAllocation,token,tokenConfig,false);\n        compAPR = compValue.div(compoundAllocation).times(100);\n\n        // this.customLog('getCompAPR',cTokenInfo.token,compConversionRate.toString(),compDistribution.toString(),compValue.toString(),cTokenIdleSupply.toString(),compoundAllocation.toString(),compAPR.toString()+'%');\n\n        this.setCachedData(cachedDataKey,compAPR);\n      }\n    }\n\n    return compAPR;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [cTokenTotalSupply,compSpeed] = await Promise.all([\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n          this.genericContractCall('Comptroller','compSpeeds',[cTokenInfo.address])\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compDistribution = this.BNify(compSpeed).times(this.BNify(blocksPerYear)).div(1e18);\n\n            this.setCachedData(cachedDataKey,compDistribution);\n\n            return compDistribution;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = [];\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output.push(govTokenConfig);\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output.push(govTokenConfig);\n        }\n      }\n    });\n    return output;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || !govTokenConfig.showAPR){\n        return;\n      }\n\n      let govTokenApr = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          [govTokenApr,tokenAllocation] = await Promise.all([\n            this.getCompAPR(token,tokenConfig),\n            this.getTokenAllocation(tokenConfig,false,false)\n          ]);\n\n          // Cut the COMP token proportionally on Idle funds allocation in compound\n          if (tokenAllocation){\n            const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n            if (compoundInfo){\n              if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                govTokenApr = govTokenApr.times(compoundAllocationPerc);\n              }\n            }\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken(this.props);\n          govTokenApr = await idleGovToken.getAPR(token,tokenConfig);\n          // console.log('IDLE APR 2',govTokenApr.toFixed());\n        break;\n        default:\n        break;\n      }\n\n      if (govTokenApr !== null && this.BNify(govTokenApr).gt(0)){\n        govTokensAprs[govToken] = govTokenApr;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken);\n    if (govTokensUserBalances){\n      // debugger;\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return govTokensEarnings;\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfig=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            if (!govTokenConfig){\n              govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            }\n\n            if (govTokenConfig && govTokenConfig.showBalance && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    let avgAPR = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // this.customLog(strategy,token,totalAllocation.toString(),totalAUM.toString());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr))\n          }\n        }\n\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // this.customLog(strategy,token,'old',oldTokenTotalAllocation.toString(),totalAUM.toString());\n          }\n\n          // debugger;\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    const avgAPY = this.apr2apy(avgAPR.div(100)).times(100);\n\n    return {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        return this.setCachedData(cachedDataKey,conversionRate);\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          return this.setCachedData(cachedDataKey,tokenScore);\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          const compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n\n          if (compAPR){\n            protocolApr = protocolApr.plus(compAPR);\n            protocolApy = protocolApy.plus(compAPR);\n          }\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null,\n      protocolsAprs,\n      protocolsApys\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAprs);\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseFloat(parseInt(newValue)+( decimalPart ? '.'+decimalPart : '' ) );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      decimals += difference;\n      newValue = this.BNify(value).abs().toFixed(decimals);\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    // this.customLog('abbreviateNumber',value,decimals,maxPrecision,minPrecision,newValue);\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,4],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              my={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['410px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n        this.props.menu.map((menuLink,menuIndex) => (\n          <Box\n            my={[0,3]}\n            key={`menu-${menuIndex}`}\n            width={[1/this.props.menu.length,'auto']}\n          >\n            <RouterLink\n              to={menuLink.route}\n              style={{textDecoration:'none'}}\n            >\n              <Flex\n                p={[2,3]}\n                borderRadius={[0,2]}\n                flexDirection={'row'}\n                alignItems={'center'}\n                backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={['center','flex-start']}\n                >\n                  {menuLink.image &&\n                    <Image\n                      mr={[0,3]}\n                      ml={[0,2]}\n                      mb={[1,0]}\n                      align={'center'}\n                      src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                      height={['1.2em','1.6em']}\n                    />\n                  }\n                  {menuLink.icon &&\n                    <Icon\n                      mr={[0,3]}\n                      ml={[0,2]}\n                      mb={[1,0]}\n                      align={'center'}\n                      name={menuLink.icon}\n                      size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                      color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                    />\n                  }\n                  <Text\n                    fontWeight={3}\n                    color={'copyColor'}\n                    textAlign={'center'}\n                    fontSize={['11px',2]}\n                    style={{\n                      whiteSpace:'nowrap'\n                    }}\n                  >\n                    {menuLink.label}\n                  </Text>\n                </Flex>\n                {\n                  /*\n                  menuLink.submenu.length>0 &&\n                    <Flex width={1/4} justifyContent={'flex-end'}>\n                      <Icon\n                        mr={2}\n                        size={'1rem'}\n                        align={'right'}\n                        name={ menuLink.selected ? 'KeyboardArrowDown' : 'KeyboardArrowRight' }\n                        color={'copyColor'}\n                      />\n                    </Flex>\n                  */\n                }\n              </Flex>\n            </RouterLink>\n            {\n              /*\n              menuLink.submenu.length>0 && (\n                <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                  {\n                    menuLink.submenu.map((submenuLink,submenuIndex) => {\n                      return (\n                        <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                          <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                            <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                          </Flex>\n                        </RouterLink>\n                      )\n                    })\n                  }\n                </Flex>\n              )\n              */\n            }\n          </Box>\n        ))\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\n// import Toggler from '../Toggler/Toggler';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.3,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.21,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:showAPYDisclaimer ? apyLong : null,\n                        props:{\n                          width: [0.19,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'apy'\n                          }\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.3,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Icon, Tooltip } from \"rimble-ui\";\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `${govToken}: $${balance.toFixed(2)}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokenAvailableTokens,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensUserBalance).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          ${this.state.govTokensUserBalance[govToken].toFixed(4)} {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={`This fee is charged on positive returns generated by Idle`}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    const tokenApy = await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (tokenApy && !tokenApy.isNaN()){\n      this.setState({\n        tokenApy\n      },() => {\n        this.loadChart();\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  loadChart(){\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(this.state.tokenApy);\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n      newState.availableGovTokens = govTokens.reduce((enabledTokens,govTokenConfig) => {\n        enabledTokens[govTokenConfig.token] = govTokenConfig;\n        return enabledTokens;\n      },{});\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              flexDirection={'column'}\n              id={\"earnings-estimation\"}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      /*\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                      */\n                    ]\n                  },/*\n                  {\n                    title:'APR',\n                    props:{\n                      width:[0.20,0.19],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                        parentProps:{\n                          alignItems:['center','flex-start']\n                        }\n                      }\n                    ]\n                  },*/\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, iEarn and Idle V2 with just one transaction and with no cost.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport { Text, Modal, Flex/*, Checkbox*/ } from \"rimble-ui\";\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  /*\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                  */\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              <Flex\n                mb={3}\n                width={1}\n                zIndex={10}\n                position={'relative'}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                {\n                  // Sending transaction\n                  this.state.processing && this.state.processing.loading ? (\n                    <TxProgressBar\n                      textColor={'white'}\n                      web3={this.props.web3}\n                      cancelTextColor={'moon-gray'}\n                      cancelTextHoverColor={'white'}\n                      waitText={`Claim estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing Claim request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  ) : (\n                    <RoundButton\n                      buttonProps={{\n                        color:'blue',\n                        width:[1,'45%'],\n                        mainColor:'white',\n                        contrastColor:'blue',\n                        disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                      }}\n                      handleClick={this.claim.bind(this)}\n                    >\n                      Claim\n                    </RoundButton>\n                  )\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GovModal from \"../utilities/components/GovModal\";\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // const buttonSize = this.props.isMobile ? 'small' : 'medium';\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enaugh funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  contracts: [],\n  account: {},\n  accountBalance: {},\n  accountBalanceToken: {},\n  accountBalanceLow: {},\n  tokenConfig: {},\n  web3: {},\n  web3Infura: {},\n  initWeb3: () => {},\n  biconomy: {},\n  simpleID: {},\n  initSimpleID: () => {},\n  transactions: {},\n  checkPreflight: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  initializeContracts: () => {},\n  getAccountBalance: () => {},\n  getTokenDecimals: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  accountInizialized: false,\n  contractsInitialized: false,\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n      connectionError: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils = () => {\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n\n    // window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if (connectorName === 'Infura' && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // if (call_callback){\n        //   alert('confirmationCallback')\n        // }\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          // this.functionsUtil.customLog('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      // this.functionsUtil.customLog('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    if (['pending','success','confirmed'].includes(transaction.status.toLowerCase())){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,totalSupply);\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.BNify(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    const delegations = all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n\n    const delegateAccounts = {};\n\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    const all_votes = await this.getVotes();\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / 10000000)).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,delegates)\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : \n        // Has balance\n        this.props.balance && this.props.balance.gt(0) ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mb={2}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n              </Text>\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.account}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You don't have any {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} token to delegate.\n          </Text>\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    actionValue:0,\n    txError:false,\n    customABI:null,\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.BNify(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.BNify(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    console.log(inputs,action);\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = this.props.proposal.id;\n\n    console.log(proposalId,vote);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.props.votes.lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={2}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.props.balance.gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        <CastVote\n          {...this.props}\n          callback={this.props.loadData}\n        />\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                    borderRadius={'20px 0 0 20px'}\n                    style={{background:'rgba(0, 211, 149, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      borderRadius={'20px 0 0 20px'}\n                      style={{background:'rgba(0, 211, 149, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                    borderRadius={'0 20px 20px 0'}\n                    style={{background:'rgba(211, 0, 0, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${againstVotesPerc}%`}\n                      borderRadius={'0 20px 20px 0'}\n                      style={{background:'rgba(211, 0, 0, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      minWidth={'10%'}\n                      width={`${againstVotesPerc}%`}\n                      justifyContent={parseFloat(againstVotesPerc)<=10 ? 'flex-start' : 'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Blockie } from \"rimble-ui\";\nimport StatsCard from '../../StatsCard/StatsCard';\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={delegate.delegate}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n        submenu:[]\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n        submenu:[]\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null) => {\n    if (!this.state.cachedData[key.toLowerCase()] || JSON.stringify(this.state.cachedData[key.toLowerCase()]) !== JSON.stringify(data)){\n      const expirationDate = TTL ? parseInt(new Date().getTime()/1000)+(TTL) : null;\n      // console.log('setCachedData',key);\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1fxux\",\"link\":\"Footer_link__2ZyxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__3LsWh\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__3buhf\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1ZEqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__3FM3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__ShSGs\",\"genericSelector\":\"GenericSelector_genericSelector__36y-l\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__16UDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__6-FCa\",\"headerContainer\":\"Landing_headerContainer__2su89\",\"bgContainer\":\"Landing_bgContainer__srd1P\",\"button\":\"Landing_button__37B6t\",\"graySection\":\"Landing_graySection__1Qz0S\",\"whiteSection\":\"Landing_whiteSection__1mX5m\",\"howItWork\":\"Landing_howItWork__2sVu4\",\"skewBg\":\"Landing_skewBg__d4FEJ\",\"bgHeart\":\"Landing_bgHeart__1Ylz-\",\"platformLogo\":\"Landing_platformLogo__3kL_M\",\"bulletCard\":\"Landing_bulletCard__z5toL\",\"bulletCardFirst\":\"Landing_bulletCardFirst__1kr7D\",\"bulletCardActive\":\"Landing_bulletCardActive__1-c54\",\"bulletPoint\":\"Landing_bulletPoint__sXkeK\",\"bulletRight\":\"Landing_bulletRight__24r1L\",\"bulletTop\":\"Landing_bulletTop__1D98q\",\"bulletLeft\":\"Landing_bulletLeft__Yeirx\",\"bulletBottom\":\"Landing_bulletBottom__OdDmd\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__WOkHg\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__1t9j_\",\"bulletMobile\":\"Landing_bulletMobile__2_A1d\",\"carouselItem\":\"Landing_carouselItem__iAvJJ\",\"pos1\":\"Landing_pos1__BEcBQ\",\"carouselItemMobile\":\"Landing_carouselItemMobile__9dvMX\",\"pos2\":\"Landing_pos2__2VA0X\",\"pos3\":\"Landing_pos3__2cKcn\",\"bentTube\":\"Landing_bentTube__10LD1\",\"bounceArrow\":\"Landing_bounceArrow__1mS5k\",\"bounce\":\"Landing_bounce__3i1p8\",\"rebalanceCircle\":\"Landing_rebalanceCircle__5B-sA\",\"spin\":\"Landing_spin__itue9\",\"carouselDesc\":\"Landing_carouselDesc__10ELo\",\"selected\":\"Landing_selected__3Tblg\",\"carouselNav\":\"Landing_carouselNav__1KJNZ\",\"footer\":\"Landing_footer__U-Goi\",\"socialIcon\":\"Landing_socialIcon__1AsMX\",\"gradientBackground\":\"Landing_gradientBackground__3tbgP\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3pniz\",\"bentTubeRight\":\"Landing_bentTubeRight__17O9r\",\"bentTubeActive\":\"Landing_bentTubeActive__1ZzDg\",\"bg1\":\"Landing_bg1__xhb36\"};"],"sourceRoot":""}