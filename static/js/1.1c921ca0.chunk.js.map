{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","HoverImage/HoverImage.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","claimVestedTokens","_callee4","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","delegateVesting","_callee5","delegate","_args5","_context5","getVestingAmount","_callee6","vestingAmount","_args6","_context6","getCurrentDelegate","_callee7","_args7","_context7","getCurrentVotes","_callee8","votes","_args8","_context8","getVotingPeriod","_callee9","votingPeriod","_context9","getTimelockDelay","_callee10","delay","_context10","queueProposal","_ref11","_callee11","proposalId","_args11","_context11","toBN","_x","apply","executeProposal","_ref12","_callee12","_args12","_context12","_x2","proposeAndVoteFor","_ref13","_callee13","targets","values","signatures","calldatas","description","batcher","contract","txs","_context13","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref14","_callee14","_args14","_context14","_x8","_x9","_x10","_x11","_x12","_ref15","_callee15","support","_args15","_context15","_x13","_x14","setDelegate","_ref16","_callee16","_args16","_context16","_x15","getDelegatesChanges","_callee17","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context17","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee18","_context18","getDelegates","_callee19","limit","_ref20","_ref21","all_votes","delegateAccounts","delegates","_args19","_context19","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee20","govContractName","_ref23","_ref24","proposalThreshold","proposalMaxOperations","params","_context20","getCachedData","setCachedData","_callee21","governanceContractName","_context21","map","_e$returnValues2","getProposals","_callee23","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref27","_ref28","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args23","_context23","p","state","find","Array","from","n","reverse","asyncForEach","_ref29","_callee22","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref30","_ref31","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context22","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","DashboardMenu","logout","buyModalOpened","isHover","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","governanceRoute","baseRoute","dashboardRoute","availableStrategies","visibleLinks","menuLink","isVisible","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","height","pb","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","position","src","checkUrlOrigin","borderBottom","theme","colors","divider","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","py","pr","mx","boxShadow","display","borderRadius","justifySelf","handleClick","isDashboard","goToSection","px","onMouseEnter","onMouseLeave","_HoverImage_HoverImage__WEBPACK_IMPORTED_MODULE_9__","hoverOn","noHover","hover","imageProps","mr","alignSelf","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_14__","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","style","textDecoration","border","selected","backgroundColor","align","icon","whiteSpace","setThemeMode","HoverImage","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","networkId","networkConfig","config","requiredNetwork","getRequiredNetwork","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","outerColor","isSearchable","innerProps","customOptionProps","pl","notInteractive","noShadow","options","CustomOptionValue","imageSrc","data","provider","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","bg","innerxProps","cursor","isCorrectNetwork","isActive","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","Date","now","notificationsParams","getStoredItem","setLocalStorage","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","div","oneWeekAgoBlock","minus","polygonBridgeEnabled","enabled","includes","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","transactions","status","completed","polygonBridgeBaseUrl","tx","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","textOverflow","AccountModal","balances","loadBalances","regenerator_default","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","viewOnly","rows","renderBalances","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","toggleMenu","menuOpened","alt","borderRight","ShortHash","src_Notifications_Notifications","setGovModal","connectAndValidateAccount","components_AccountModal","RoundButton","alignContent","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","newState","claimCallback","claimRewards","requiredNetworkChanged","currentNetworkId","getRequiredNetworkId","bgLayer","mainColor","background","titleProps","gt","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DashboardHeader","loadData","networkChanged","menuRightBorder","src_MenuAccount_MenuAccount","hoverColor","components_GovModal","list"],"mappings":"0KA6oBeA,IAjoBb,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GAAAG,KAJlBF,MAAQ,GAIUE,KAHlBG,cAAgB,KAGEH,KAKlBI,SAAW,SAAAN,GACTC,EAAKD,MAAQA,EAETC,EAAKI,cACPJ,EAAKI,cAAcC,SAASL,EAAKD,OAEjCC,EAAKI,cAAgB,IAAIE,IAAcN,EAAKD,QAX9BE,KAelBM,eAfkBL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAeD,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGTP,EAAgB,mBAChBC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QALzC,CAAAL,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SAMNV,GANM,cASTC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cATnEP,EAAAE,KAAA,EAUSpB,EAAKI,cAAcsB,oBAAoBX,EAAa,eAV7D,YAUXC,EAVWE,EAAAS,MAAA,CAAAT,EAAAE,KAAA,gBAYbJ,EAAchB,EAAKI,cAAcwB,iBAAiBZ,EAAY,IAZjDE,EAAAM,OAAA,SAaNxB,EAAKI,cAAcyB,8BAA8BhB,EAAcG,EAAY,OAbrE,eAAAE,EAAAM,OAAA,SAgBR,MAhBQ,yBAAAN,EAAAY,SAAAlB,EAAAX,SAfCA,KAkClB8B,iBAlCkB7B,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkCC,SAAAqB,IAAA,IAAAC,EAAApB,EAAAC,EAAAC,EAAAmB,EAAAC,EAAAC,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,YAEjBa,GAFwBA,EAAPE,EAAAG,OAAA,QAAAC,IAAAJ,EAAA,GAAAA,EAAA,GAAe,OAEFnC,EAAKD,MAAMkC,SAFxB,CAAAI,EAAAjB,KAAA,YAMTP,EANS,oBAAA2B,OAM2BP,KACpCnB,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QARzC,CAAAc,EAAAjB,KAAA,eAAAiB,EAAAb,OAAA,SASNV,GATM,cAYTC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAZnEY,EAAAjB,KAAA,GAaOpB,EAAKI,cAAcqC,mBAAmB1B,EAAckB,GAb3D,aAaTC,EAbSG,EAAAV,OAcC3B,EAAKI,cAAckB,MAAMY,GAASX,QAdnC,CAAAc,EAAAjB,KAAA,gBAAAiB,EAAAb,OAAA,SAeNxB,EAAKI,cAAcyB,8BAA8BhB,EAAcb,EAAKI,cAAckB,MAAMY,KAflF,eAAAG,EAAAb,OAAA,SAkBV,MAlBU,yBAAAa,EAAAP,SAAAE,EAAA/B,SAlCDA,KAuDlByC,mBAvDkBxC,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAuDG,SAAAgC,IAAA,IAAAV,EAAAW,EAAAC,EAAAT,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACnBa,GAD0BA,EAAPY,EAAAP,OAAA,QAAAC,IAAAM,EAAA,GAAAA,EAAA,GAAe,OACJ7C,EAAKD,MAAMkC,QADtBa,EAAA1B,KAAA,EAEWpB,EAAKI,cAAcsB,oBAAoB,gBAAgB,mBAAmB,CAACO,IAFtF,UAEbW,EAFaE,EAAAnB,KAIe,IAA9BoB,SAASH,GAJM,CAAAE,EAAA1B,KAAA,eAAA0B,EAAAtB,OAAA,SAKV,MALU,cAAAsB,EAAA1B,KAAA,EAQbpB,EAAKD,MAAMiD,aAAa,kBAAkBJ,EAAgBK,GAR7C,cAAAH,EAAAtB,OAAA,SASZoB,GATY,yBAAAE,EAAAhB,SAAAa,EAAA1C,SAvDHA,KAmElBiD,kBAnEkBhD,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAmEE,SAAAwC,IAAA,IAAAlB,EAAAmB,EAAAC,EAAAC,EAAAlB,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAOa,EAAPqB,EAAAhB,OAAA,QAAAC,IAAAe,EAAA,GAAAA,EAAA,GAAe,KAAKF,EAApBE,EAAAhB,OAAA,QAAAC,IAAAe,EAAA,GAAAA,EAAA,GAA6B,KAAKD,EAAlCC,EAAAhB,OAAA,QAAAC,IAAAe,EAAA,GAAAA,EAAA,GAAkD,KACpErB,EAAUA,GAAoBjC,EAAKD,MAAMkC,QADvBsB,EAAAnC,KAAA,EAEWpB,EAAK0C,mBAAmBT,GAFnC,WAAAsB,EAAA5B,KAAA,CAAA4B,EAAAnC,KAAA,gBAAAmC,EAAAnC,KAAA,GAIHpB,EAAKI,cAAcoD,0BAA0B,kBAAkB,QAAQ,GAAGJ,EAASC,GAJhF,eAAAE,EAAA/B,OAAA,SAAA+B,EAAA5B,MAAA,eAAA4B,EAAA/B,OAAA,SAMX,MANW,yBAAA+B,EAAAzB,SAAAqB,EAAAlD,SAnEFA,KA4ElBwD,gBA5EkBvD,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA4EA,SAAA+C,IAAA,IAAAzB,EAAA0B,EAAAP,EAAAC,EAAAO,EAAAxB,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAOa,EAAP2B,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAAe,KAAKD,EAApBC,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAA6B,KAAKR,EAAlCQ,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAA2C,KAAKP,EAAhDO,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAAgE,KAChF3B,EAAUA,GAAoBjC,EAAKD,MAAMkC,QADzB4B,EAAAzC,KAAA,EAEapB,EAAK0C,mBAAmBT,GAFrC,WAAA4B,EAAAlC,KAAA,CAAAkC,EAAAzC,KAAA,gBAAAyC,EAAAzC,KAAA,GAKDpB,EAAKI,cAAcoD,0BAA0B,kBAAkB,cAAc,CAACG,GAAUP,EAASC,GALhG,eAAAQ,EAAArC,OAAA,SAAAqC,EAAAlC,MAAA,eAAAkC,EAAArC,OAAA,SAOT,MAPS,yBAAAqC,EAAA/B,SAAA4B,EAAAzD,SA5EAA,KAsFlB6D,iBAtFkB5D,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAsFC,SAAAoD,IAAA,IAAA9B,EAAA+B,EAAAC,EAAA7B,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cACjBa,GADwBA,EAAPgC,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,GAAAA,EAAA,GAAe,OACFjE,EAAKD,MAAMkC,QADxBiC,EAAA9C,KAAA,EAEYpB,EAAK0C,mBAAmBT,GAFpC,WAAAiC,EAAAvC,KAAA,CAAAuC,EAAA9C,KAAA,gBAAA8C,EAAA9C,KAAA,EAIWpB,EAAKI,cAAcsB,oBAAoB,kBAAkB,iBAJpE,YAIXsC,EAJWE,EAAAvC,MAAA,CAAAuC,EAAA9C,KAAA,gBAAA8C,EAAA1C,OAAA,SAMNxB,EAAKI,cAAckB,MAAM0C,IANnB,eAAAE,EAAA1C,OAAA,SASV,MATU,yBAAA0C,EAAApC,SAAAiC,EAAA9D,SAtFDA,KAkGlBkE,mBAlGkBjE,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkGG,SAAAyD,IAAA,IAAAnC,EAAApB,EAAAC,EAAAC,EAAA4C,EAAAU,EAAAjC,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,YAEnBa,GAF0BA,EAAPoC,EAAA/B,OAAA,QAAAC,IAAA8B,EAAA,GAAAA,EAAA,GAAe,OAEJrE,EAAKD,MAAMkC,SAFtB,CAAAqC,EAAAlD,KAAA,YAMXP,EANW,sBAAA2B,OAM2BP,KACtCnB,EAAad,EAAKI,cAAciB,8BAA8BR,IAPnD,CAAAyD,EAAAlD,KAAA,eAAAkD,EAAA9C,OAAA,SASRV,GATQ,cAYXC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAZjE6C,EAAAlD,KAAA,GAaMpB,EAAKI,cAAcsB,oBAAoBX,EAAc,YAAa,CAACkB,IAbzE,eAaX0B,EAbWW,EAAA3C,KAAA2C,EAAA9C,OAAA,SAeVxB,EAAKI,cAAcyB,8BAA8BhB,EAAc8C,IAfrD,eAAAW,EAAA9C,OAAA,SAkBZ,MAlBY,yBAAA8C,EAAAxC,SAAAsC,EAAAnE,SAlGHA,KAuHlBsE,gBAvHkBrE,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAuHA,SAAA6D,IAAA,IAAAvC,EAAApB,EAAAC,EAAAC,EAAA0D,EAAAC,EAAAtC,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,YAEhBa,GAFuBA,EAAPyC,EAAApC,OAAA,QAAAC,IAAAmC,EAAA,GAAAA,EAAA,GAAe,OAED1E,EAAKD,MAAMkC,SAFzB,CAAA0C,EAAAvD,KAAA,YAKRP,EALQ,mBAAA2B,OAK2BP,KACnCnB,EAAad,EAAKI,cAAciB,8BAA8BR,IANtD,CAAA8D,EAAAvD,KAAA,eAAAuD,EAAAnD,OAAA,SAQLV,GARK,cAWRC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAXpEkD,EAAAvD,KAAA,GAYMpB,EAAKI,cAAcsB,oBAAoBX,EAAc,kBAAmB,CAACkB,IAZ/E,aAYRwC,EAZQE,EAAAhD,OAaA3B,EAAKI,cAAckB,MAAMmD,GAAOlD,QAbhC,CAAAoD,EAAAvD,KAAA,gBAAAuD,EAAAnD,OAAA,SAcLxB,EAAKI,cAAcyB,8BAA8BhB,EAAcb,EAAKI,cAAckB,MAAMmD,KAdnF,eAAAE,EAAAnD,OAAA,SAkBT,MAlBS,yBAAAmD,EAAA7C,SAAA0C,EAAAvE,SAvHAA,KA4IlB2E,gBA5IkB1E,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA4IA,SAAAkE,IAAA,IAAAhE,EAAAC,EAAAC,EAAA+D,EAAA,OAAArE,EAAAC,EAAAO,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,UAEVP,EAFU,iBAGVC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QAJxC,CAAAwD,EAAA3D,KAAA,eAAA2D,EAAAvD,OAAA,SAKPV,GALO,cAQVC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eARlEsD,EAAA3D,KAAA,EASSpB,EAAKI,cAAcsB,oBAAoBX,EAAa,gBAT7D,YASZ+D,EATYC,EAAApD,MAAA,CAAAoD,EAAA3D,KAAA,gBAWd0D,EAAe9E,EAAKI,cAAckB,MAAMwD,GAX1BC,EAAAvD,OAAA,SAYPxB,EAAKI,cAAcyB,8BAA8BhB,EAAciE,EAAa,OAZrE,eAAAC,EAAAvD,OAAA,SAeT,MAfS,yBAAAuD,EAAAjD,SAAA+C,EAAA5E,SA5IAA,KA8JlB+E,iBA9JkB9E,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA8JC,SAAAsE,IAAA,IAAApE,EAAAC,EAAAoE,EAAA,OAAAzE,EAAAC,EAAAO,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,UAEXP,EAFW,qBAGXC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QAJvC,CAAA4D,EAAA/D,KAAA,eAAA+D,EAAA3D,OAAA,SAKRV,GALQ,cAAAqE,EAAA/D,KAAA,EAQCpB,EAAKI,cAAcsB,oBAAoB,WAAW,SARnD,YAQbwD,EARaC,EAAAxD,MAAA,CAAAwD,EAAA/D,KAAA,gBAUf8D,EAAQlF,EAAKI,cAAckB,MAAM4D,GAVlBC,EAAA3D,OAAA,SAWRxB,EAAKI,cAAcyB,8BAA8BhB,EAAcqE,EAAM,OAX7D,eAAAC,EAAA3D,OAAA,SAcV,MAdU,yBAAA2D,EAAArD,SAAAmD,EAAAhF,SA9JDA,KA+KlBmF,cA/KkB,eAAAC,EAAAnF,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA+KF,SAAA2E,EAAOC,GAAP,IAAAnC,EAAAC,EAAAtC,EAAAyE,EAAApD,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAkBgC,EAAlBoC,EAAAlD,OAAA,QAAAC,IAAAiD,EAAA,GAAAA,EAAA,GAA2B,KAAKnC,EAAhCmC,EAAAlD,OAAA,QAAAC,IAAAiD,EAAA,GAAAA,EAAA,GAAgD,KACxDzE,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eADpEgE,EAAArE,KAAA,EAERpB,EAAKI,cAAcoD,0BAA0BzC,EAAa,QAAQ,CAACf,EAAKI,cAAcsF,KAAKH,IAAanC,EAASC,GAFzG,wBAAAoC,EAAA3D,SAAAwD,EAAArF,SA/KE,gBAAA0F,GAAA,OAAAN,EAAAO,MAAA3F,KAAAmC,YAAA,GAAAnC,KAoLlB4F,gBApLkB,eAAAC,EAAA5F,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAoLA,SAAAoF,EAAOR,GAAP,IAAAnC,EAAAC,EAAAtC,EAAAiF,EAAA5D,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAAkBgC,EAAlB4C,EAAA1D,OAAA,QAAAC,IAAAyD,EAAA,GAAAA,EAAA,GAA2B,KAAK3C,EAAhC2C,EAAA1D,OAAA,QAAAC,IAAAyD,EAAA,GAAAA,EAAA,GAAgD,KAC1DjF,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eADlEwE,EAAA7E,KAAA,EAEVpB,EAAKI,cAAcoD,0BAA0BzC,EAAa,UAAU,CAACf,EAAKI,cAAcsF,KAAKH,IAAanC,EAASC,GAFzG,wBAAA4C,EAAAnE,SAAAiE,EAAA9F,SApLA,gBAAAiG,GAAA,OAAAJ,EAAAF,MAAA3F,KAAAmC,YAAA,GAAAnC,KAyLlBkG,kBAzLkB,eAAAC,EAAAlG,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAyLE,SAAA0F,EAAOC,EAASC,EAAQC,EAAYC,EAAWC,GAA/C,IAAAC,EAAA5F,EAAA6F,EAAAC,EAAA,OAAApG,EAAAC,EAAAO,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,OACZuF,EAAU,IAAII,IAAQ/G,EAAKD,MAAMiH,KAAK,8CAEtCjG,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAC5EmF,EAAW5G,EAAKI,cAAc6G,kBAAkBlG,GAEhD8F,EAAM,CACV,CACEK,GAAGN,EAASO,SACZC,OAAOR,EAASS,QAAQC,QACxBC,KAAK,CAACjB,EAASC,EAAQC,EAAYC,EAAWC,IAEhD,CACEQ,GAAGN,EAASO,SACZC,OAAOR,EAASS,QAAQG,SACxBD,KAAK,CAACvH,EAAKI,cAAckB,MAAM,IAAI,KAIvCqF,EAAQE,GAnBU,wBAAAC,EAAAhF,SAAAuE,EAAApG,SAzLF,gBAAAwH,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAzB,EAAAR,MAAA3F,KAAAmC,YAAA,GAAAnC,KA+MlBqH,QA/MkB,eAAAQ,EAAA5H,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA+MR,SAAAoH,EAAOzB,EAASC,EAAQC,EAAYC,EAAWC,GAA/C,IAAAtD,EAAAC,EAAAtC,EAAAiH,EAAA5F,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAA4DgC,EAA5D4E,EAAA1F,OAAA,QAAAC,IAAAyF,EAAA,GAAAA,EAAA,GAAqE,KAAK3E,EAA1E2E,EAAA1F,OAAA,QAAAC,IAAAyF,EAAA,GAAAA,EAAA,GAA0F,KAC5FjH,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAD1EwG,EAAA7G,KAAA,EAEKpB,EAAKD,MAAMyD,0BAA0BzC,EAAc,UAAW,CAACuF,EAASC,EAAQC,EAAYC,EAAWC,GAAc,KAAMtD,EAAUC,GAF1I,cAAA4E,EAAAzG,OAAA,SAAAyG,EAAAtG,MAAA,wBAAAsG,EAAAnG,SAAAiG,EAAA9H,SA/MQ,gBAAAiI,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAlC,MAAA3F,KAAAmC,YAAA,GAAAnC,KAoNlBuH,SApNkB,eAAAe,EAAArI,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAoNP,SAAA6H,EAAOjD,EAAWkD,GAAlB,IAAArF,EAAAC,EAAAtC,EAAA2H,EAAAtG,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAA0BgC,EAA1BsF,EAAApG,OAAA,QAAAC,IAAAmG,EAAA,GAAAA,EAAA,GAAmC,KAAKrF,EAAxCqF,EAAApG,OAAA,QAAAC,IAAAmG,EAAA,GAAAA,EAAA,GAAwD,KACjEnD,EAAavF,EAAKI,cAAcsF,KAAKH,GAC/BxE,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAFzEkH,EAAAvH,KAAA,EAGIpB,EAAKD,MAAMyD,0BAA0BzC,EAAc,WAAY,CAACwE,EAAYkD,GAAU,KAAMrF,EAAUC,GAH1G,cAAAsF,EAAAnH,OAAA,SAAAmH,EAAAhH,MAAA,wBAAAgH,EAAA7G,SAAA0G,EAAAvI,SApNO,gBAAA2I,EAAAC,GAAA,OAAAN,EAAA3C,MAAA3F,KAAAmC,YAAA,GAAAnC,KA0NlB6I,YA1NkB,eAAAC,EAAA7I,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA0NJ,SAAAqI,EAAOrF,GAAP,IAAAP,EAAAC,EAAAtC,EAAAkI,EAAA7G,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,cAAgBgC,EAAhB6F,EAAA3G,OAAA,QAAAC,IAAA0G,EAAA,GAAAA,EAAA,GAAyB,KAAK5F,EAA9B4F,EAAA3G,OAAA,QAAAC,IAAA0G,EAAA,GAAAA,EAAA,GAA8C,KACpDlI,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cADtEyH,EAAA9H,KAAA,EAECpB,EAAKD,MAAMyD,0BAA0BzC,EAAc,WAAY,CAAC4C,GAAW,KAAMP,EAAUC,GAF5F,cAAA6F,EAAA1H,OAAA,SAAA0H,EAAAvH,MAAA,wBAAAuH,EAAApH,SAAAkH,EAAA/I,SA1NI,gBAAAkJ,GAAA,OAAAJ,EAAAnD,MAAA3F,KAAAmC,YAAA,GAAAnC,KA+NlBmJ,oBA/NkBlJ,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA+NI,SAAA0I,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnJ,EAAAC,EAAAO,KAAA,SAAA4I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,cAAAyI,EAAAzI,KAAA,EAEUpB,EAAKD,MAAMiH,KAAK8C,IAAIC,iBAF9B,OASpB,IAPMT,EAFcO,EAAAlI,KAId4H,EAAmB,GAEnBC,EAAYxJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eAC7DgI,EAAwBzJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAElFiI,EAAcF,EAAWE,EAAcJ,EAAiBI,GAJ3C,IAKdC,EAAUK,KAAKC,IAAIP,EALL,IAK+BJ,GACnDC,EAAiBW,KAAKlK,EAAKI,cAAc+J,sBAAsBV,EAAsB,kBAAmB,CAACD,UAAWE,EAAaC,aAX/G,OAAAE,EAAAzI,KAAA,GAcUgJ,QAAQC,IAAId,GAdtB,eAcdK,EAdcC,EAAAlI,KAAAkI,EAAArI,OAAA,SAgBboI,EAAgBU,OAAQ,SAACC,EAAYC,GAE1C,OADAD,EAAcA,EAAY/H,OAAOgI,IAEjC,KAnBkB,yBAAAX,EAAA/H,SAAAuH,EAAApJ,SA/NJA,KAqPlBwK,yBArPkBvK,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAqPS,SAAA+J,IAAA,IAAApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnJ,EAAAC,EAAAO,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,cAAAuJ,EAAAvJ,KAAA,EAEKpB,EAAKD,MAAMiH,KAAK8C,IAAIC,iBAFzB,OASzB,IAPMT,EAFmBqB,EAAAhJ,KAInB4H,EAAmB,GAEnBC,EAAYxJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eAC7DgI,EAAwBzJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAElFiI,EAAcF,EAAWE,EAAcJ,EAAiBI,GAJ3C,IAKdC,EAAUK,KAAKC,IAAIP,EALL,IAK+BJ,GACnDC,EAAiBW,KAAKlK,EAAKI,cAAc+J,sBAAsBV,EAAsB,uBAAwB,CAACD,UAAWE,EAAaC,aAX/G,OAAAgB,EAAAvJ,KAAA,GAcKgJ,QAAQC,IAAId,GAdjB,eAcnBK,EAdmBe,EAAAhJ,KAAAgJ,EAAAnJ,OAAA,SAgBlBoI,EAAgBU,OAAQ,SAACC,EAAYC,GAE1C,OADAD,EAAcA,EAAY/H,OAAOgI,IAEjC,KAnBuB,yBAAAG,EAAA7I,SAAA4I,EAAAzK,SArPTA,KA2QlB2K,aA3QkB1K,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA2QH,SAAAkK,IAAA,IAAAC,EAAAjK,EAAAC,EAAAiK,EAAAC,EAAAC,EAAAjK,EAAAuJ,EAAAW,EAAAC,EAAAC,EAAAhJ,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,UAAO0J,EAAPM,EAAA9I,OAAA,QAAAC,IAAA6I,EAAA,GAAAA,EAAA,GAAa,KAGpBvK,EAHO,iBAIPC,EAAad,EAAKI,cAAciB,8BAA8BR,IAJvD,CAAAwK,EAAAjK,KAAA,eAAAiK,EAAA7J,OAAA,SAMJV,GANI,cAAAuK,EAAAjK,KAAA,EAaHgJ,QAAQC,IAAI,CACpBrK,EAAKsL,WACLtL,EAAKO,iBACLP,EAAKyK,6BAhBM,cAAAM,EAAAM,EAAA1J,KAAAqJ,EAAA9K,OAAAqL,EAAA,EAAArL,CAAA6K,EAAA,GAUXE,EAVWD,EAAA,GAWXhK,EAXWgK,EAAA,GAYXT,EAZWS,EAAA,GAmBPE,EAAmB,GACzBX,EAAYiB,QAAQ,SAAAC,GAAK,IAAAC,EACUD,EAAEE,aAA3BhI,EADe+H,EACf/H,SAAUiI,EADKF,EACLE,WAClBV,EAAiBvH,GAAYiI,IAG3BT,EAAY,GAChBjL,OAAO2L,KAAKX,GAAkBM,QAAQ,SAACvJ,GACrC,IAAMwC,GAASyG,EAAiBjJ,GAClB,IAAVwC,GACJ0G,EAAUjB,KAAK,CACbzF,MAAOA,EAAM,KACbd,SAAU1B,MAIdkJ,EAAUW,KAAK,SAACpL,EAAGqL,GACjB,OAAOrL,EAAE+D,MAAQsH,EAAEtH,MAAQ,GAAK,IAGlC0G,EAAUK,QAAS,SAAChB,EAAEwB,GACpBxB,EAAEyB,KAAOD,EAAM,EACfxB,EAAE/F,MAAQ+F,EAAE/F,MAAMyH,QAAQ,GAC1B1B,EAAE2B,aAAsB3B,EAAE/F,MAAQ2H,WAAWpL,GAA5B,KAA2CkL,QAAQ,GAAK,IACzE1B,EAAE6B,UAAYpB,EAAUqB,OAAQ,SAAAC,GAAC,OAAKA,EAAEC,OAAShC,EAAE7G,UAAY4I,EAAEC,MAAMC,gBAAkBjC,EAAE7G,SAAS8I,gBAAiBnK,SAGvHtC,EAAKI,cAAcyB,8BAA8BhB,EAAcsK,GAEjD,OAAVL,IACFK,EAAYA,EAAUuB,OAAO,EAAE5B,IAjDpBO,EAAA7J,OAAA,SAoDN2J,GApDM,yBAAAE,EAAAvJ,SAAA+I,EAAA5K,SA3QGA,KAkUlB0M,kBAlUkBzM,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkUE,SAAAiM,IAAA,IAAA/L,EAAAC,EAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzM,EAAAC,EAAAO,KAAA,SAAAkM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA/L,MAAA,UAGZP,EAHY,sBAIZC,EAAad,EAAKI,cAAcgN,cAAcvM,IAJlC,CAAAsM,EAAA/L,KAAA,eAAA+L,EAAA3L,OAAA,SAMTV,GANS,cASZ+L,EAAkB7M,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eATnE0L,EAAA/L,KAAA,EAaRgJ,QAAQC,IAAI,CACpBrK,EAAKI,cAAcsB,oBAAoBmL,EAAgB,qBACvD7M,EAAKI,cAAcsB,oBAAoBmL,EAAgB,2BAfvC,cAAAC,EAAAK,EAAAxL,KAAAoL,EAAA7M,OAAAqL,EAAA,EAAArL,CAAA4M,EAAA,GAWhBE,EAXgBD,EAAA,GAYhBE,EAZgBF,EAAA,GAkBdC,IACFA,EAAoBhN,EAAKI,cAAckB,MAAM0L,IAGzCE,EAAS,CACbF,oBACAC,yBAxBgBE,EAAA3L,OAAA,SA2BXxB,EAAKI,cAAciN,cAAcxM,EAAcqM,IA3BpC,yBAAAC,EAAArL,SAAA8K,EAAA3M,SAlUFA,KAgWlBqL,SAhWkBpL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAgWP,SAAA2M,IAAA,IAAAzM,EAAAC,EAAA0I,EAAA+D,EAAA9I,EAAA,OAAAhE,EAAAC,EAAAO,KAAA,SAAAuM,GAAA,cAAAA,EAAArM,KAAAqM,EAAApM,MAAA,UAGHP,EAHG,aAIHC,EAAad,EAAKI,cAAcgN,cAAcvM,IAJ3C,CAAA2M,EAAApM,KAAA,eAAAoM,EAAAhM,OAAA,SAMAV,GANA,cASH0I,EAAYxJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eAC7D8L,EAAyBvN,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAVnF+L,EAAApM,KAAA,EAYSpB,EAAKI,cAAc+J,sBAAsBoD,EAAuB,WAAY,CAAC/D,YAAWG,QAAS,WAZ1G,cAYLlF,EAZK+I,EAAA7L,QAeP8C,EAAQA,EAAMgJ,IAAK,SAAAhC,GAAK,IAAAiC,EAMlBjC,EAAEE,aAJFa,EAFkBkB,EAElBlB,MAKJ,MAAO,CACL/H,MARoBiJ,EAGlBjJ,MAMF+H,QACA/D,QAVoBiF,EAIlBjF,QAOFlD,WAXoBmI,EAKlBnI,eApBCiI,EAAAhM,OAAA,SA+BFxB,EAAKI,cAAciN,cAAcxM,EAAc4D,IA/B7C,yBAAA+I,EAAA1L,SAAAwL,EAAArN,SAhWOA,KAkYlB0N,aAlYkBzN,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkYH,SAAAiN,IAAA,IAAAC,EAAAC,EAAAC,EAAAlN,EAAAC,EAAAkN,EAAAT,EAAAU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9E,EAAA+E,EAAAC,EAAA/J,EAAA4H,EAAAoC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1M,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,UAAOyM,EAAPiB,EAAAxM,OAAA,QAAAC,IAAAuM,EAAA,GAAAA,EAAA,GAAgB,KAAKhB,EAArBgB,EAAAxM,OAAA,QAAAC,IAAAuM,EAAA,GAAAA,EAAA,GAAqC,KAAKf,EAA1Ce,EAAAxM,OAAA,QAAAC,IAAAuM,EAAA,GAAAA,EAAA,GAAqD,KAG5DjO,EAHO,iBAITC,EAAad,EAAKI,cAAciB,8BAA8BR,IAJrD,CAAAkO,EAAA3N,KAAA,gBAMP0M,IACFhN,EAAaA,EAAWwL,OAAQ,SAAA0C,GAAC,OAAKA,GAAKA,EAAEC,OAASD,EAAEC,MAAMxC,gBAAkBqB,EAAgBrB,iBAE9FoB,IACF/M,EAAaA,EAAWwL,OAAQ,SAAA0C,GAAC,OAAKA,GAAKA,EAAEvK,MAAMyK,KAAM,SAAA3C,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMC,gBAAkBoB,EAASpB,mBAE3GsB,IACFjN,EAAaA,EAAWwL,OAAQ,SAAA0C,GAAC,OAAIjM,SAASiM,EAAEjB,aAAahL,SAASgL,MAb7DgB,EAAAvN,OAAA,SAeJV,GAfI,eAkBPkN,EAAyB,SAACiB,GAE9B,MADuB,CAAC,UAAW,SAAU,WAAY,WAAY,YAAa,SAAU,UAAW,YACjFA,IAGlB1B,EAAyBvN,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAvB/EsN,EAAA3N,KAAA,GAwBepB,EAAKI,cAAcsB,oBAAoB6L,EAAuB,iBAxB7E,WAwBPU,EAxBOc,EAAApN,KAAA,CAAAoN,EAAA3N,KAAA,gBAAA2N,EAAAvN,OAAA,SA2BJ,IA3BI,QAgCb,IAFM0M,EAAe,GACfC,EAAoB,GA/BbC,EAgCGe,MAAMC,KAAKD,MAAMpM,SAASkL,IAAgB,SAACoB,EAAEf,GAAH,OAASA,EAAE,IAArED,EAAA,EAAAA,EAAAD,EAAA9L,OAAA+L,IAAWC,EAA8DF,EAAAC,GACvEH,EAAahE,KAAKlK,EAAKI,cAAcsB,oBAAoB6L,EAAuB,YAAY,CAACe,KAC7FH,EAAkBjE,KAAKlK,EAAKI,cAAcsB,oBAAoB6L,EAAuB,QAAQ,CAACe,KAlCnF,OAqCP9E,EAAYxJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eArCtDsN,EAAA3N,KAAA,GA+CHgJ,QAAQC,IAAI,CACpBrK,EAAKsL,WACLlB,QAAQC,IAAI6D,GACZ9D,QAAQC,IAAI8D,GACZnO,EAAKI,cAAc+J,sBAAsBoD,EAAuB,iBAAkB,CAAC/D,YAAWG,QAAS,WACvG3J,EAAKI,cAAc+J,sBAAsBoD,EAAuB,kBAAmB,CAAC/D,YAAWG,QAAS,WACxG3J,EAAKI,cAAc+J,sBAAsBoD,EAAuB,mBAAoB,CAAC/D,YAAWG,QAAS,WACzG3J,EAAKI,cAAc+J,sBAAsBoD,EAAuB,mBAAoB,CAAC/D,YAAWG,QAAS,aAtD9F,WAAA4E,EAAAQ,EAAApN,KAAA6M,EAAAtO,OAAAqL,EAAA,EAAArL,CAAAqO,EAAA,GAwCX9J,EAxCW+J,EAAA,GAyCXnC,EAzCWmC,EAAA,GA0CXC,EA1CWD,EAAA,GA2CXE,EA3CWF,EAAA,GA4CXG,EA5CWH,EAAA,GA6CXI,EA7CWJ,EAAA,GA8CXK,EA9CWL,EAAA,GAyDRnC,EAzDQ,CAAA0C,EAAA3N,KAAA,gBAAA2N,EAAAvN,OAAA,UA0DJ,GA1DI,eA6Db6K,EAAUiD,UACVb,EAAea,UACfZ,EAAqBY,UACrBX,EAAsBW,UACtBV,EAAuBU,UACvBT,EAAuBS,UAlEVP,EAAA3N,KAAA,GAqEPpB,EAAKI,cAAcmP,aAAaZ,EAAhC,eAAAa,EAAAtP,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAuD,SAAA8O,EAAOC,EAAapB,GAApB,IAAAU,EAAAzJ,EAAAoK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlK,EAAAF,EAAAF,EAAAC,EAAAE,EAAAoK,EAAA,OAAApQ,EAAAC,EAAAO,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,WACrD4N,EAAI3C,EAAUiC,KAETU,EAAE+B,GAH8C,CAAAD,EAAA1P,KAAA,eAAA0P,EAAAtP,OAAA,wBAOrD+D,EAAaxC,SAASiM,EAAE+B,IACxBpB,EAAgBf,EAAuBM,KAAM,SAAAzD,GAAC,OAAK1I,SAAS0I,EAAEE,aAAaoF,MAAQxL,IACnFqK,EAAgBf,EAAuBK,KAAM,SAAAzD,GAAC,OAAK1I,SAAS0I,EAAEE,aAAaoF,MAAQxL,IACnFsK,EAAcnB,EAAqBQ,KAAM,SAAAzD,GAAC,OAAK1I,SAAS0I,EAAEE,aAAaoF,MAAQxL,IAV1BuL,EAAA1P,KAAA,EAkBjDgJ,QAAQC,IAAI,CACpB2E,EAAEgC,SAAWhR,EAAKI,cAAc6Q,aAAajC,EAAEgC,UAAY,KAC3DnB,EAAc7P,EAAKI,cAAc6Q,aAAapB,EAAYnG,aAAe,KACzEgG,EAAe1P,EAAKI,cAAc6Q,aAAavB,EAAahG,aAAe,KAC3EiG,EAAgB3P,EAAKI,cAAc6Q,aAAatB,EAAcjG,aAAe,KAC7EkG,EAAgB5P,EAAKI,cAAc6Q,aAAarB,EAAclG,aAAe,OAvBpB,OAAAoG,EAAAgB,EAAAnP,KAAAoO,EAAA7P,OAAAqL,EAAA,EAAArL,CAAA4P,EAAA,GAazDE,EAbyDD,EAAA,GAczDE,EAdyDF,EAAA,GAezDG,EAfyDH,EAAA,GAgBzDI,EAhByDJ,EAAA,GAiBzDK,EAjByDL,EAAA,GA2B3Df,EAAEkC,OAAS,GAGLb,EAAe,CACnBpB,MAAO,UACPvF,YAAagG,EAAahG,YAC1ByH,SAAUjB,EAAiBkB,UAC3BC,WAAYnB,EAAiBkB,UAC7BE,SAAU5B,EAAa6B,iBAEzBvC,EAAEkC,OAAOhH,KAAKmG,GAGRC,EAAc,CAClBa,SAAU,KACVG,SAAU,KACVrC,MAAO,SACPvF,YAAagG,EAAahG,YAC1B2H,WAAYhB,EAAagB,YAE3BrC,EAAEkC,OAAOhH,KAAKoG,GAGVX,GACIY,EAAgB,CACpBY,SAAU,KACVlC,MAAO,WACPvF,YAAaiG,EAAcjG,YAC3B2H,WAAYlB,EAAkBiB,UAC9BE,SAAU3B,EAAc4B,iBAG1BvC,EAAEkC,OAAOlC,EAAEkC,OAAO5O,OAAO,GAAG6O,SAAWhB,EAAkBiB,UACzDpC,EAAEkC,OAAOhH,KAAKqG,KAGVV,IACIW,EAAiB,CACrBW,SAAU,KACVG,SAAU,KACVrC,MAAO,YACPvF,YAAamG,EAAYnG,YACzB2H,WAAYpB,EAAgBmB,WAGxBX,EAAc,CAClBU,SAAU,KACVlC,MAAO,SACPvF,YAAamG,EAAYnG,YACzB4H,SAAUzB,EAAY0B,gBACtBF,WAAYpB,EAAgBmB,WAI9BpC,EAAEkC,OAAOlC,EAAEkC,OAAO5O,OAAO,GAAG6O,SAAWlB,EAAgBmB,UAEvDpC,EAAEkC,OAAOhH,KAAKsG,GAEdxB,EAAEkC,OAAOhH,KAAKuG,IAIZb,IACIc,EAAgB,CACpBS,SAAU,KACVlC,MAAO,WACPvF,YAAakG,EAAclG,YAC3B2H,WAAYjB,EAAkBgB,UAC9BE,SAAU1B,EAAc2B,iBAG1BvC,EAAEkC,OAAOlC,EAAEkC,OAAO5O,OAAO,GAAG6O,SAAWf,EAAkBgB,UACzDpC,EAAEkC,OAAOhH,KAAKwG,KAKlB1B,EAAEC,MAAQjB,EAAuBS,EAAeH,IAC7BU,EAAEkC,OAAOhC,KAAM,SAAAsC,GAAC,OAAKA,EAAEvC,QAAUD,EAAEC,UAE9C0B,EAAW,CACf1B,MAAOD,EAAEC,MACTkC,SAAU,KACVG,SAAU,KACV5H,YAAasF,EAAEgC,SACfK,WAAYrB,EAAaoB,WAG3BpC,EAAEkC,OAAOlC,EAAEkC,OAAO5O,OAAO,GAAG6O,SAAWnB,EAAaoB,UACpDpC,EAAEkC,OAAOhH,KAAKyG,IAGhB3B,EAAEvK,MAAQA,EAAM6H,OAAQ,SAAAC,GAAC,OAAKxJ,SAASwJ,EAAEhH,cAAcA,IAvHIqL,EAyHKlB,EAAa/D,aAArEjF,EAzHmDkK,EAyHnDlK,YAAaF,EAzHsCoK,EAyHtCpK,WAAYF,EAzH0BsK,EAyH1BtK,QAASC,EAzHiBqK,EAyHjBrK,OAAQE,EAzHSmK,EAyHTnK,UAClDuI,EAAEoC,UAAYlB,EAAmBA,EAAiBkB,UAAY,KAI9DpC,EAAEyC,MAAQ/K,EAAYgL,MAAM,iBAAY,GAAGC,QAAQ,KAAK,KAAO,WAC/D3C,EAAEtI,YAAcA,EAAYgL,MAAM,cAClC1C,EAAEtI,YAAYkL,QACd5C,EAAEtI,YAAcsI,EAAEtI,YAAYmL,KAAK,MACnC7C,EAAEtI,YAAcsI,EAAEtI,YAAYiL,QAAQ,MAAM,WAGtCd,EAAkB7Q,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY8D,MAEnFrF,OAAO2L,KAAKgF,GAAiBrF,QAAS,SAAAsG,GACpC9C,EAAE8C,GAAQjB,EAAgBiB,KAK9BzF,EAAUiC,GAAK,CACbyD,IAAI/C,EAAE+C,IACNC,QAAQ,CACNzL,SACAD,UACAG,YACAD,cAEFuK,GAAGxL,EACHkM,MAAMzC,EAAEyC,MACRxC,MAAMD,EAAEC,MACRxK,MAAMuK,EAAEvK,MACRyM,OAAOlC,EAAEkC,OACTe,SAASjD,EAAEiD,SACXjB,SAAShC,EAAEgC,SACXkB,SAASlD,EAAEkD,SACXC,SAASnD,EAAEmD,SACXC,SAASpD,EAAEoD,SACXhB,UAAUpC,EAAEoC,UACZrD,WAAWiB,EAAEjB,WACbrH,YAAYsI,EAAEtI,YACd2L,aAAarD,EAAEqD,cAlK0C,yBAAAvB,EAAAhP,SAAA2N,EAAAxP,SAAvD,gBAAAqS,EAAAC,GAAA,OAAA/C,EAAA5J,MAAA3F,KAAAmC,YAAA,IArEO,eA2ObpC,EAAKI,cAAcyB,8BAA8BhB,EAAcwL,EAAU,MAIrEyB,IACFzB,EAAYA,EAAUC,OAAQ,SAAA0C,GAAC,OAAKA,GAAKA,EAAEC,OAASD,EAAEC,MAAMxC,gBAAkBqB,EAAgBrB,iBAG5FoB,IACFxB,EAAYA,EAAUC,OAAQ,SAAA0C,GAAC,OAAKA,GAAKA,EAAEvK,MAAMyK,KAAM,SAAA3C,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMC,gBAAkBoB,EAASpB,mBAGzGsB,IACF1B,EAAYA,EAAUC,OAAQ,SAAA0C,GAAC,OAAIjM,SAASiM,EAAEjB,aAAahL,SAASgL,MAxPzDgB,EAAAvN,OAAA,SA2PN6K,GA3PM,yBAAA0C,EAAAjN,SAAA8L,EAAA3N,SAjYbA,KAAKI,SAASN,6ICRZyS,6MAGJpS,cAAgB,gFAGVH,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,4JAK9CE,KAAKwS,iMAGkBC,EAAUC,mEACjC1S,KAAKwS,kJAIL,OACEG,EAAAlS,EAAAmS,cAACC,EAAA,EAAD,CACEC,UAAW,CACT/D,EAAE,EACFgE,UAAU/S,KAAKF,MAAMiT,UAAY/S,KAAKF,MAAMiT,UAAY,CAAC,QAAQ,WAGnEJ,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEC,MAAO,EACPC,WAAY,aACZC,cAAe,SACfC,eAAgB,cAEhBT,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEE,WAAY,aACZH,UAAY/S,KAAKF,MAAMuT,eAAiBrT,KAAKF,MAAMuT,eAAiB,CAAC,OAAO,SAE5EV,EAAAlS,EAAAmS,cAACI,EAAA,EAAQM,GAAT,CACEC,GAAI,CAAC,EAAE,GACPC,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,OACXC,MAAO,YACPC,WAAY,WAEX5T,KAAKF,MAAM0R,QAIe,qBAArBxR,KAAKF,MAAM+T,OAA8C,OAArB7T,KAAKF,MAAM+T,OAAkB7T,KAAKF,MAAM+T,MAAMC,WAAWzR,OAAO,GAC1GsQ,EAAAlS,EAAAmS,cAACI,EAAA,EAAD/S,OAAA8T,OAAA,CACEH,WAAY,EACZH,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,GACfG,MAAO,aACH3T,KAAKF,MAAMkU,YAEdhU,KAAKF,MAAM+T,OAIhB7T,KAAKF,MAAMmU,SACTjU,KAAKF,MAAMmU,SACX,KAG2B,qBAArBjU,KAAKF,MAAMoU,OAA8C,OAArBlU,KAAKF,MAAMoU,OAAkBlU,KAAKF,MAAMoU,MAAMJ,WAAWzR,OAAO,GAC1GsQ,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEmB,GAAI,CAAC,EAAE,GACPjB,WAAY,SACZC,cAAe,OAEfR,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACES,SAAU,EACVD,WAAY,EACZG,MAAO,UAEN3T,KAAKF,MAAMoU,OAGXlU,KAAKF,MAAMsU,cAAgBpU,KAAKF,MAAMsU,aAAa/R,OAAO,GACzDsQ,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEqB,UAAW,MACXC,QAAStU,KAAKF,MAAMsU,cAEpBzB,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEuB,GAAI,EACJC,KAAM,OACNC,KAAM,MACNd,MAAO,yBA3FPe,aAyGTnC,oLCrGToC,6MACJ3F,MAAQ,CACN4F,QAAQ,EACRC,gBAAgB,EAChBC,SAAS,KAIX3U,cAAgB,OAChB4U,mDAAe,SAAApU,EAAMqU,GAAN,OAAAC,EAAAxU,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbpB,EAAKI,cAAc+U,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5BrV,EAAKD,MAAMiV,cACpBhV,EAAKD,MAAMiV,aAAaC,GARb/T,EAAAE,KAAA,EAWApB,EAAKD,MAAMuV,QAAQC,iBAXnB,cAAArU,EAAAM,OAAA,SAAAN,EAAAS,MAAA,wBAAAT,EAAAY,SAAAlB,EAAAX,sPAgBbA,KAAKuV,SAAS,CACZX,QAAQ,IAGV5U,KAAKF,MAAM8U,kBACL5U,KAAK+U,aAAa,gJAIpB/U,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,2CAGpC0V,GACVxV,KAAKuV,SAAS,CACZC,6DAIcX,GAChB7U,KAAKuV,SAAS,CACZV,wKAKF7U,KAAKwS,iMAGkBC,EAAWC,mEAClC1S,KAAKwS,kJAGE,IAAAiD,EAAAzV,KACP,IAAKA,KAAKF,MAAM4V,KAAKrT,OACnB,OAAO,KAGT,IACMsT,EADmB3V,KAAKG,cAAcqB,gBAAgB,CAAC,eACpBoU,UACnCC,EAAiB7V,KAAKG,cAAcqB,gBAAgB,CAAC,YAAa,cAAgB,IAAMvB,OAAO2L,KAAK5L,KAAKF,MAAMgW,qBAAqB,GAEpIC,EAAe/V,KAAKF,MAAM4V,KAAKrJ,OAAO,SAAA2J,GAC1C,IAAMC,OAAiC3T,IAArB0T,EAASE,SAAyBF,EAASE,QACvDC,OAAiC7T,IAApB0T,EAASI,QAAwBJ,EAASI,OAC7D,OAAOH,KAAeR,EAAK3V,MAAMuW,UAAYF,KAG/C,IAAKJ,EAAa1T,OAChB,OAAO,KAGT,IAAMiU,EAAuC,SAAzBtW,KAAKF,MAAMyW,UACzBC,EAAkBxW,KAAKG,cAAcqB,gBAAgB,CACzD,YACA,QACA,oBAGF,OACEiV,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CAAM3H,EAAG,EAAG4H,OAAQ,OAAQxD,cAAe,UACzCsD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACE3H,EAAG,EACH6H,GAAI,EACJrD,GAAI,EACJJ,cAAe,MACfD,WAAY,SACZE,eAAgB,cAEhBqD,EAAAhW,EAAAmS,cAACiE,EAAA,EAAD,CACE5P,GAAI,KAEJwP,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEC,OAAQ,OACRG,SAAU,WACVC,IAAK/W,KAAKG,cAAc6W,iBAAoBV,EAA2C,uBAA7B,2BAAuDA,EAAgD,6BAAlC,oCAIrIG,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEnD,GAAI,EACJqD,GAAI,EACJ3D,MAAO,EACPG,eAAgB,SAChB6D,aAAY,aAAA1U,OAAevC,KAAKF,MAAMoX,MAAMC,OAAOC,UAEnDX,EAAAhW,EAAAmS,cAACyE,EAAA,EAADpX,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEEwX,eAAe,EACfxE,UAAW,CACTyE,GAAI,EACJC,GAAI,EACJC,GAAI,OACJlE,GAAI,CAAC,EAAG,GACRN,MAAO,GACPyE,UAAW,EACXC,QAAS,OACTC,aAAc,EACdC,YAAa,SACbzE,eAAgB,UAElB0E,YAAa,SAAAtM,GAAC,OAAIiK,EAAK3V,MAAMiY,YAActC,EAAK3V,MAAMkY,YAAYrC,GAAiB,GAASF,EAAK3V,MAAMkY,YAAYnC,GAAgB,MAEnIY,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEuB,GAAI,EACJV,GAAI,EACJrE,WAAY,SACZC,cAAe,MACf+E,aAAc,SAAA1M,GAAC,OAAIiK,EAAKF,SAAS,CAAET,SAAS,KAC5CqD,aAAc,SAAA3M,GAAC,OAAIiK,EAAKF,SAAS,CAAET,SAAS,MAE5C2B,EAAAhW,EAAAmS,cAACwF,EAAA,EAAD,CACEC,QAASrY,KAAKgP,MAAM8F,QACpBwD,QAAS,4BACTC,MAAO,iCACPC,WAAY,CACVC,GAAI,EACJxF,MAAO,OACP0D,OAAQ,OACRgB,QAAS,iBAGblB,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEjD,SAAU,EACVE,MAAO,OACPH,WAAY,KAHd,aAKaxT,KAAKF,MAAMiY,YAAc,aAAe,gBAMzD/X,KAAKF,MAAMuW,UACTI,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEnD,GAAI,EACJN,MAAO,MACPyF,UAAW,SACXxF,WAAY,UACZC,cAAe,SACfC,eAAgB,iBAEhBqD,EAAAhW,EAAAmS,cAAC+F,EAAA,EACK3Y,KAAKF,QAKjB2W,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CAAMuB,GAAI,EAAG9E,cAAe,UACzB4C,EAAavI,IAAI,SAACwI,EAAU4C,GAC3B,IACMC,EADiB7C,EAAS8C,eACOC,IAAUC,IAC3CC,EAAc3C,GAAeN,EAASkD,UAAYlD,EAASkD,UAAYlD,EAASmD,MAChFC,EAAgB9C,GAAeN,EAASqD,kBAAoBrD,EAASqD,kBAAoBrD,EAASsD,cACxG,OACE7C,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEzD,MAAO,OACPsG,GAAI,CAAC,EAAG,OACRC,IAAG,QAAAjX,OAAUqW,IAEbnC,EAAAhW,EAAAmS,cAACiG,EAAD,CACE5R,GAAI+O,EAASyD,MACbC,KAAM1D,EAASyD,MACfE,QAASlE,EAAK3V,MAAM8Z,UACpBC,MAAO,CAAEC,eAAgB,SAEzBrD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEa,GAAI,EACJU,GAAI,EACJL,aAAc,EACdzE,cAAe,MACfD,WAAY,SACZ6G,OAAQ/D,EAASgE,SAAW,EAAI,KAChCC,gBACEjE,EAASgE,SAAW,YAAc,eAGpCvD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEa,GAAI,EACJtE,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGd4C,EAASmD,MACP1C,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACE+B,GAAI,EACJlE,GAAI,EACJhB,GAAI,EACJ2G,MAAO,SACPvD,OAAQ,QACRI,IAAKf,EAASgE,SAAWf,EAAcG,IAEvCpD,EAASmE,MACX1D,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACElC,KAAMwB,EAASmE,KACfxG,MACEqC,EAASgE,SACL,iBACA1D,EACE,QACA,YAERmC,GAAI,EACJlE,GAAI,EACJhB,GAAI,EACJkB,KAAM,UAIZgC,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEjD,SAAU,EACVD,WAAY,EACZG,MAAO,OACPD,UAAW,SACXmG,MAAO,CACLO,WAAY,WAGbpE,EAAS9B,cAUzBsC,GACCC,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACE6C,GAAI,EACJtG,MAAO,OACP0D,OAAQ,OACRxD,cAAe,SACfC,eAAgB,YAEhBqD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEmD,MAAO,CAAEC,eAAgB,QACzBH,QAAS,SAAAnO,GAAC,OACRiK,EAAK3V,MAAMua,aACgB,UAAzB5E,EAAK3V,MAAMyW,UAAwB,OAAS,WAIhDE,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACE3H,EAAG,EACHmE,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBqD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACE+B,GAAI,EACJlE,GAAI,EACJE,KAAM,QACNyF,MAAO,SACPvG,MAAO,YACPa,KAAM,gBAERiC,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEuB,GAAI,QACJhF,MAAO,QACP0D,OAAQ,QACRzD,WAAY,SACZ0E,aAAc,QACdqC,gBAAiB,WACjB7G,eAC2B,UAAzBpT,KAAKF,MAAMyW,UAAwB,WAAa,cAGlDE,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEzD,MAAO,QACP0D,OAAQ,QACRiB,aAAc,QACdqC,gBAAiB,eAGrBxD,EAAAhW,EAAAmS,cAAC8D,EAAA,EAAD,CACEnC,GAAI,EACJE,KAAM,QACNyF,MAAO,SACP1F,KAAM,UACNb,MAAO,yBAtTGe,aAiUbC,wGCxUT2F,mLAGE,OACIC,EAAA9Z,EAAAmS,cAAC4H,EAAA,EAADva,OAAA8T,OAAA,CACIgD,IAAK/W,KAAKF,MAAMuY,QAAUrY,KAAKF,MAAMyY,MAAQvY,KAAKF,MAAMwY,SACpDtY,KAAKF,MAAM0Y,oBANN9D,aAWV4F,wJCPTG,6MAEJzL,MAAQ,CACN0L,eAAgB,GAChBC,eAAgB,QAIlBxa,cAAgB,gFAGVH,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,4JAK9CE,KAAKwS,YACLxS,KAAK4a,wJAKL,IAAK5a,KAAKF,MAAM+a,mBACd,OAAO,EAGT,IAAMC,EAAoB9a,KAAKG,cAAcqB,gBAAgB,CAAC,UAAW,sBAEnEkZ,EADkB1a,KAAKG,cAAcqB,gBAAgB,CAAC,UAAW,oBAChCgM,IAAI,SAAAuN,GACzC,IAAMC,EAAgBF,EAAkBC,GACxC,MAAO,CACLlH,MAAOkH,EACPE,OAAQD,EACR9G,MAAO8G,EAAcxG,QAInB0G,EAAkBlb,KAAKG,cAAcgb,qBACrCR,EAAiBD,EAAezL,KAAK,SAAAmM,GAAO,OAAIA,EAAQvH,QAAUqH,EAAgBpK,KAExF9Q,KAAKuV,SAAS,CACZoF,iBACAD,yDAIUK,GACZ/a,KAAKF,MAAMub,mBAAmBN,sFAGPtI,EAAWC,gFAClC1S,KAAKwS,YAECqI,GAAsBpI,EAAUoI,oBAAsB7a,KAAKF,MAAM+a,oBACxCS,KAAKC,UAAU9I,EAAU2I,QAAQI,YAAcF,KAAKC,UAAUvb,KAAKF,MAAMsb,QAAQI,WAClFX,IAC5B7a,KAAKuV,SAAS,CACZoF,eAAgB,MACf,WACDlF,EAAKmF,uJAKF,IAAAa,EAAAzb,KAmFP,OAAOA,KAAKgP,MAAM2L,eAChBhI,EAAAlS,EAAAmS,cAAC8I,EAAA,EAADzb,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEE6b,WAAY,SACZnH,KAAM,UACNuD,aAAa,EACb6D,cAAc,EACdC,WAAY5b,OAAO8T,OAAO,CACxBkE,GAAI,EACJV,GAAI,EACJZ,OAAQ,OACRe,UAAW,EACXE,aAAc,EACdmC,OAAQ,EACRE,gBAAiB,UAEhBja,KAAKF,MAAM+b,YACdC,kBAAmB,CACjB7D,GAAI,EACJ8D,GAAI,EACJvE,GAAI,GAENwE,eAAe,OACfC,SAAS,OACTC,QAASlc,KAAKgP,MAAM0L,eACpByB,kBA1GsB,SAAArc,GACxB,IAAMsc,EAAQ,mBAAA7Z,OAAsBzC,EAAMuc,KAAKpB,OAAOqB,SAAxC,QACd,OACE3J,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEC,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBT,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEE,WAAY,UAEZP,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEyF,GAAI,EACJ1B,IAAKqF,EACLnJ,MAAO,QACP0D,OAAQ,UAEVhE,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACES,SAAU,EACVD,WAAY,EACZG,MAAO,aAEN7T,EAAMoU,UAoFbqI,aAAcvc,KAAKgP,MAAM2L,eACzB6B,SAAUxc,KAAKyc,cAAcC,KAAK1c,MAClC2c,qBA/EyB,SAAA7c,GAC3B,IAAM8c,EAAc9c,EAAM8c,YAAY/I,OAAS/T,EAAMuc,KAC/CnI,EAAQ0I,EAAY1I,MACpBkI,EAAQ,mBAAA7Z,OAAsBqa,EAAY3B,OAAOqB,SAAzC,QACd,OACE3J,EAAAlS,EAAAmS,cAACI,EAAA,EAAD/S,OAAA8T,OAAA,CACE8F,MAAO,CACLgD,KAAM,KAERzJ,eAAgB,iBACZtT,EAAM+b,WALZ,CAMEiB,GAAI,SACJ7E,GAAI,IAEJtF,EAAAlS,EAAAmS,cAACI,EAAA,EAAD/S,OAAA8T,OAAA,GACMjU,EAAMid,YADZ,CAEEhO,EAAG,EACHkE,MAAO,EACPC,WAAY,SACZC,cAAe,MACf0G,MAAO,CAAEmD,OAAQ,WACjB5J,eAAgB,aAChB0J,GAAI,WAGJnK,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEyF,GAAI,EACJ1B,IAAKqF,EACLnJ,MAAO,QACP0D,OAAQ,UAEVhE,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACES,SAAU,EACVD,WAAY,EACZG,MAAO,aAENO,GAEHvB,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CACEuB,GAAI,EACJtB,MAAO,MACP0D,OAAQ,MACRiB,aAAc,MACdqC,gBAAiBwB,EAAK3b,MAAMsb,QAAQ6B,iBAAmB,UAAY,kBAuCzEtK,EAAAlS,EAAAmS,cAACC,EAAA,EAAD5S,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEEgT,UAAW,CACT4E,UAAW,EACXE,aAAc,EACdmC,OAAQ,EACR9B,GAAI,CAAC,EAAG,GACRN,QAAS,OACT1E,MAAO,CAAC,EAAG,QACXC,WAAY,SACZE,eAAgB,SAChB6G,gBAAiB,SAEjBtD,OAAS3W,KAAKF,MAAM+b,YAAc7b,KAAKF,MAAM+b,WAAWlF,QAAW,QAErEW,eAAe,EACf4F,UAAU,IAEVvK,EAAAlS,EAAAmS,cAACI,EAAA,EAAD,CAAQyB,KAAM,iBAvMOC,aA6MhB+F,yCCnNf0C,EAAA5S,EAAA6S,EAAA,sBAAAC,IAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA/N,EAAAkO,GAAAE,EAAAL,EAAA,MAGe,SAASE,IAEtB,IAAMpQ,EAAS9K,UAAU,GAEnBsb,EAAWC,uBAAa,CAC5BC,SAAU,SAACC,GAAD,OAAe3Q,EAAO9J,SAASya,IACzCC,MAAO,GACPC,8BAA8B,EAC9BC,YAAY,EACZC,YAAY,EACZC,cAAe,IAGjB,OACCV,EAAA9c,EAAAmS,cAAA,MAAA3S,OAAA8T,OAAA,GAAS0J,EAAT,CAAmB5D,MAAO,CAAEqE,YAAa,WACvCjR,EAAOgH,4JCZNkK,cAcJ,SAAAA,EAAYre,GAAO,IAAAC,EAAA,OAAAE,OAAAme,EAAA,EAAAne,CAAAD,KAAAme,IACjBpe,EAAAE,OAAAoe,EAAA,EAAApe,CAAAD,KAAAC,OAAAqe,EAAA,EAAAre,CAAAke,GAAAI,KAAAve,KAAMF,KAbRkP,MAAQ,GAYWjP,EATnBI,cAAgB,KASGJ,EAKnBye,mBALmBve,OAAAwe,EAAA,EAAAxe,CAAAgV,EAAAxU,EAAAC,KAKE,SAAAC,IAAA,OAAAsU,EAAAxU,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBpB,EAAKyS,YADc,wBAAAvR,EAAAY,SAAAlB,EAAAX,SALFD,EASnB2e,WATmBze,OAAAwe,EAAA,EAAAxe,CAAAgV,EAAAxU,EAAAC,KASN,SAAAqB,IAAA,OAAAkT,EAAAxU,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACXpB,EAAKD,MAAM4e,aADA,wBAAAtc,EAAAP,SAAAE,EAAA/B,SAPXD,EAAKyS,YAFYzS,2EAPbC,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,yDAmB9C,OACE6S,EAAAlS,EAAAmS,cAAC+L,EAAA,EAAD,CACEC,OAAQ5e,KAAKF,MAAM8e,QAEnBjM,EAAAlS,EAAAmS,cAACiM,EAAA,EAAD,CACEC,SAAU,CAAC,QAAQ,SACnBC,UAAW/e,KAAKF,MAAM4e,YAEtB/L,EAAAlS,EAAAmS,cAACiM,EAAA,EAAUG,OAAX,CACEC,GAAI,EACJzN,MAAOxR,KAAKF,MAAM0R,QAGpBmB,EAAAlS,EAAAmS,cAACiM,EAAA,EAAUK,KAAX,KACEvM,EAAAlS,EAAAmS,cAAC+L,EAAA,EAAD,CACE1L,MAAO,EACPE,cAAe,UAEfR,EAAAlS,EAAAmS,cAAC+L,EAAA,EAAD,CACElL,SAAU,EACVC,UAAW,OACXC,MAAO,YACPwL,wBAAyB,CAAEC,OAAQpf,KAAKF,MAAMuf,YAIlD1M,EAAAlS,EAAAmS,cAAC+L,EAAA,EAAD,CACEpF,GAAI,EACJrG,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBT,EAAAlS,EAAAmS,cAAC0M,EAAA,EAAD,CACExH,YAAa9X,KAAK0e,WAClBa,YAAa,CACXtM,MAAM,CAAC,OAAO,SAHlB,qBA7DauM,IAAM9K,WA6ElByJ,4BClFfsB,EAAAC,QAAA,CAAkBC,QAAA,6BAAAC,QAAA,6BAAAC,SAAA,8BAAAC,aAAA,kCAAAC,UAAA,+BAAAC,OAAA,4BAAAC,eAAA,oCAAAC,MAAA,2BAAAC,qBAAA,qQCkaHC,6MA1ZbpR,MAAQ,CACNqR,WAAW,EACXC,cAAe,GACfC,eAAe,EACfC,oBAAqB,EACrBC,kBAAmB,KACnBC,wBAAwB,KAI1BvgB,cAAgB,OAChBwgB,eAAiB,gFAGX3gB,KAAK2gB,eACP3gB,KAAK2gB,eAAevgB,SAASJ,KAAKF,OAElCE,KAAK2gB,eAAiB,IAAI9gB,IAAeG,KAAKF,OAEhDE,KAAKG,cAAgBH,KAAK2gB,eAAexgB,mKAIzCH,KAAKwS,YACLxS,KAAK4gB,yMAGkBnO,EAAWC,kFAClC1S,KAAKwS,YAEqBC,EAAUoO,aAAe7gB,KAAKF,MAAM+gB,YACrC7gB,KAAKF,MAAM+gB,aAAe7gB,KAAKgP,MAAM0R,yBAA2B1gB,KAAKgP,MAAMuR,eAAiBvgB,KAAKgP,MAAMqR,WAC9HrgB,KAAKuV,SAAS,CACZ8K,WAAW,IAIU3N,EAAU2N,YAAcrgB,KAAKgP,MAAMqR,WACpCrgB,KAAKgP,MAAMqR,WAAargB,KAAKgP,MAAMsR,cAAcje,OAAS,IAGhFrC,KAAKG,cAAc+U,yBAAyB,CAC1CC,cAAe,gBACfC,YAAa,WACb0L,WAAY,KAGd9gB,KAAK+gB,2BAGDC,EAAuB1F,KAAKC,UAAU7I,EAAU4N,iBAAmBhF,KAAKC,UAAUvb,KAAKgP,MAAMsR,gBAClE5N,EAAU+N,oBAAsBzgB,KAAKgP,MAAMyR,mBAC5CO,KACxBR,EAAsBxgB,KAAKgP,MAAMyR,kBAAoBzgB,KAAKgP,MAAMsR,cAAcjU,OAAO,SAAA+C,GAAC,OAAIA,EAAE+B,UAAYsE,EAAKzG,MAAMyR,oBAAmBpe,OAASrC,KAAKgP,MAAMsR,cAAcje,OAC9KrC,KAAKuV,SAAS,CACZiL,gLAMJ,IAAMC,EAAoBQ,KAAKC,MAGzBC,EAAsBnhB,KAAKG,cAAcihB,cAAc,uBAAuB,EAAM,IAC1FD,EAAoBV,kBAAoBA,EACxCzgB,KAAKG,cAAckhB,gBAAgB,sBAAuBF,GAAqB,GAE/EnhB,KAAKuV,SAAS,CACZkL,kPAOIa,EAAiBthB,KAAKG,cAAcgb,qBACpCoG,EAAkC,IAAtBD,EAAexQ,GAC3B0Q,EAAmBxhB,KAAKG,cAAcqB,gBAAgB,CAAC,eACvDigB,EAAqBzhB,KAAKG,cAAcqB,gBAAgB,CAAC,QAAS,iBAClEkgB,EAAsB1hB,KAAKG,cAAcqB,gBAAgB,CAAC,QAAS,kBACnE2f,EAAsBnhB,KAAKG,cAAcihB,cAAc,uBAAuB,EAAM,IACpFX,EAAoBU,EAAoBV,mBAAqB,UAE/CzgB,KAAKG,wBAA0BH,KAAKG,cAAc2J,4CAAhEL,OAAiCpI,sBACjCsgB,EAAgB3hB,KAAKG,cAAckB,MAAMrB,KAAKG,cAAcqB,gBAAgB,CAAC,UAAW,mBAAmBogB,IAAI,SAC/GC,EAAkB/e,SAAS2G,EAAYqY,MAAMH,IAE7CI,EAAuBL,EAAoBM,SAAWN,EAAoB5G,kBAAkBmH,SAASX,EAAexQ,IACpHoR,EAAoBV,EAAiBQ,SAAWR,EAAiB1G,kBAAkBmH,SAASX,EAAexQ,KAAOyQ,IAAcvhB,KAAKF,MAAMuW,UAClH,YASrBlM,QAAQC,IAAI,CACpBpK,KAAKG,cAAcgiB,wBACnBniB,KAAKG,cAAciiB,sBAAqB,GACxCL,EAAuB/hB,KAAKG,cAAckiB,oBAAoBriB,KAAKF,MAAMkC,SAAW,KACpFkgB,EAAoBliB,KAAK2gB,eAAejT,aAAa,KAAM,SAAUmU,GAAmB,KACS,2CAVjGS,OACAC,OACAC,OACAC,OACAC,OASEpC,EAAgBtgB,KAAKG,cAAcqB,gBAAgB,CAAC,kBAAkB6K,OAAO,SAAA+C,GAAC,OAAKA,EAAE4S,SAAW5S,EAAEuT,OAASC,GAAYxT,EAAEyT,IAAMD,IAG/HN,IACIQ,EAAiB9iB,KAAKG,cAAc4iB,YAAYT,EAAWU,UAC9CC,QAAQjjB,KAAKG,cAAc4iB,cAAcG,SAAS,EAAG,OACtE5C,EAAcrW,KAAK,CACjBkZ,KAAMb,EAAWa,KACjBhK,MAAO,uBACPhI,UAAW2R,EAAeM,GAAGC,UAC7B7R,MAAOxR,KAAKG,cAAcmjB,WAAWhB,EAAW9Q,OAChD+R,KAAMvjB,KAAKG,cAAcmjB,WAAWhB,EAAWjD,SAC/CmE,KAAMV,EAAeW,MAAMC,OAAO,4BAKlCd,EAAW3B,KAAKC,MAGhByC,EAA0B3jB,KAAKG,cAAcqB,gBAAgB,CAAC,UAAW,YAAa,WAAY,OAAQ,cAE5G+gB,GACFA,EAAwBhX,QAAQ,SAAAwD,GAC9B,IAAMwU,EAAO9H,EAAKtb,cAAcmjB,WAAWvU,EAAE6U,IAAIC,QAAQC,KAAKpS,QAAQ,QAAS,KAE/E4O,EAAcrW,KAAK,CACjBsZ,OACApK,MAAO,uBACPhI,UAAiC,IAAtBpC,EAAE6U,IAAIC,QAAQlB,MACzBQ,KAAMQ,EAA0B5U,EAAEgV,eAClCvS,MAAOiK,EAAKtb,cAAcmjB,WAAWvU,EAAE6U,IAAIC,QAAQrP,MACnDgP,KAAM/H,EAAKtb,cAAc4iB,YAAkC,IAAtBhU,EAAE6U,IAAIC,QAAQlB,OAAcc,MAAMC,OAAO,8BAMhFjB,IACIuB,EAAwBhkB,KAAKG,cAAcqB,gBAAgB,CAAC,aAAc,cAAgB,cAChGihB,EAAoBlX,QAAQ,SAAAwD,GAC1BuR,EAAcrW,KACZ,CACEsZ,KAAMxU,EAAEyC,MACRyS,UAAW,CACTtQ,MAAO,WAETwG,KAAM,mBACNhJ,UAAyB,IAAdpC,EAAEoC,UACbK,MAAO,sBACP0S,KAAMF,EAAwBjV,EAAE+B,GAChC0S,KAAM/H,EAAKtb,cAAc4iB,YAA0B,IAAdhU,EAAEoC,WAAkBsS,MAAMC,OAAO,+BAO1EhB,IACIyB,EAAsBnkB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAa,cAAjD,UAAAe,OAA2Ekf,EAAmBhI,MAA9F,KAC5BxZ,OAAO2L,KAAK8W,GAAiBnX,QAAQ,SAAA6Y,GACnC,IAAMC,EAAY3B,EAAgB0B,GAC5BjT,EAAgD,IAApCkT,EAAUC,cAAcC,UACpChB,EAAI,iBAAAhhB,OAAoB8hB,EAAUG,aAAavY,QAAQ,GAAnD,KAAA1J,OAAyD6hB,GACnE9D,EAAcrW,KAAK,CACjBsZ,OACApS,YACAgJ,KAAM,UACN3I,MAAO,yBACP0S,KAAMC,EAAsBC,EAC5BH,UAAW,CACTtQ,MAAO8H,EAAK3b,MAAMoX,MAAMC,OAAOsN,aAAaC,OAAOC,WAErDnB,KAAM/H,EAAKtb,cAAc4iB,YAAY5R,GAAWsS,MAAMC,OAAO,+BAK/DlB,IACIoC,EAAuB5kB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAa,cAAjD,UAAAe,OAA2Emf,EAAoBjI,MAA/F,KACI+I,EAAoBnW,OAAO,SAAAwY,GAAE,MAAkB,aAAdA,EAAGC,QAAyBD,EAAGE,WAAaF,EAAGG,SACxFzZ,QAAQ,SAAAsZ,GAC/B,IAAM1T,EAA2B,IAAf0T,EAAGN,UACfhB,EAAI,gBAAAhhB,OAAmBkZ,EAAKtb,cAAckB,MAAMwjB,EAAGhR,OAAO5H,QAAQ,GAA9D,KAAA1J,OAAoEsiB,EAAGI,MAAvE,iBACV3E,EAAcrW,KAAK,CACjBsZ,OACApS,YACAgI,MAAOuI,EAAoBvI,MAC3B3H,MAAO,6BACP0S,KAAMU,EAAuBC,EAAGK,YAChC1B,KAAM/H,EAAKtb,cAAc4iB,YAAY5R,GAAWsS,MAAMC,OAAO,8BAI3DyB,EAAiBnlB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAa,cAAjD,SACUghB,EAAoBnW,OAAO,SAAAwY,GAAE,MAAkB,YAAdA,EAAGC,QAAwBD,EAAGE,WACvExZ,QAAQ,SAAAsZ,GAC/B,IAAM1T,EAA2B,IAAf0T,EAAGN,UAErB,GADe9I,EAAKtb,cAAc4iB,YAAY5R,GACnC8R,QAAQxH,EAAKtb,cAAc4iB,cAAcG,SAAS,EAAG,MAAO,CACrE,IAAMK,EAAI,QAAAhhB,OAAWkZ,EAAKtb,cAAckB,MAAMwjB,EAAGhR,OAAO5H,QAAQ,GAAtD,KAAA1J,OAA4DsiB,EAAGK,YAA/D,iCACV5E,EAAcrW,KAAK,CACjBsZ,OACApS,YACAgI,MAAOuI,EAAoBvI,MAC3B3H,MAAO,4BACP0S,KAAMiB,EAAiBN,EAAGK,YAC1B1B,KAAM/H,EAAKtb,cAAc4iB,YAAY5R,GAAWsS,MAAMC,OAAO,gCAMrEpD,EAAgBA,EAAczU,KAAK,SAACpL,EAAGqL,GAAJ,OAAWrL,EAAE0Q,UAAYrF,EAAEqF,UAAY,GAAK,IAE/EnR,KAAKuV,SAAS,CACZ+K,gBACAG,kKAIaF,GACfvgB,KAAKuV,SAAS,CACZgL,oEAIsBG,GACxB1gB,KAAKuV,SAAS,CACZmL,+DAKF1gB,KAAKuV,SAAS,SAAC7C,GAAD,MAAgB,CAC5B2N,WAAY3N,EAAU2N,sDAIT+E,GAQf,OANAplB,KAAKG,cAAc+U,yBAAyB,CAC1CC,cAAe,gBACfC,YAAa,oBACb0L,WAAYsE,EAAajC,MAAQiC,EAAalB,OAG5CkB,EAAajC,KACRnjB,KAAKG,cAAcklB,WAAWD,EAAajC,QACzCiC,EAAalB,OACfoB,OAAOC,SAASrB,KAAOkB,EAAalB,uCAMtC,IAAAsB,EAAAxlB,KACDylB,EAAyBzlB,KAAKgP,MAAMwR,oBAAsB,EAC1DkF,EAAYD,EAAyB,UAAY,cACvD,OACEE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD3lB,OAAA8T,OAAA,CACE8R,OAAQ,IACR/O,SAAU,YACN9W,KAAKF,MAAMgmB,WAEfH,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACP6D,SAAU,WACViP,WAAY,SAACva,GAAD,OAAOga,EAAKQ,kBAAiB,IACzCC,YAAa,SAACza,GAAD,OAAOga,EAAKQ,kBAAiB,KAE1CL,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD3lB,OAAA8T,OAAA,CACEJ,MAAO+R,EACPlR,KAAM,iBACFxU,KAAKF,MAAMmkB,UAHjB,CAIEtK,QAAS3Z,KAAKkmB,UAAUxJ,KAAK1c,MAC7BmmB,UAAW,CAACC,IAAOC,KAAOZ,EAAyBW,IAAOE,KAAO,KAAQtmB,KAAKgP,MAAMqR,WAAargB,KAAKgP,MAAMsR,cAAcje,OAAS,EAAI+jB,IAAOG,OAAS,SAGvJd,GACAE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEO,UAAWC,IAAOI,SAEjBxmB,KAAKgP,MAAMsR,cAAcje,SAK9BrC,KAAKgP,MAAMqR,WACXsF,EAAAllB,EAAAmS,cAAC6T,EAAA,EAAD,CACE3T,UAAW,CACT+G,MAAO,CACL6M,MAAO,EACPC,UAAW,OACXC,SAAU,SACV9P,SAAU,WACV+P,IAAK7mB,KAAKF,MAAMuW,SAAW,QAAU,OAEvCyQ,SAAU,CAAC,OAAQ,QACnBf,WAAY,SAACva,GAAD,OAAOga,EAAKuB,2BAA0B,IAClDd,YAAa,SAACza,GAAD,OAAOga,EAAKuB,2BAA0B,MAGrDpB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPE,cAAe,UAGbnT,KAAKgP,MAAMsR,cAAcje,OAAS,EAChCrC,KAAKgP,MAAMsR,cAAc9S,IAAI,SAAC4B,EAAGrD,GAAJ,OAC3B4Z,EAAAllB,EAAAmS,cAACmG,EAAA,EAAD,CACEc,MAAO,CACLC,eAAgB,QAElBN,IAAG,gBAAAjX,OAAkBwJ,GACrB4N,QAAS,SAAAnO,GAAC,OAAIga,EAAKwB,iBAAiB5X,KAEpCuW,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErO,GAAI,EACJU,GAAI,EACJ9E,cAAe,MACfgT,UAAW,CAACC,IAAOhB,aAAuC,SAAzBI,EAAK1lB,MAAMyW,UAAuB6P,IAAOa,KAAO,MACjFhQ,aAAclL,EAAQyZ,EAAKxW,MAAMsR,cAAcje,OAAS,EAA1C,aAAAE,OAA2DijB,EAAK1lB,MAAMoX,MAAMC,OAAOC,SAAY,MAE7GuO,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEkB,SAAU,MACV5T,WAAY,SACZE,eAAgB,UAGdhE,EAAE+K,KACAwL,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD3lB,OAAA8T,OAAA,CACES,KAAMpF,EAAE+K,KACR1F,KAAM,QACNd,MAAO,aACHvE,EAAE6U,YAEN7U,EAAE+J,OACJwM,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE7O,IAAK3H,EAAE+J,MACPlG,MAAO,QACP0D,OAAQ,WAKhBgP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,EACJqS,SAAU,SACVzT,cAAe,UAEfwS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnS,SAAU,EACVG,WAAY,IACZD,MAAO,UACPkG,MAAO,CACL+M,SAAU,SACVxM,WAAY,SACZ8M,aAAc,aAGf9X,EAAEoC,OAELmU,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnS,SAAU,EACVG,WAAY,IACZD,MAAO,YACPkG,MAAO,CACL+M,SAAU,SACVxM,WAAY,SACZ8M,aAAc,aAGf9X,EAAEmU,MAELoC,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnS,SAAU,EACVG,WAAY,IACZD,MAAO,YAENvE,EAAEoU,WAOXmC,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErO,GAAI,EACJ7D,UAAW,UAFb,yCA5YQgB,mECyQbyS,6MArQbnY,MAAQ,CACN4F,QAAQ,EACRwS,SAAU,QAGZC,kCAAe,SAAA1mB,IAAA,IAAAymB,EAAA,OAAAE,EAAA7mB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAERpB,EAAKD,MAAMgW,qBAAwB/V,EAAKD,MAAMynB,sBAAyBxnB,EAAKD,MAAMkC,SAAmC,OAAxBjC,EAAKiP,MAAMoY,SAFhG,CAAAnmB,EAAAE,KAAA,eAAAF,EAAAM,OAAA,UAGJ,GAHI,OAMP6lB,EAAW,GACCnnB,OAAO2L,KAAK7L,EAAKD,MAAMgW,oBAAoB0R,MAEnDjc,QAAS,SAAAkc,GACjB,IAAMC,EAAS,GACfA,EAAOzd,KAAKwd,GACZxnB,OAAO2L,KAAK7L,EAAKD,MAAMgW,qBAAqBvK,QAAS,SAAAoc,GACnD,IAAMC,EAAgB7nB,EAAKD,MAAMgW,oBAAoB6R,GAAUF,GAC3DG,GACFF,EAAOzd,KAAK2d,EAAcC,KAAK5C,SAInCmC,EAASnd,KAAKyd,KAGhB3nB,EAAKwV,SAAS,CACZ6R,aAvBW,wBAAAnmB,EAAAY,SAAAlB,EAAAX,WA4BfG,cAAgB,OA6BhB4U,mDAAe,SAAAhT,EAAOiT,GAAP,OAAAsS,EAAA7mB,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAEbpB,EAAKI,cAAc+U,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5BrV,EAAKD,MAAMiV,cACpBhV,EAAKD,MAAMiV,aAAaC,GARb5S,EAAAjB,KAAA,EAWApB,EAAKD,MAAMuV,QAAQN,aAAaC,GAXhC,cAAA5S,EAAAb,OAAA,SAAAa,EAAAV,MAAA,wBAAAU,EAAAP,SAAAE,EAAA/B,0IA3BTA,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,oDAK9CE,KAAKwS,wDAILxS,KAAKwS,YACLxS,KAAKqnB,0DAGY5U,GACjBzS,KAAKwS,YAEL,IAAMsV,EAAiBrV,EAAUsV,WAAa/nB,KAAKF,MAAMkC,QACnDulB,GAAwB9U,EAAU8U,sBAAwBvnB,KAAKF,MAAMynB,uBACvC9U,EAAUqD,qBAAuB9V,KAAKF,MAAMgW,qBAC9CgS,GAAkBP,IAClDvnB,KAAKqnB,+JAmBPrnB,KAAKuV,SAAS,CACZX,QAAO,IAGT5U,KAAKF,MAAM8U,kBACL5U,KAAK+U,aAAa,gJAIdiT,GACVhoB,KAAKF,MAAMkY,YAAYgQ,GACvBhoB,KAAKF,MAAM4e,8CAGL,IAAAjJ,EAAAzV,KACAioB,EAAwC,WAA7BjoB,KAAKF,MAAMkV,cAE5B,GAAIhV,KAAKF,MAAMkC,QAAQ,CAErB,IAAMkmB,EAAQjoB,OAAO2L,KAAK5L,KAAKF,MAAMgW,qBAAqBzT,OAAO,EAC3D8lB,EAAiBnoB,KAAKgP,MAAMoY,UAAYpnB,KAAKgP,MAAMoY,SAAS5Z,IAAK,SAACka,EAAOrZ,GAC7E,OACEsX,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEzR,GAAI,EACJlB,MAAO,EACPyE,UAAW,EACX8B,IAAK,WAAWnL,EAChB6E,WAAY,SACZC,cAAe,OAGXuU,EAAOla,IAAK,SAACyX,EAAMmD,GAAP,OACVzC,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EAAEiV,EACT/U,cAAe,MACfqG,IAAK,iBAAiByL,EACtB7R,eAAgB,cAEhBuS,EAAAllB,EAAAmS,cAACyV,EAAA,EAAD,CACEpD,MAAOA,EACPqD,YAAWroB,OAAAsoB,EAAA,EAAAtoB,CAAA,CACTglB,MAAMA,GACFxP,EAAKtV,cAAcqB,gBAAgB,CAAC,QAAQ,SAASyjB,KAE3DuD,UAAW,CACThU,KAAK,OACL1U,MAAM,CACJ2Y,GAAG,CAAC,EAAE,GACNlE,GAAG,CAAC,EAAE,GACNtB,MAAM,CAAC,QAAQ,OACf0D,OAAO,CAAC,QAAQ,WAItBgP,EAAAllB,EAAAmS,cAACyV,EAAA,EAADpoB,OAAA8T,OAAA,GACM0B,EAAK3V,MADX,CAEEmlB,MAAOA,EACPqD,YAAa,CACXrD,MAAMA,GAERuD,UAAW,CACThU,KAAK,eACL1U,MAAM,CACJ2T,SAAS,CAAC,EAAE,GACZD,WAAW,IACXG,MAAM,sBAa1B,OACEgS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CAAOhH,OAAQ5e,KAAKF,MAAM8e,QACxB+G,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAD,CAAW1J,UAAW/e,KAAKF,MAAM4e,YAC/BiH,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAUzJ,OAAX,CAAkBxN,MAAO,qBACzBmU,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAUvJ,KAAX,KACEyG,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE1S,WAAY,SACZD,MAAO,CAAC,OAAQ,QAChBE,cAAe,SACfC,eAAgB,UAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPM,GAAI,CAAC,EAAE,GACPL,WAAY,SACZC,cAAe,SACf2L,SAAU,CAAC,OAAO,QAClB1L,eAAgB,WAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPyV,QAAS1oB,KAAKF,MAAMkC,QACpBmkB,UAAqC,UAAzBnmB,KAAKF,MAAMyW,UAAwB6P,IAAOvG,SAAWuG,IAAOtG,gBAG5E6F,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPM,GAAI,CAAC,EAAE,GACPL,WAAY,SACZC,cAAe,SACf2L,SAAU,CAAC,OAAO,SAElB6G,EAAAllB,EAAAmS,cAACgT,EAAA,EAAQtS,GAAT,CACEK,MAAO,YACPD,UAAW,UAFb,aAMEyU,IAGDF,GACCtC,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPM,GAAI,CAAC,EAAE,GACPL,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAQtS,GAAT,CACEC,GAAI,EACJI,MAAO,YACPD,UAAW,UAHb,UAOAiS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QA9DzB,CAAC,WAAW,aAiEA3F,IAAK,SAAAmb,GACb,IAAMC,EAAanT,EAAKtV,cAAcqB,gBAAgB,CAAC,QAAQmnB,IAC/D,OACEhD,EAAAllB,EAAAmS,cAACiW,EAAA,EAAD5oB,OAAA8T,OAAA,GACM0B,EAAK3V,MADX,CAEE0Z,IAAG,QAAAjX,OAAUomB,GACb7V,UAAW,CACT2E,GAAG,CAAC,EAAE,GACN8B,GAAG,CAAC,EAAE,GACNtG,MAAM,OACN6T,SAAS,CAAC,MAAM,SAElB3M,KAAMyO,EAAWzO,KACjBoJ,KAAMqF,EAAW1U,MACjB4D,YAAc,SAAAtM,GAAC,OAAIiK,EAAKuC,YAAL,SAAAzV,OAA0BqmB,EAAWnP,kBAY5EkM,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAUK,OAAX,KACEnD,EAAAllB,EAAAmS,cAACmW,EAAA,EAAD,CACEC,WAAY,gBACZC,UAAWjpB,KAAKgP,MAAM4F,OACtBkD,YAAW7X,OAAAipB,EAAA,EAAAjpB,CAAAqnB,EAAA7mB,EAAAC,KAAG,SAAAwC,IAAA,OAAAokB,EAAA7mB,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EAAoBsU,EAAKb,SAAzB,wBAAAtR,EAAAzB,SAAAqB,EAAAlD,SACduf,YAAa,CAAC4G,UAAUC,IAAOnG,eAAerI,aAAa,OAAOzD,GAAG,CAAC,EAAE,GAAG2S,SAAS,CAAC,OAAO,SAASrS,KAAK,CAAC,OAAO,gBAQ9H,OAAO,YAnQgB+K,IAAM9K,qBC0flByU,6MAxfbna,MAAQ,CACNoa,YAAa,KACbC,iBAAkB,KAClBzU,QAAQ,KAIV0U,aAAe,OACfnpB,cAAgB,OAChB4U,mDAAe,SAAApU,EAAMqU,GAAN,OAAAsS,EAAA7mB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbpB,EAAKI,cAAc+U,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5BrV,EAAKD,MAAMiV,cACpBhV,EAAKD,MAAMiV,aAAaC,GARb/T,EAAAE,KAAA,EAWApB,EAAKD,MAAMuV,QAAQC,iBAXnB,cAAArU,EAAAM,OAAA,SAAAN,EAAAS,MAAA,wBAAAT,EAAAY,SAAAlB,EAAAX,iEA2FfupB,YAAc,SAAAC,GACZzpB,EAAKwV,SAAS,SAAAvG,GAAK,OAAA/O,OAAAsoB,EAAA,EAAAtoB,CAAA,GACd+O,EADc,CAEjBoa,YAAapa,EAAMoa,cAAgBI,EAAY,KAAOA,8LA/ExDxpB,KAAKuV,SAAS,CACZX,QAAQ,IAGV5U,KAAKF,MAAM8U,kBACL5U,KAAK+U,aAAa,gJAIpB/U,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,OAG9CE,KAAKspB,aAAetpB,KAAKG,cAAcspB,uKAIvCzpB,KAAKwS,YACLxS,KAAK0pB,oPAIkBjX,EAAWC,8EAClC1S,KAAKwS,YAE0B8I,KAAKC,UAAU9I,EAAU2I,QAAQI,YAAcF,KAAKC,UAAUvb,KAAKF,MAAMsb,QAAQI,WAE9Gxb,KAAK0pB,uBAGgBjX,EAAUzQ,UAAYhC,KAAKF,MAAMkC,SAEtDhC,KAAKuV,SACH,CACE6T,YAAa,MAEf,WACE3T,EAAKiU,4SAQN1pB,KAAKF,MAAMkC,kDACP,aAGHsf,EAAiBthB,KAAKG,cAAcgb,qBACpCwO,EAAqB3pB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAa,SACtEooB,EAAsBD,EAAmB3H,SAAW2H,EAAmB7O,kBAAkBmH,SAASX,EAAexQ,IACnHuY,EAAmB,MAEnBO,0BACFP,EAAmBrpB,KAAKG,cAAckB,MAAM,aAIlC8I,QAAQC,IAAI,CACpBpK,KAAKspB,aAAaO,WAAW7pB,KAAKF,MAAMkC,SACxChC,KAAKspB,aAAaQ,mBAAmB9pB,KAAKF,MAAMkC,+CAJhDC,OACA8nB,OAME9nB,GAAW8nB,IACbV,EAAmBrpB,KAAKG,cAAckB,MAAMY,GAAS+nB,KAAKD,qCAIvD/pB,KAAKuV,SAAS,CACnB8T,0JAWK,IAAA5N,EAAAzb,KACDiqB,EAAiBjqB,KAAKG,cAAcihB,cAAc,kBAAkB,EAAO,MAC3E8I,EAAgBD,EAAiBjqB,KAAKG,cAAcqB,gBAAgB,CAAC,aAAcyoB,EAAezd,gBAAkB,KACpH2d,EAAaD,GAAiBA,EAAc/P,KAAO+P,EAAc/P,KAAO8P,EAAc,GAAA1nB,OAAM0nB,EAAezd,cAArB,QAA2C,KAEvI,OAAOxM,KAAKF,MAAMkC,QAChB2jB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPwF,GAAI,CAAC,EAAE,GACPqE,GAAI,SACJ3J,cAAe,CAAC,SAAU,OAC1BD,WAAY,CAAC,aAAc,WAE3ByS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3N,GAAI,CAAC,EAAE,GACP9E,cAAe,MACfD,WAAY,SACZD,MAAO,CAAC,EAAG,eACXG,eAAgB,iBAGdpT,KAAKF,MAAMuW,UACTsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,EACJkE,GAAI,GAEJkN,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnR,KAAM,QACNd,MAAO,YACPgG,QAAS3Z,KAAKF,MAAMsqB,WACpB5V,KAAMxU,KAAKF,MAAMuqB,WAAa,QAAU,WAM7CrqB,KAAKF,MAAMuW,UACVsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnO,GAAI,EACJxE,MAAO,cACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGhBuS,EAAAllB,EAAAmS,cAAC6H,EAAA,EACKza,KAAKF,QAMfE,KAAKF,MAAMuW,UACTsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,IACPG,eAAgB,YAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE/L,MAAO,CACLlC,QAAQ,OACR1E,MAAM,UACN6G,eAAe,QAEjBH,QAAS,SAAAnO,GAAC,OAAIiQ,EAAK8N,YAAY,aAE/B5D,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE7W,EAAG,EACHkE,MAAO,OACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,CAAC,SAAU,eAG3B8W,EACEvE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,CAAC,EAAG,GACRxF,MAAO,MACP0D,OAAQ,MACRgB,QAAS,cACT2S,IAAKL,EAAezd,cACpBuK,IAAG,qBAAAxU,OAAuB4nB,KAG5BxE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,CAAC,EAAG,GACRhE,KAAM,MACNd,MAAO,YACPa,KAAM,kBAKVxU,KAAKF,MAAMuW,SACTsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnS,SAAU,EACVD,WAAY,EACZG,MAAO,YAEPkG,MAAO,CACLgD,KAAM,IACN+J,SAAU,SACVM,aAAc,aAGflnB,KAAKF,MAAMkC,SAGd2jB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpO,GAAI,EACJ+S,YAAW,aAAAhoB,OAAevC,KAAKF,MAAMoX,MAAMC,OAAOC,UAElDuO,EAAAllB,EAAAmS,cAAC4X,EAAA,EAADvqB,OAAA8T,OAAA,CACEN,SAAU,EACVD,WAAY,GACRxT,KAAKF,MAHX,CAIE6T,MAAO,YACPuQ,KAAMlkB,KAAKF,MAAMkC,cAO3B2jB,EAAAllB,EAAAmS,cAAC6X,EAADxqB,OAAA8T,OAAA,CACE+R,UAAW,CAAE/W,EAAG,GAChBkV,UAAW,CAAElV,EAAG,EAAG0F,KAAM,UACrBzU,KAAKF,WAOhBE,KAAKF,MAAMuW,UACVsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpO,GAAI,CAAC,EAAE,GACPqC,MAAO,CACLgD,KAAM,YAER5J,MAAO,CAAC,EAAG,QACXC,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,EACJoB,MAAO,CACLC,eAAe,QAEjBH,QAAS,SAAAnO,GAAC,OAAIiQ,EAAK8N,YAAY,aAE/B5D,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE7W,EAAG,EACHkE,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,CAAC,SAAU,eAGzB8W,EACEvE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,CAAC,EAAG,GACRxF,MAAO,MACP0D,OAAQ,MACRgB,QAAS,cACT2S,IAAKL,EAAezd,cACpBuK,IAAG,qBAAAxU,OAAuB4nB,KAG5BxE,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,CAAC,EAAG,GACRhE,KAAM,MACNd,MAAO,YACPa,KAAM,kBAKVxU,KAAKF,MAAMuW,SACTsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,EACJhF,SAAU,EACVD,WAAY,EACZG,MAAO,YAEPkG,MAAO,CACLgD,KAAM,IACN+J,SAAU,SACVM,aAAc,aAGflnB,KAAKF,MAAMkC,SAGd2jB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpO,GAAI,EACJ+S,YAAW,aAAAhoB,OAAevC,KAAKF,MAAMoX,MAAMC,OAAOC,UAElDuO,EAAAllB,EAAAmS,cAAC4X,EAAA,EAADvqB,OAAA8T,OAAA,CACEN,SAAU,EACVD,WAAY,GACRxT,KAAKF,MAHX,CAIE6T,MAAO,YACPuQ,KAAMlkB,KAAKF,MAAMkC,cAO7B2jB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE/L,MAAO,CACLC,eAAe,QAEjBH,QAAS,SAAAnO,GAAC,OAAIiQ,EAAK3b,MAAM4qB,aAAY,KAErC/E,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE7W,EAAG,EACHkE,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,CAAC,SAAU,eAE3BuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,EACJxF,MAAO,QACP0D,OAAQ,QACRgB,QAAS,cACTZ,IAAG,2BAGH/W,KAAKgP,MAAMqa,kBACT1D,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpS,WAAY,EACZC,SAAU,CAAC,EAAG,GACdE,MAAO,aAEN3T,KAAKgP,MAAMqa,iBAAiBpd,QAAQ,GALvC,WAWR0Z,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,EACJrB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE/L,MAAO,CACLC,eAAe,QAEjBH,QAAS3Z,KAAKF,MAAMkC,QAAU,SAAAwJ,GAAC,OAAIiQ,EAAK7G,UAAW5U,KAAKF,MAAM6qB,2BAE9DhF,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE7W,EAAG,EACHkE,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,aAChB8E,aAAc,SAAA1M,GAAC,OAAIiQ,EAAKlG,SAAS,CAAET,SAAS,KAC5CqD,aAAc,SAAA3M,GAAC,OAAIiQ,EAAKlG,SAAS,CAAET,SAAS,MAE5C6Q,EAAAllB,EAAAmS,cAAC0H,EAAA,EAAD,CACEjC,QAASrY,KAAKgP,MAAM8F,QACpBwD,QAAS,oBACTC,MAAO,yBACPC,WAAY,CACVf,GAAI,EACJxE,MAAO,OACP0D,OAAQ,OACRgB,QAAS,mBAKjBgO,EAAAllB,EAAAmS,cAAC6X,EAADxqB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEEmkB,UAAW,CACTxP,KAAM,SAERqR,UAAW,CACTvR,GAAI,QAOhBoR,EAAAllB,EAAAmS,cAACgY,EAAD3qB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEE8e,OAAmC,YAA3B5e,KAAKgP,MAAMoa,YACnB1K,WAAY,SAAAlT,GAAC,OAAIiQ,EAAK8N,YAAY,gBAItC5D,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3N,GAAI,EACJhF,MAAO,EACPwF,GAAI,CAAC,EAAE,IAEPkN,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPC,WAAY,SACZ2G,MAAO,CAAEzG,eAAgB,cACzBA,eAAgB,CAAC,aAAc,aAE9BpT,KAAKF,MAAMuW,UACVsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CAAMnN,GAAI,GACRkN,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnR,KAAM,QACNd,MAAO,YACPgG,QAAS3Z,KAAKF,MAAMsqB,WACpB5V,KAAMxU,KAAKF,MAAMuqB,WAAa,QAAU,WAK3CrqB,KAAKF,MAAMuW,UACVsP,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPG,eAAgB,CAAC,gBAAiB,eAElCuS,EAAAllB,EAAAmS,cAAC6H,EAAA,EAADxa,OAAA8T,OAAA,CACE8H,WAAY,CACV5D,GAAI,EACJV,GAAI,EACJtE,MAAO,CAAC,OAAQ,QAChB0D,OAAQ,CAAC,OAAQ,UAEf3W,KAAKF,UAMnB6lB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPE,cAAe,MACfD,WAAY,CAAC,UACbE,eAAgB,YAEhBuS,EAAAllB,EAAAmS,cAACiY,EAAA,EAAD5qB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEEyf,YAAa,CACXtM,MAAM,OACNyE,UAAW,OACXmC,MAAO,CACLlC,QAAS,OACTvE,eAAgB,eAGpB0E,YAAa9X,KAAKF,MAAMkC,QAAU,SAAAwJ,GAAC,OAAIiQ,EAAK7G,UAAW5U,KAAKF,MAAM6qB,4BAElEhF,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnN,GAAI,EACJxF,MAAO,EACPC,WAAY,SACZE,eAAgB,cAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,EACJwH,GAAI,EACJtD,GAAI,CAAC,EAAG,GACRyB,MAAO,SACPvD,OAAQ,QACRI,IAAK,kCAEP4O,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpO,GAAI,EACJiB,GAAI,EACJjF,WAAY,EACZG,MAAO,QACPF,SAAU,CAAC,GACXqX,aAAc,SACd1X,eAAgB,UAPlB,qBAaJuS,EAAAllB,EAAAmS,cAAC6X,EAADxqB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEEmkB,UAAW,CACTxP,KAAM,SAERqR,UAAW,CACTvR,GAAI,eAhfQG,sBCyUXqW,6MA1Ub/b,MAAQ,CACNgc,MAAM,KACN/oB,QAAQ,KACRgpB,SAAS,KACTlB,UAAU,KACVmB,WAAY,CACVC,OAAO,KACPC,SAAQ,MAKZjrB,cAAgB,OAChBmpB,aAAe,OAYf+B,mCAAgB,SAAA1qB,IAAA,IAAA2qB,EAAAC,EAAAtpB,EAAA8nB,EAAAiB,EAAA,OAAA1D,EAAA7mB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIJgJ,QAAQC,IAAI,CACpBrK,EAAKupB,aAAaO,WAAW9pB,EAAKD,MAAMkC,SACxCjC,EAAKupB,aAAaQ,mBAAmB/pB,EAAKD,MAAMkC,WANpC,OAAAspB,EAAArqB,EAAAS,KAAA6pB,EAAAtrB,OAAAurB,EAAA,EAAAvrB,CAAAqrB,EAAA,GAEZrpB,EAFYspB,EAAA,GAGZxB,EAHYwB,EAAA,GASVP,EAAQjrB,EAAKI,cAAckB,MAAM,GACjCY,GAAW8nB,IACbiB,EAAQjrB,EAAKI,cAAckB,MAAMY,GAAS+nB,KAAKD,IAGjDhqB,EAAKwV,SAAS,CACZyV,QACA/oB,UACA8nB,cAjBY,wBAAA9oB,EAAAY,SAAAlB,EAAAX,WAkDhByrB,2BAAQ,SAAA1pB,IAAA,IAAAoB,EAAAC,EAAA,OAAAkkB,EAAA7mB,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACAgC,EAAW,SAAC0hB,EAAG6G,GAEnB,IAAM9N,EAAY,CAChBxI,YAAa,QACbD,cAAe,aACf2L,WAAY+D,EAAGH,OAASG,EAAGH,OAASgH,GAGlCA,IACF9N,EAAUkD,WAAa/gB,EAAKI,cAAcwrB,oBAAoBD,KAI5DA,GAA8B,UAArB9N,EAAU8G,SACrB3kB,EAAKI,cAAc+U,yBAAyB0I,GAG9C,IAAMgO,EAAW,CACfV,WAAY,CACVC,OAAO,KACPC,SAAQ,GAEVH,SAASpG,EAAGH,OAASG,EAAGH,OAAS,SAGjB,YAAdG,EAAGH,SACLkH,EAAS3pB,QAAUlC,EAAKiP,MAAM+a,UAC9B6B,EAAS7B,UAAYhqB,EAAKI,cAAckB,MAAM,GAEN,oBAA7BtB,EAAKD,MAAM+rB,eACpB9rB,EAAKD,MAAM+rB,iBAIf9rB,EAAKwV,SAASqW,IAGVxoB,EAAkB,SAACyhB,GACvB,IAAMsG,EAAStG,EAAGvT,gBAClBvR,EAAKwV,SAAS,SAAC7C,GAAD,MAAgB,CAC5BwY,WAAWjrB,OAAAsoB,EAAA,EAAAtoB,CAAA,GACNyS,EAAUwY,WADL,CAERC,eAKNprB,EAAKupB,aAAawC,aAAa3oB,EAASC,GAExCrD,EAAKwV,SAAS,SAAC7C,GAAD,MAAgB,CAC5BwY,WAAWjrB,OAAAsoB,EAAA,EAAAtoB,CAAA,GACNyS,EAAUwY,WADL,CAERE,SAAQ,OArDN,wBAAAhpB,EAAAP,SAAAE,EAAA/B,WA0DR0e,iDAAa,SAAAhc,EAAOoiB,GAAP,OAAAwC,EAAA7mB,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACXpB,EAAKD,MAAM4e,aADA,wBAAA7b,EAAAhB,SAAAa,EAAA1C,0IArHPA,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,OAG9CE,KAAKspB,aAAetpB,KAAKG,cAAcspB,+DAyBvCzpB,KAAKwS,YACLxS,KAAKqrB,4DAILrrB,KAAKwS,uDAGYC,EAAUC,GAC3B1S,KAAKwS,YAEL,IAAMsV,EAAiBrV,EAAUzQ,UAAYhC,KAAKF,MAAMkC,QAClD+pB,EAAyBzQ,KAAKC,UAAU9I,EAAU2I,QAAQI,YAAcF,KAAKC,UAAUvb,KAAKF,MAAMsb,QAAQI,WAC5GsM,GAAkBiE,IACpB/rB,KAAKqrB,oKAKPrrB,KAAKuV,SAAS,CACZ0V,SAAS,KACTC,WAAY,CACVC,OAAO,KACPC,SAAQ,wIAoEZ,IAAMY,EAAmBhsB,KAAKG,cAAc8rB,uBACtCzK,EAAmBxhB,KAAKG,cAAcqB,gBAAgB,CAAC,eACvD0gB,EAAoBV,EAAiBQ,SAAWR,EAAiB1G,kBAAkBmH,SAAS+J,GAClG,OACErG,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEhH,OAAQ5e,KAAKF,MAAM8e,QAEnB+G,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAD,CACEyD,SAAS,EACTC,UAAW,QACXrN,SAAU,CAAC,OAAO,SAClBC,UAAW/e,KAAKF,MAAM4e,WACtB0N,WAAY,4FAEZzG,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAUzJ,OAAX,CACEC,GAAI,EACJoN,WAAY,CACV1Y,MAAM,SAERnC,MAAO,oBACPyF,aAAc,oCAGhB0O,EAAAllB,EAAAmS,cAAC6V,EAAA,EAAUvJ,KAAX,CACEjH,GAAI,GAEJ0N,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEzR,GAAI,EACJlB,MAAO,MACP0D,OAAQ,MACRI,IAAK,2BAEP4O,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEzR,GAAI,EACJV,SAAU,EACVE,MAAO,QACPH,WAAY,KAEXxT,KAAKgP,MAAMgc,MAAQhrB,KAAKgP,MAAMgc,MAAM/e,QAAQ,GAAK,KAEpD0Z,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErS,GAAI,EACJE,SAAU,EACVE,MAAO,QACPH,WAAY,IACZE,UAAW,UAGT1T,KAAKgP,MAAM+a,WAAa/pB,KAAKgP,MAAM+a,UAAUuC,GAAG,GAAK,iEAAmE,+DAG5H3G,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEhP,GAAI,EACJrD,GAAI,EACJN,MAAO,EACPE,cAAe,SACf8D,aAAc,mCAEd0O,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErS,GAAI,EACJN,MAAO,EACPE,cAAe,MACfC,eAAgB,iBAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEjS,MAAO,QACPH,WAAY,KAFd,YAMAmS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEjS,MAAO,QACPH,WAAY,KAEXxT,KAAKgP,MAAM/M,QAAUjC,KAAKgP,MAAM/M,QAAQgK,QAAQ,GAAK,MAG1D0Z,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE3S,MAAO,EACPE,cAAe,MACfC,eAAgB,iBAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEjS,MAAO,QACPH,WAAY,KAFd,cAMAmS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEjS,MAAO,QACPH,WAAY,KAEXxT,KAAKgP,MAAM+a,UAAY/pB,KAAKgP,MAAM+a,UAAU9d,QAAQ,GAAK,MAI5DiW,GACEyD,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACElM,KAAI,KAAAnX,OAAOvC,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,gBAE5DmkB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEC,OAAQ,GACR/O,SAAU,WACV5D,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBuS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEnS,SAAU,EACVE,MAAO,QACPH,WAAY,KAHd,oBAOAmS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,EACJE,KAAM,MACNd,MAAO,QACPa,KAAM,iBAQhBmR,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErS,GAAI,EACJN,MAAO,EACP4S,OAAQ,GACR/O,SAAU,WACV5D,WAAY,SACZE,eAAgB,UAGdpT,KAAKgP,MAAM+a,WAAa/pB,KAAKgP,MAAM+a,UAAUuC,GAAG,GAE9CtsB,KAAKgP,MAAMkc,YAAclrB,KAAKgP,MAAMkc,WAAWE,QAC7CzF,EAAAllB,EAAAmS,cAAC2Z,EAAA,EAADtsB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEE0sB,UAAW,QACXC,gBAAiB,YACjBC,qBAAsB,QACtBC,SAAQ,qBACRzI,KAAMlkB,KAAKgP,MAAMkc,WAAWC,OAC5ByB,WAAU,8BACVC,kBAAmB7sB,KAAK6sB,kBAAkBnQ,KAAK1c,SAGjD2lB,EAAAllB,EAAAmS,cAACiY,EAAA,EAAD,CACEtL,YAAa,CACX5L,MAAM,OACNV,MAAM,CAAC,EAAE,OACTkZ,UAAU,QACVW,cAAc,OACdC,UAAU/sB,KAAKgP,MAAM+a,WAAa/pB,KAAKgP,MAAM+a,UAAUiD,IAAI,IAE7DlV,YAAa9X,KAAKyrB,MAAM/O,KAAK1c,OAR/B,SAcF2lB,EAAAllB,EAAAmS,cAACiY,EAAA,EAAD,CACEtL,YAAa,CACX5L,MAAM,OACNV,MAAM,CAAC,EAAE,OACTkZ,UAAU,QACVW,cAAc,QAEhBhV,YAAa9X,KAAK0e,WAAWhC,KAAK1c,OAPpC,qBArTCwf,IAAM9K,WCCvBuY,6MACJje,MAAQ,CACN+a,UAAW,KACXhmB,cAAe,KACfyR,gBAAgB,KAIlB8T,aAAe,OACfnpB,cAAgB,OAChBwgB,eAAiB,OA4CjB5L,mDAAe,SAAApU,EAAMqU,GAAN,OAAAsS,EAAA7mB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbpB,EAAKI,cAAc+U,yBAAyB,CAC1CE,YAAa,SACbD,cAAe,YAGsB,oBAA5BpV,EAAKD,MAAMiV,cACpBhV,EAAKD,MAAMiV,aAAaC,GARb/T,EAAAE,KAAA,EAWApB,EAAKD,MAAMuV,QAAQN,aAAaC,GAXhC,cAAA/T,EAAAM,OAAA,SAAAN,EAAAS,MAAA,wBAAAT,EAAAY,SAAAlB,EAAAX,0IAzCTA,KAAK2gB,eACP3gB,KAAK2gB,eAAevgB,SAASJ,KAAKF,OAElCE,KAAK2gB,eAAiB,IAAI9gB,IAAeG,KAAKF,OAGhDE,KAAKG,cAAgBH,KAAK2gB,eAAexgB,cACzCH,KAAKspB,aAAetpB,KAAKG,cAAcspB,uKAIvCzpB,KAAKwS,YACLxS,KAAKktB,gMAGkBza,EAAWC,8EAClC1S,KAAKwS,YAECsV,EAAiBrV,EAAUzQ,UAAYhC,KAAKF,MAAMkC,QAClDmrB,EAAiB7R,KAAKC,UAAU9I,EAAU2I,QAAQI,YAAcF,KAAKC,UAAUvb,KAAKF,MAAMsb,QAAQI,WACpGsM,IAAkBqF,kCACdntB,KAAKktB,qQAKeltB,KAAKG,cAAcqB,gBAAgB,CAC7D,YACA,OACA,cAEyBxB,KAAKF,MAAMkC,wCACZhC,KAAKspB,aAAaQ,mBACxC9pB,KAAKF,MAAMkC,gBADP+nB,SAGN/pB,KAAKuV,SAAS,CACZwU,uPAoBJ/pB,KAAKF,MAAMkY,YAAY,KAAK,yIAGlBxC,GACVxV,KAAKuV,SAAS,CACZC,oDAIK,IAAAC,EAAAzV,KACP,OACE2lB,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,KACED,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErO,GAAI,EACJtE,MAAO,EACP6J,GAAI,SACJ3J,cAAe,MACfC,eAAgB,gBAChBF,WAAY,CAAC,WAAY,UACzB+D,aAAY,aAAA1U,OAAevC,KAAKF,MAAMoX,MAAMC,OAAOiW,kBAEnDzH,EAAAllB,EAAAmS,cAACya,EAADptB,OAAA8T,OAAA,CACEd,MAAO,GACHjT,KAAKF,MAFX,CAGE4qB,YAAa1qB,KAAK0qB,YAAYhO,KAAK1c,MACnCgY,YAAahY,KAAKF,MAAMkY,YAAY0E,KAAK1c,UAI3CA,KAAKgP,MAAM+a,WAAa/pB,KAAKgP,MAAM+a,UAAUuC,GAAG,IAC9C3G,EAAAllB,EAAAmS,cAAC6T,EAAA,EAAD,CACE3T,UAAW,CACT/D,EAAG,EACHoF,GAAI,EACJlB,MAAO,GAETiK,UAAU,EACV5F,eAAe,GAEfqO,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACE1S,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAU,QAE1BwS,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACEpS,WAAY,IACZC,SAAU,OACVE,MAAO,aACPD,UAAW,UAJb,0CAOEiS,EAAAllB,EAAAmS,cAACmG,EAAA,EAAD,CACExE,GAAI,EACJf,WAAY,IACZG,MAAO,UACPF,SAAU,OACV6Z,WAAY,UACZ5T,KACE,uEAPJ,iBAPF,cAmBc1Z,KAAKgP,MAAM+a,UAAU9d,QAAQ,GAnB3C,0BAsBA0Z,EAAAllB,EAAAmS,cAACgT,EAAA,EAAD,CACErR,GAAI,CAAC,EAAG,GACRJ,GAAI,CAAC,EAAG,GACRM,KAAM,QACN0X,UAAW,OACXxS,QAAS,SAAAnO,GAAC,OAAIiK,EAAKiV,aAAY,KALjC,eAaR/E,EAAAllB,EAAAmS,cAAC2a,EAADttB,OAAA8T,OAAA,GACM/T,KAAKF,MADX,CAEE8e,OAAQ5e,KAAKgP,MAAMwG,eACnBqW,cAAe7rB,KAAKktB,SAASxQ,KAAK1c,MAClC0e,WAAY,SAAAlT,GAAC,OAAIiK,EAAKiV,aAAY,eAxJdhW,aA+JfuY,4BCtKfxN,EAAAC,QAAA,CAAkB2G,KAAA,4BAAAC,KAAA,4BAAAE,QAAA,+BAAAgH,KAAA,4BAAApI,aAAA,oCAAA6B,KAAA","file":"static/js/1.1c921ca0.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  claimVestedTokens = async (account=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','claim',[],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false,\n    isHover: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceRoute = governanceConfig.baseRoute;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + '/' + Object.keys(this.props.availableStrategies)[0];\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={4}\n          pb={2}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              height={\"42px\"}\n              position={\"relative\"}\n              src={this.functionsUtil.checkUrlOrigin() ? !isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\" : !isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Box\n          mb={3}\n          pb={3}\n          width={1}\n          justifyContent={\"center\"}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <DashboardCard\n            {...this.props}\n            isInteractive={true}\n            cardProps={{\n              py: 1,\n              pr: 1,\n              mx: 'auto',\n              mb: [0, 3],\n              width: 0.8,\n              boxShadow: 0,\n              display: \"flex\",\n              borderRadius: 1,\n              justifySelf: \"center\",\n              justifyContent: \"center\",\n            }}\n            handleClick={e => this.props.isDashboard ? this.props.goToSection(governanceRoute, false) : this.props.goToSection(dashboardRoute, false) }\n          >\n            <Flex\n              px={2}\n              py={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              onMouseEnter={e => this.setState({ isHover: true })}\n              onMouseLeave={e => this.setState({ isHover: false })}\n            >\n              <HoverImage\n                hoverOn={this.state.isHover}\n                noHover={'images/sidebar/switch.svg'}\n                hover={'images/sidebar/switchHover.svg'}\n                imageProps={{\n                  mr: 2,\n                  width: \"16px\",\n                  height: \"16px\",\n                  display: \"inline-flex\"\n                }}\n              />\n              <Text\n                fontSize={1}\n                color={\"text\"}\n                fontWeight={500}\n              >\n                Switch to {this.props.isDashboard ? 'Governance' : 'Dashboard'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n        </Box>\n        {\n          this.props.isMobile && (\n            <Flex\n              mb={3}\n              width={'82%'}\n              alignSelf={'center'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        <Flex px={3} flexDirection={\"column\"}>\n          {visibleLinks.map((menuLink, menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n            const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n            return (\n              <Box\n                width={\"auto\"}\n                my={[2, \"8px\"]}\n                key={`menu-${menuIndex}`}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  onClick={this.props.closeMenu}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <Flex\n                    py={2}\n                    px={3}\n                    borderRadius={2}\n                    flexDirection={\"row\"}\n                    alignItems={\"center\"}\n                    border={menuLink.selected ? 2 : null}\n                    backgroundColor={\n                      menuLink.selected ? \"menuHover\" : \"transparent\"\n                    }\n                  >\n                    <Flex\n                      py={1}\n                      width={1}\n                      alignItems={\"center\"}\n                      flexDirection={\"row\"}\n                      justifyContent={\"flex-start\"}\n                    >\n                      {\n                        menuLink.image ? (\n                          <Image\n                            mr={3}\n                            ml={2}\n                            mb={0}\n                            align={\"center\"}\n                            height={\"1.6em\"}\n                            src={menuLink.selected ? activeImage : inactiveImage}\n                          />\n                        ) : menuLink.icon && (\n                          <Icon\n                            name={menuLink.icon}\n                            color={\n                              menuLink.selected\n                                ? \"menuIconActive\"\n                                : isDarkTheme\n                                  ? \"white\"\n                                  : \"dark-gray\"\n                            }\n                            mr={3}\n                            ml={2}\n                            mb={0}\n                            size={\"1.6em\"}\n                          />\n                        )\n                      }\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"text\"}\n                        textAlign={\"center\"}\n                        style={{\n                          whiteSpace: \"nowrap\"\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n              </Box>\n            );\n          })}\n        </Flex>\n\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"100%\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={\n                    this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"\n                  }\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import { Image } from \"rimble-ui\"\nimport React, { Component } from 'react'\nclass HoverImage extends Component {\n\n    render() {\n        return (\n            <Image\n                src={this.props.hoverOn ? this.props.hover : this.props.noHover}\n                {...this.props.imageProps}\n            />\n        )\n    }\n}\nexport default HoverImage;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks: [],\n    defaultNetwork: null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks() {\n\n    if (!this.props.networkInitialized) {\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network', 'availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network', 'enabledNetworks']);\n    const activeNetworks = enabledNetworks.map(networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value: networkId,\n        config: networkConfig,\n        label: networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find(network => network.value === requiredNetwork.id);\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId) {\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized) {\n      this.setState({\n        defaultNetwork: null\n      }, () => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex: '1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          bg={\"cardBg\"}\n          px={0}\n        >\n          <Flex\n            {...props.innerxProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{ cursor: 'pointer' }}\n            justifyContent={'flex-start'}\n            bg={\"cardBg\"}\n\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        outerColor={\"cardBg\"}\n        name={'network'}\n        isDashboard={true}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px: 1,\n          py: 0,\n          height: '42px',\n          boxShadow: 0,\n          borderRadius: 0,\n          border: 0,\n          backgroundColor: \"cardBg\"\n\n        }, this.props.innerProps)}\n        customOptionProps={{\n          px: 0,\n          pl: 3,\n          pr: 0\n        }}\n        notInteractive=\"true\"\n        noShadow=\"true\"\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n        <DashboardCard\n          {...this.props}\n          cardProps={{\n            boxShadow: 0,\n            borderRadius: 0,\n            border: 0,\n            px: [2, 3],\n            display: 'flex',\n            width: [1, 'auto'],\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'cardBg',\n\n            height: (this.props.innerProps && this.props.innerProps.height) || '42px',\n          }}\n          isInteractive={false}\n          isActive={false}\n        >\n          <Loader size={'20px'} />\n        </DashboardCard>\n      );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened: false,\n    notifications: [],\n    mouseOverBell: false,\n    unreadNotifications: 0,\n    lastOpenTimestamp: null,\n    mouseOverNotifications: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened) {\n      this.setState({\n        tabOpened: false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length > 0) {\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged) {\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter(n => n.timestamp > this.state.lastOpenTimestamp).length : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp() {\n    const lastOpenTimestamp = Date.now();\n\n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams', notificationsParams, true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications() {\n\n    // Get stored lastOpenTimestamp for notifications\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools', 'batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools', 'polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network', 'blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null, 'Active', oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account, 'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter(n => (n.enabled && n.start <= currTime && n.end > currTime));\n\n    // Show latest Substack for 1 week\n    if (latestFeed) {\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7, 'd'))) {\n        notifications.push({\n          link: latestFeed.link,\n          image: '/images/substack.png',\n          timestamp: latestFeedDate._d.getTime(),\n          title: this.functionsUtil.htmlDecode(latestFeed.title),\n          text: this.functionsUtil.htmlDecode(latestFeed.content),\n          date: latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network', 'providers', 'snapshot', 'urls', 'proposals']);\n\n    if (activeSnapshotProposals) {\n      activeSnapshotProposals.forEach(p => {\n        const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/, ''));\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image: '/images/snapshot.png',\n          timestamp: p.msg.payload.start * 1000,\n          link: snapshotProposalBaseUrl + p.authorIpfsHash,\n          title: this.functionsUtil.htmlDecode(p.msg.payload.name),\n          date: this.functionsUtil.strToMoment(p.msg.payload.start * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals) {\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance', 'baseRoute']) + '/proposals/';\n      governanceProposals.forEach(p => {\n        notifications.push(\n          {\n            text: p.title,\n            iconProps: {\n              color: '#00acff'\n            },\n            icon: 'LightbulbOutline',\n            timestamp: p.timestamp * 1000,\n            title: 'Governance Proposal',\n            hash: governanceProposalUrl + p.id,\n            date: this.functionsUtil.strToMoment(p.timestamp * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits) {\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach(batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp * 1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon: 'DoneAll',\n          title: 'Batch Deposit Executed',\n          hash: batchDepositBaseUrl + batchToken,\n          iconProps: {\n            color: this.props.theme.colors.transactions.status.completed\n          },\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions) {\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter(tx => tx.action === 'Withdraw' && tx.included && !tx.exited);\n      polygonWithdrawalsToExit.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n        notifications.push({\n          text,\n          timestamp,\n          image: polygonBridgeConfig.image,\n          title: 'Polygon Withdraw Completed',\n          hash: polygonBridgeBaseUrl + tx.tokenSymbol,\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter(tx => tx.action === 'Deposit' && tx.included);\n      polygonCompletedDeposits.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1, 'd'))) {\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Deposit Completed',\n            hash: depositBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell) {\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications) {\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab() {\n    this.setState((prevState) => ({\n      tabOpened: !prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification) {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link) {\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications > 0;\n    const iconColor = hasUnreadNotifications ? '#0239FF' : 'dashboardBg';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            color={iconColor}\n            name={'Notifications'}\n            {...this.props.iconProps}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell, (hasUnreadNotifications ? styles.ring : null), (this.state.tabOpened || this.state.notifications.length > 0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications &&\n            <Box\n              className={styles.counter}\n            >\n              {this.state.notifications.length}\n            </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n          <DashboardCard\n            cardProps={{\n              style: {\n                right: 0,\n                maxHeight: '21em',\n                overflow: 'scroll',\n                position: 'absolute',\n                top: this.props.isMobile ? '2.8em' : '3em',\n              },\n              minWidth: ['91vw', '22em'],\n              onMouseOut: (e) => this.setMouseOverNotifications(false),\n              onMouseOver: (e) => this.setMouseOverNotifications(true),\n            }}\n          >\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              {\n                this.state.notifications.length > 0 ?\n                  this.state.notifications.map((n, index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration: 'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={e => this.openNotification(n)}\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification, this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index < this.state.notifications.length - 1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                  : (\n                    <Text\n                      py={2}\n                      textAlign={'center'}\n                    >\n                      There are no notifications.\n                    </Text>\n                  )\n              }\n            </Flex>\n          </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Text, Link } from \"rimble-ui\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null,\n    logout: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n  editCardProp() { }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged) {\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState(\n        {\n          isModalOpen: null\n        },\n        () => {\n          this.loadIdleTokenBalance();\n        }\n      );\n    }\n  }\n\n  async loadIdleTokenBalance() {\n\n    if (!this.props.account) {\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', 'IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled) {\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setState({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\", false, null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\", walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        mr={[0,5]}\n        bg={\"cardBg\"}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          px={[2,0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                ml={1}\n                mr={2}\n              >\n                <Icon\n                  size={\"2.4em\"}\n                  color={\"copyColor\"}\n                  onClick={this.props.toggleMenu}\n                  name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.isMobile && (\n              <Flex\n                mx={2}\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          {\n            this.props.isMobile && (\n              <Flex\n                width={0.86}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    display:'flex',\n                    width:'inherit',\n                    textDecoration:'none'\n                  }}\n                  onClick={e => this.toggleModal(\"account\")}\n                >\n                  <Flex\n                    p={0}\n                    width={'100%'}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={[\"center\", \"flex-start\"]}\n                  >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                  </Flex>\n                </Link>\n                <Notifications\n                  flexProps={{ p: 2 }}\n                  iconProps={{ p: 1, size: \"2.5em\" }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              pr={[2,0]}\n              style={{\n                flex: \"1 1 auto\"\n              }}\n              width={[1, \"auto\"]}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                mr={3}\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.toggleModal(\"account\")}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        mr={2}\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Link\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.props.setGovModal(true)}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  <Image\n                    mr={2}\n                    width={\"1.7em\"}\n                    height={\"1.7em\"}\n                    display={\"inline-flex\"}\n                    src={`images/tokens/IDLE.svg`}\n                  />\n                  {\n                    this.state.idleTokenBalance && (\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1, 2]}\n                        color={\"copyColor\"}\n                      >\n                        {this.state.idleTokenBalance.toFixed(2)} IDLE\n                      </Text>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Flex\n                ml={3}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  onClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n                >\n                  <Flex\n                    p={0}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                    onMouseEnter={e => this.setState({ isHover: true })}\n                    onMouseLeave={e => this.setState({ isHover: false })}\n                  >\n                    <HoverImage\n                      hoverOn={this.state.isHover}\n                      noHover={'images/logout.svg'}\n                      hover={'images/logoutHover.svg'}\n                      imageProps={{\n                        mx: 2,\n                        width: \"24px\",\n                        height: \"24px\",\n                        display: \"inline-flex\"\n                      }}\n                    />\n                  </Flex>\n                </Link>\n                <Notifications\n                  {...this.props}\n                  iconProps={{\n                    size: \"2.1em\"\n                  }}\n                  flexProps={{\n                    ml: 2\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        px={2}\n        width={1}\n        mr={[0,5]}\n      >\n        <Flex\n          width={1}\n          alignItems={\"center\"}\n          style={{ justifyContent: \"flex-start\" }}\n          justifyContent={[\"flex-start\", \"flex-end\"]}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={1}\n                justifyContent={['space-between', 'flex-start']}\n              >\n                <NetworkIndicator\n                  innerProps={{\n                    px: 1,\n                    py: 0,\n                    width: ['100%', 'auto'],\n                    height: ['45px', '54px']\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={\"row\"}\n          alignItems={[\"center\"]}\n          justifyContent={\"flex-end\"}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              width:'auto',\n              boxShadow: \"none\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            <Flex\n              mr={2}\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n            >\n              <Image\n                ml={0}\n                pl={0}\n                mr={[2, 3]}\n                align={\"center\"}\n                height={\"1.4em\"}\n                src={\"images/sidebar/plug_white.svg\"}\n              />\n              <Text\n                pr={1}\n                mr={2}\n                fontWeight={3}\n                color={\"white\"}\n                fontSize={[2]}\n                alignContent={\"center\"}\n                justifyContent={\"center\"}\n              >\n                Connect to Idle\n              </Text>\n            </Flex>\n          </RoundButton>\n          <Notifications\n            {...this.props}\n            iconProps={{\n              size: \"2.2em\"\n            }}\n            flexProps={{\n              ml: 2\n            }}\n          />\n        </Flex>\n      </Flex >\n    );\n  }\n}\n\nexport default MenuAccount;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || requiredNetworkChanged){\n      this.loadTokenInfo();\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetworkId);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                {\n                  governanceEnabled && (\n                    <Link\n                      href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                    >\n                      <Flex\n                        zIndex={10}\n                        position={'relative'}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          color={'white'}\n                          fontWeight={400}\n                        >\n                          Go to governance\n                        </Text>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'white'}\n                          name={\"OpenInNew\"}\n                        />\n                      </Flex>\n                    </Link>\n                  )\n                }\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport { Box, Flex, Text, Button } from \"rimble-ui\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box >\n        <Flex\n          py={2}\n          width={1}\n          bg={\"cardBg\"}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n            goToSection={this.props.goToSection.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  IDLE Governance Token is now available,\n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={\"primary\"}\n                    fontSize={\"15px\"}\n                    hoverColor={\"primary\"}\n                    href={\n                      \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                    }\n                  >\n                    discover more\n                  </ExtLink>\n                  ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                  claim.\n                </Text>\n                <Button\n                  ml={[0, 2]}\n                  mt={[2, 0]}\n                  size={\"small\"}\n                  mainColor={\"blue\"}\n                  onClick={e => this.setGovModal(true)}\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}