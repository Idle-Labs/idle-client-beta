{"version":3,"sources":["ImageButton/ImageButton.js","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","CustomList/CustomList.js","FlexLoader/FlexLoader.js","ExtLink/ExtLink.js","Title/Title.js","AssetField/AssetField.js","RoundButton/RoundButton.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","length","ml","hoverColor","path","index","link","pathLink","Link","Text","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","module","exports","trancheFlash","mobile","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","headerContainer","headerBgFiller","bgContainer","list","textContainer","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","left","data","itemPos","xFormatted","mb","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isDisabled","useIconOnly","iconColor","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","cardBgContrast","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","_ref178","_callee109","protocolsAprs","_ref179","_ref180","tokenAllocations","govTokensBalances","_args109","_context109","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x191","getSushiswapPoolTokenPrice","_ref181","_callee110","pairAddresses","_ref182","_ref183","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref184","_ref185","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context110","getSushiswapConversionRate","_x192","_x193","_ref186","_callee111","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context111","_x194","_x195","_ref187","_callee112","unires","_context112","addressForPrice","_x196","_x197","getCurveDepositedTokens","_ref188","_callee113","idleTokensBalances","remainingCurveTokens","_args113","_context113","_x198","getCurveUnevenTokenAmounts","_ref189","_callee114","amounts","max_burn_amount","unevenAmounts","_context114","getCurveDepositContract","_x199","_x200","_callee115","curveRatesInfo","_context115","strategyTokens","getCurveAPYContract","_callee116","blocksForPrevTokenPrice","_ref192","_ref193","prevTokenPrice","blocksMultiplier","curveAPR","_context116","getCurveTokenSupply","_callee117","_context117","getCurvePoolContract","_callee118","_args118","_context118","_callee119","_args119","_context119","_ref197","_callee120","_ref198","_ref199","_context120","_x201","_callee121","depositContractInfo","_context121","getCurveZapContract","_callee122","zapContractInfo","_context122","_callee123","poolContractInfo","_context123","getCurveSwapContract","_callee124","migrationContractInfo","_context124","getCurveIdleTokensAmounts","_callee126","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args126","_context126","_ref205","_callee125","coinIndex","curveIdleTokens","_context125","migrationParams","_x202","getCurveTokensAmounts","_callee128","useCoinIndex","_args128","_context128","_ref207","_callee127","_ref208","_ref209","idleTokenPrice","totalTokenSupply","_context127","_x203","getCurveAmounts","_ref210","_callee130","_args130","_context130","_ref211","_callee129","_context129","_x206","_x204","_x205","getCurveTokenAmount","_ref212","_callee131","_args131","_context131","_x207","getCurveSlippage","_ref213","_callee132","uneven_amounts","depositContract","_ref214","_ref215","Sv","_args132","_context132","_x208","_x209","_ref216","_callee133","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref217","_ref218","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args133","_context133","_x210","_callee135","_args135","_context135","_ref220","_callee134","_ref221","_ref222","_context134","_x211","getStkAaveApr","_ref223","_callee136","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args136","_context136","_x212","_x213","getCompAPR","_ref224","_callee137","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args137","_context137","_x214","_x215","getCompSpeed","_ref225","_callee138","cTokenAddress","compSpeed","_context138","_x216","_ref226","_callee139","cTokenInfo","compoundAllocationPerc","_ref227","_ref228","cTokenTotalSupply","compoundPoolShare","_args139","_context139","_x217","_callee141","_args141","_context141","_ref230","_callee140","_ref231","_ref232","_context140","_x218","_callee143","_args143","_context143","_ref234","_callee142","_ref235","_ref236","compApr","_context142","_x219","getTokensCsv","_callee146","csv","_context146","prototype","sum","pv","cv","avg","_ref238","_callee145","strategy","_context145","_ref239","_callee144","header","aprAvg","scoreAvg","lastRow","_context144","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x221","_x220","_callee148","govToken","convertToken","_args148","_context148","_ref241","_callee147","compTokenBalance","_context147","_x222","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref242","_callee150","govTokensUserDistribution","_args150","_context150","_ref243","_callee149","_context149","_x224","_x223","_ref244","_callee152","govTokensDistribution","tokenGovTokens","_args152","_context152","_ref245","_callee151","govSpeed","_context151","_x226","_x225","getGovTokensAprs","_ref246","_callee154","govTokensAprs","_args154","_context154","_ref247","_callee153","_ref248","_ref249","_ref250","_ref251","cTokenConfig","_context153","aprTooltipMode","_x229","_x227","_x228","_callee156","_args156","_context156","_ref253","_callee155","govTokenBalance","tokenConversionRate","fromTokenConfig","_context155","_x230","_callee157","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args157","_context157","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref255","_callee159","govTokensAmounts","_context159","getGovTokensUserAmounts","_ref256","_callee158","_context158","getGovTokenAddessByIndex","_x233","_x234","_x231","_x232","_ref257","_callee160","_context160","_x235","_x236","_ref258","_callee161","_context161","_x237","_x238","_callee164","govTokenConfigForced","_args164","_context164","_ref260","_callee163","_context163","_ref261","_callee162","_context162","_x240","_x241","_x239","getTokenFees","_callee165","_args165","_context165","_callee166","_ref264","_ref265","feePercentage","gain","fees","_args166","_context166","_ref266","_callee167","_args167","_context167","_x242","getTotalTVL","_callee168","tokensTVL","_context168","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee172","_context172","_ref269","_callee171","_context171","_ref270","_callee170","oldTokenTVL","idleTokenName","_ref271","_ref272","oldTokenConfig","_ref276","_ref277","oldTokenPrice","oldTotalSupply","_context170","showAUM","_ref273","_callee169","_ref274","_ref275","govTokenConversionRate","govTokenBalanceConverted","_context169","_x245","oldProtocols","oldProtocol","protocolPos","_x244","_x243","getSubstackLatestFeed","_callee173","endpointInfo","idleSubstackFeed","latestFeed","_context173","items","getAggregatedStats","_callee174","tvls","totalAUM","_args174","_context174","getAggregatedStats_chain","_callee178","avgAPR","_args178","_context178","_ref281","_callee177","_context177","_ref282","_callee176","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context176","_ref283","_callee175","_ref284","_ref285","_context175","_x248","_x247","_x246","getTokenApy","_ref286","_callee179","_context179","_x249","getTokensToMigrate","_callee182","tokensToMigrate","_args182","_context182","_ref288","_callee181","_context181","_ref289","_callee180","_ref290","_context180","_x251","_x250","getProtocolsTokensBalances","_callee184","tokenBalances","minTokenBalance","protocolsTokens","_args184","_context184","_ref292","_callee183","tokenContract","_context183","_x252","_ref293","_callee185","_args185","_context185","_x253","_x254","_x255","getAvgAPYStats","_ref294","_callee186","apiResults","_args186","_context186","_x256","_x257","_ref295","_callee187","count","_conversionRate","_args187","_context187","_x258","_x259","getTokenScore","_ref296","_callee188","_ref297","_ref298","tokenScore","_context188","protocolScore","getTokenScoreApi","_x260","_x261","_ref299","_callee189","scores","_context189","_x262","_x263","_ref300","_callee190","idleGovTokenShowAPR","idleAPR","_args190","_context190","_x264","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descShort","descLong","best","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.37c548f5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    \"near-black\": \"#111\",\n    \"dark-gray\": \"#4e4e4e\",\n    \"mid-gray\": \"#999\",\n    gray: \" #e0e0e0\",\n    grey: \"#CCC\",\n    silver: \"#999\",\n    \"light-silver\": \"#aaa\",\n    \"moon-gray\": \"#ccc\",\n    \"light-gray\": \"#eee\",\n    \"near-white\": \"#f4f4f4\",\n\n    white: \"#fff\",\n    transparent: \"transparent\",\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    cardBgContrast:\"#fafafa\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      aprs,\n      tokenUsdConversionRate,\n      totalSupply,\n      tokenAllocations,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getAprs(tokenConfig.idle.token),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllocations'),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (allAvailableTokens && tokenAllocations && allAvailableTokens.length === tokenAllocations.length){\n      allAvailableTokens.forEach( (protocolAddr,index) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(tokenAllocations[index]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={4}\n              fontSize={[5, 6]}\n              lineHeight={1}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex justifyContent={\"left\"} mt={2} mb={[2, 4]} width={1}>\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex mt={[2, 3]} mb={2} flexDirection={\"column\"} width={1}>\n            {flashData.questions.map( (question,index) => (\n              <Flex\n                key={`question_${index}`}\n              >\n                <Link\n                  ml={0}\n                  fontSize={2}\n                  fontWeight={2}\n                  opacity={\"50%\"}\n                  color={\"white\"}\n                  textAlign={\"left\"}\n                  onClick={e =>\n                    this.props.openTooltipModal(question.desc, question.msg)\n                  }\n                >\n                  <Flex my={2} alignItems={\"flex-start\"}>\n                    <Image src={flashData.helpcircle} mr={2} />\n\n                    {question.desc}\n                  </Flex>\n                </Link>\n              </Flex>\n            ))}\n          </Flex>\n        </Flex>\n\n        <Flex\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n          width={0.2}\n          mt={6}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import { Flex, Text } from \"rimble-ui\";\nimport Title from \"../Title/Title\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport IDLE from \"../contracts/IDLE.json\";\nimport WETH from \"../abis/tokens/WETH.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport Tranches from \"../Tranches/Tranches\";\nimport COMP from \"../abis/compound/COMP.json\";\nimport aToken from \"../abis/aave/AToken.json\";\nimport TokenSwap from \"../TokenSwap/TokenSwap\";\nimport yDAIv3 from \"../abis/iearn/yDAIv3.json\";\nimport LpStaking from \"../LpStaking/LpStaking\";\nimport stkIDLE from \"../contracts/stkIDLE.json\";\nimport yUSDCv3 from \"../abis/iearn/yUSDCv3.json\";\nimport yUSDTv3 from \"../abis/iearn/yUSDTv3.json\";\nimport ySUSDv3 from \"../abis/iearn/ySUSDv3.json\";\nimport yTUSDv3 from \"../abis/iearn/yTUSDv3.json\";\nimport Timelock from \"../contracts/Timelock.json\";\nimport CurveZap from \"../abis/curve/CurveZap.json\";\nimport CovToken from \"../abis/cover/CovToken.json\";\nimport B2BVester from \"../contracts/B2BVester.json\";\nimport IdleStaking from \"../IdleStaking/IdleStaking\";\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport EarlyRewards from \"../contracts/EarlyRewards.json\";\nimport CoverProtocol from \"../CoverProtocol/CoverProtocol\";\nimport CurveDeposit from \"../abis/curve/CurveDeposit.json\";\nimport VesterFactory from \"../contracts/VesterFactory.json\";\nimport GovernorAlpha from \"../contracts/GovernorAlpha.json\";\nimport EcosystemFund from \"../contracts/EcosystemFund.json\";\nimport Comptroller from \"../abis/compound/Comptroller.json\";\nimport erc20Forwarder from \"../contracts/erc20Forwarder.json\";\nimport BalancerPool from \"../abis/balancer/BalancerPool.json\";\nimport IdleController from \"../contracts/IdleController.json\";\nimport TokenMigration from \"../TokenMigration/TokenMigration\";\nimport BatchMigration from \"../BatchMigration/BatchMigration\";\nimport IdleBatchedMint from \"../contracts/IdleBatchedMint.json\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport IdleProxyMinter from \"../contracts/IdleProxyMinter.json\";\nimport IdleRebalancerV3 from \"../contracts/IdleRebalancerV3.json\";\nimport LiquidityGaugeV2 from \"../abis/curve/LiquidityGaugeV2.json\";\nimport DeployB2BVesting from \"../DeployB2BVesting/DeployB2BVesting\";\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage:\n      \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint:\n      \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee:\n      \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr:\n      \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance:\n      \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort:\n      \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov:\n      \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule:\n      \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    apyLong:\n      \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    yieldFarming:\n      'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    baseRoute: \"/governance\",\n    props: {\n      tokenName: \"IDLE\",\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      12:{\n        description:'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.png\",\n      disabledTokens: [\"idleRAIYield\", \"idleFEIYield\"], // Disable IDLE distribution for idleToken\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\" // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: \"stkAAVE\",\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: \"aavev2\",\n      aprTooltipMode: false,\n      distributionMode: \"second\",\n      color: \"hsl(314, 41%, 51%)\",\n      distributionFrequency: \"day\",\n      address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\", // MAIN\n      addressForPrice: \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\", // MAIN\n      disabledTokens: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"],\n    }\n  },\n  contracts: {\n    ProxyFactory: {\n      abi: MinimalInitializableProxyFactory,\n      address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n    },\n    LockedIDLE: {\n      abi: LockedIDLE,\n      address: \"0xF241a0151841AE2E6ea750D50C5794b5EDC31D99\"\n    },\n    FeeTreasury: {\n      abi: FeeTreasury,\n      address: \"0x69a62c24f16d4914a48919613e8ee330641bcb94\" // MAIN\n    },\n    PriceOracle: {\n      abi: PriceOracle,\n      address: \"0x972A64d108e250dF98dbeac8170678501f5EF181\" // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock: {\n      abi: Timelock,\n      address: \"0xD6dABBc2b275114a2366555d6C481EF08FDC2556\" // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund: {\n      abi: EcosystemFund,\n      address: \"0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7\" // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory: {\n      abi: VesterFactory,\n      address: \"0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972\" // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController: {\n      abi: IdleController,\n      address: \"0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE\" // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards: {\n      abi: EarlyRewards,\n      address: \"0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc\" // MAIN\n      // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha: {\n      abi: GovernorAlpha,\n      address: \"0x2256b25CFC8E35c3135664FD03E77595042fe31B\" // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller: {\n      abi: Comptroller,\n      address: \"0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b\" // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter: {\n      abi: SushiV2Router02,\n      address: \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\"\n    },\n    UniswapRouter: {\n      abi: UniswapV2Router02,\n      address: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n    },\n    BalancerExchangeProxy: {\n      abi: BalancerExchangeProxy,\n      address: \"0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21\"\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\n      \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\n          \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\n          \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        // hex:'#00ff06',\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      iconName: \"Whatshot\",\n      component: Tranches,\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\n        \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\n        \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\n        \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/rates/\"\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: \"https://api.idle.finance/tvls/\"\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: \"https://api.idle.finance/substack/\"\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/scores/\"\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY\n        ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` }\n        : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI','FEI'],\n        additionalProtocols:[\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: \"#F7B24A\",\n          hsl: [\"40\", \"95%\", \"59%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 2]\n        },\n        startTimestamp: \"2020-02-11\",\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        icon: \"images/tokens/IDLE.png\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-09-24',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      \"idleDAI+idleUSDC+idleUSDT\": {\n        decimals: 18,\n        enabled: false,\n        name: \"Curve.fi\",\n        color: {\n          hex: \"#ff0000\",\n          rgb: [255, 0, 0],\n          hsl: [\"0\", \"100%\", \"50%\"]\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: {\n    // Network configurations\n    availableNetworks: {\n      1: \"Mainnet\",\n      3: \"Ropsten\",\n      4: \"Rinkeby\",\n      42: \"Kovan\",\n      1337: \"Hardhat\"\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    firstBlockNumber: 8119247,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 42, 1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        42: \"https://kovan.infura.io/v3/\",\n        1: \"https://mainnet.infura.io/v3/\",\n        1337: \"https://mainnet.infura.io/v3/\"\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: \"https://api.etherscan.io/api\",\n          1337: \"https://api.etherscan.io/api\",\n          42: \"https://api-kovan.etherscan.io/api\"\n        },\n        baseUrl: {\n          1: \"https://etherscan.io\",\n          1337: \"https://etherscan.io\",\n          42: \"https://kovan.etherscan.io\"\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.png\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:\n        'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: \"ETH Wrapper\",\n      route: \"eth-wrapper\",\n      subComponent: TokenWrapper,\n      image: \"images/tokens/WETH.svg\",\n      desc: \"Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.\",\n      props: {\n        startContract: {\n          name: \"ETH\",\n          token: \"ETH\",\n          decimals: 18,\n          wrapMethod: \"deposit\"\n        },\n        destContract: {\n          abi: WETH,\n          name: \"WETH\",\n          decimals: 18,\n          token: \"WETH\",\n          unwrapMethod: \"withdraw\",\n          address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n        }\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      label: \"Cover Protocol\",\n      route: \"cover-protocol\",\n      subComponent: CoverProtocol,\n      image: \"images/protocols/cover-logo.svg\",\n      desc: \"Get your Idle Portfolio covered against Smart Contract risk\",\n      fileClaimUrl:\n        \"https://app.coverprotocol.com/app/claims/new?protocol=IDLE\",\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: \"CoverMint\",\n          address: \"0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0\"\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\n        \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      depositEnabled: false,\n      icon: \"FileDownload\",\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\n        \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      label: \"Token Migration\",\n      desc:\n        \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      icon: \"AddCircleOutline\",\n      route: \"add-funds\",\n      label: \"Add Funds\",\n      desc: \"Buy tokens with your Bank account, Credit card or Ethereum Wallet\",\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams =\n            globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency\n              ? props.tokenConfig.wyre.destCurrency\n              : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n              ? props.tokenConfig.ramp.swapAsset\n              : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n            ? props.tokenConfig.transak.currencyCode\n            : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n              ? props.tokenConfig.moonpay.currencyCode\n              : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n              connectorName !== \"Injected\" &&\n              window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                    window.RimbleWeb3_context.connectorName.toLowerCase()\n                  ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aFEI',\n            enabled:true,\n            functions:{},\n            name:'aavev2',\n            address:'0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n"],"sourceRoot":""}