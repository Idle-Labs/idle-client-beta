{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","FlexLoader/FlexLoader.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","children","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","mr","themeMode","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","console","log","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","functions","stakedBalance","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","currentWeb3","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref32","_ref33","_firstHarvest","_latestHarvest","firstBlock","_ref34","_ref35","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context18","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x15","_x13","_x14","_ref36","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref37","_ref38","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref39","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref40","_ref41","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref42","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref43","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref44","_callee24","_context24","_x26","_x27","_x28","_ref45","_callee25","_ref46","_ref47","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref50","_ref51","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref52","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x31","_ref53","_callee28","_context28","_x32","match","_ref54","_callee29","_context29","_x33","_ref55","_callee30","_context30","_x34","items","to_address","_ref56","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref62","_callee38","_ref63","_ref64","_context38","getTransactionReceipt","_x36","_ref65","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref66","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref67","_callee41","processTxs","_args41","_context41","_x40","_ref68","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref69","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref70","_callee46","minedTxs","_context46","_ref71","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref72","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref73","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref74","_callee53","txsToProcess","_args53","_context53","_ref75","_callee52","_context52","_ref76","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref77","_callee48","_context48","_x54","_x55","_ref78","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref79","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref80","_callee54","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args54","_context54","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x60","_ref81","_callee55","error_callback","config","_args55","_context55","post","catch","_x61","_ref82","_callee56","_args56","_context56","_x62","_ref83","_callee57","apiKeyIndex","apiKey","_args57","_context57","_x63","_ref84","_callee58","return_data","_args58","_context58","_x64","makeCachedPostRequest","_ref85","_callee59","_args59","_context59","_x65","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee60","page","googlePageviewInfo","isOrigin","_args60","_context60","ga","_ref87","_callee62","googleEventsInfo","debugEnabled","originOk","_args62","_context62","analytics","google","addPostfixForTestnet","availableNetworks","_ref88","_callee61","_context61","hitCallback","hitCallbackFail","_x67","_x68","_x66","createContract","_ref89","_callee63","_context63","_x69","_x70","_x71","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee66","activeOnly","whitelist","proposals","validProposals","_args66","_context66","addr","_ref91","_callee65","checkedStrategies","_context65","end","author","snapshot","strategies","_ref92","_callee64","tokenContract","_context64","_x73","_x72","getAprsFromApi","_callee67","endpointInfo","aprs","_args67","_context67","_ref94","_callee68","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args68","_context68","_x74","getTokenExchangeRate","_ref95","_callee69","exchangeRateParams","exchangeRate","_context69","_x75","_x76","getTokenDecimals","_ref96","_callee70","_context70","_x77","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee71","idleTokenConfig","feeDistributorConfig","_context71","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee72","contractPaused","_args72","_context72","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref99","_callee74","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context74","lastAllocationsPromise","_ref100","_callee73","lastAllocations","_context73","_x79","_x80","alloc","_x78","_ref101","_callee75","oldContractBalance","oldContractTokenDecimals","oldContractName","_context75","_x81","_x82","_ref102","_callee76","eventName","_args76","_context76","getContractPastEvents","_x83","_x84","estimateMethodGasUsage","_ref103","_callee77","methodParams","_contract$methods","functionCall","gasLimit","_ref104","_ref105","_args77","_context77","getGasPrice","estimateGas","_x85","_x86","_ref106","_callee78","userAddress","signedParameters","callback_receipt","_contract$methods2","_context78","on","once","confirmationNumber","receipt","_x87","_x88","_x89","_x90","_x91","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref107","_callee79","biconomyInfo","res","_context79","limits","apiId","headers","x-api-key","_x92","sendTxWithPermit","_ref108","_callee80","_contract$methods3","messageToSign","_this$getSignaturePar","_context80","encodeABI","personal","sign","_x93","_x94","_x95","_x96","_x97","_x98","buildBiconomyErc20ForwarderTx","_ref109","_callee81","permitType","callData","buildParams","_context81","txGas","erc20ForwarderClient","buildTx","_x99","_x100","_x101","_x102","_x103","_ref110","_callee83","_context83","_ref111","_callee82","_context82","_x105","_x106","_x104","sendBiconomyTxWithErc20Forwarder","_ref112","_callee84","req","metaInfo","txResponse","fetchReceiptIntervalId","_context84","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x107","_x108","_x109","_x110","sendBiconomyTxWithPersonalSign","_ref113","_callee85","_this$getSignaturePar2","_context85","getNonce","_x111","_x112","_x113","_x114","signPermitEIP2612","_ref114","_callee86","erc20Name","owner","spender","deadline","domain","permit","domainData","_context86","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x115","_x116","_x117","_x118","_x119","_x120","_x121","_x122","signPermit","_ref115","_callee87","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args87","_context87","net","getId","round","nonceMethod","pow","allowed","response","_x123","_x124","_x125","_ref116","_callee88","permitParams","methodAbi","useNonce","_args88","_context88","_jsonInterface","f","unshift","_x126","_x127","_x128","_x129","_x130","_x131","_x132","sendSignedTx","_ref117","_callee89","MetaTransaction","dataToSign","_context89","_x133","_x134","_x135","_x136","_x137","checkTokenApproved","_ref118","_callee90","contractAddr","walletAddr","_ref119","_ref120","allowance","_context90","getAllowance","gte","_x138","_x139","_x140","_ref121","_callee91","_context91","_x141","_x142","_x143","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee93","highestValue","_args93","_context93","lendRates","aprInfo","tokenAPR","_ref123","_callee92","_context92","_x144","_ref124","_callee94","_args94","_context94","_x145","_x146","getTrancheStakingRewards","_ref125","_callee96","_args96","_context96","_ref126","_callee95","tokenGlobalConfig","stakingRewardsContract","_context95","_x149","_x147","_x148","_ref127","_callee97","field","addGovTokens","_args97","_context97","loadTrancheField","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_ref128","_callee98","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref129","_ref130","totalSupply","virtualPrice","_ref131","_ref132","lastPrice1","staked1","_ref133","_ref134","deposited1","lastPrice","_ref135","_ref136","redeemable1","staked2","_ref137","_ref138","earningsStart","trancheApy2","deposited3","earningsEnd","_ref139","_ref140","trancheFee","earningsCounter","feesEnd","feesStart","_ref141","_ref142","deposited4","redeemable3","_ref143","_ref144","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","_ref145","_ref146","_ref147","_ref148","earningsPerc","secondsFromFirstTx","_ref149","_ref150","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args98","_context98","Strategy","initContract","AA","BB","getTokenTotalSupply","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x158","_x159","_x160","_x161","_x162","_x163","_x164","loadAssetField","_ref151","_callee99","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref152","_ref153","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref154","_ref155","amountLentCurve1","redeemableBalanceCurve","_ref156","_ref157","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref158","_ref159","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref160","_ref161","tokenPriceFirstDeposit","_ref162","_ref163","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref164","_ref165","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref166","_ref167","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref168","_ref169","amountLentCurve2","redeemableBalanceCurve1","_ref170","_ref171","redeemableBalance2","_args99","_context99","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x165","_x166","_x167","_x168","getIdleTokenSupply","_ref172","_callee100","idleTokenSupply","_args100","_context100","_x169","getIdleTokenPriceWithFee","_ref173","_callee101","_ref174","_ref175","fee","priceWFee","_args101","_context101","eq","_x170","_x171","_ref176","_callee102","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args102","_context102","_x172","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref177","_callee103","_ref178","_ref179","idleTokensTotalSupply","userShare","_context103","_x173","_x174","open","_callee105","coverProtocolConfig","nexusMutualConfig","_args105","_context105","_ref181","_callee104","coverage","coverageTokens","protocolImage","_context104","tokens","expirationTimestamp","utc","_x175","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref182","_callee107","incidentsInfo","_ref183","_ref184","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context107","directProps","startBlock","contractInfo","buyer","_ref185","_callee106","cover","coverId","claimSubmittedEvent","_ref186","_ref187","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref188","_ref189","_context106","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x177","_x176","getBatchedDepositExecutions","_ref190","_callee108","_context108","_x178","getBatchedDeposits","_callee110","filter_by_status","batchDepositConfig","batchedDeposits","_args110","_context110","_ref192","_callee109","currBatchIndex","batchIndex","_ref193","_ref194","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context109","_x179","getETHBalance","_ref195","_callee111","fixDecimals","_args111","_context111","_x180","_ref196","_callee112","_ref197","_ref198","_args112","_context112","ERC20","_x181","_x182","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref199","_callee113","_args113","_context113","_x183","_ref200","_callee114","_args114","_context114","_x184","_ref201","_callee115","_args115","_context115","_x185","_x186","getProtocolBalance","_ref202","_callee116","_context116","_x187","_x188","getAprs","_ref203","_callee117","_context117","addresses","_x189","genericIdleCall","_ref204","_callee118","callParams","_args118","_context118","_x190","_ref205","_callee119","_contract$methods4","_args119","_context119","_x191","_x192","_ref206","_callee121","_args121","_context121","_ref207","_callee120","_context120","_x194","_x195","_x193","getTxDecodedLogs","_ref208","_callee123","logAddr","decodeLogs","internalTransfers","_context123","_ref209","_callee122","_context122","_x200","_x201","_x196","_x197","_x198","_x199","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee124","_context124","_callee125","_args125","_context125","getBlock","_ref212","_callee126","_args126","_context126","getPastEvents","_x202","_x203","_ref213","_callee127","_args127","_context127","_x204","_x205","cachedContractCall","_ref214","_callee128","_args128","_context128","_x206","_x207","_ref215","_callee129","_contract$methods5","_args129","_context129","_x208","_x209","_ref216","_callee130","async","_args130","_context130","_x210","_x211","getUnlentBalance","_ref217","_callee131","unlentBalance","_context131","_x212","_ref218","_callee132","_args132","_context132","_x213","getLastAllocations","_ref219","_callee134","tokenAllocations","_context134","_ref220","_callee133","_context133","_x215","_x216","_x214","_ref221","_callee135","protocolsAprs","_ref222","_ref223","govTokensBalances","_args135","_context135","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref224","_callee136","_ref225","_ref226","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref227","_ref228","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context136","getSushiswapConversionRate","_x218","_ref229","_callee137","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context137","_x219","_x220","_ref230","_callee138","useWETH","unires","_args138","_context138","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref231","_callee139","idleTokensBalances","remainingCurveTokens","_args139","_context139","_x223","getCurveUnevenTokenAmounts","_ref232","_callee140","amounts","max_burn_amount","unevenAmounts","_context140","getCurveDepositContract","_x224","_x225","_callee141","curveRatesInfo","_context141","strategyTokens","getCurveAPYContract","_callee142","blocksForPrevTokenPrice","_ref235","_ref236","prevTokenPrice","blocksMultiplier","curveAPR","_context142","getCurveTokenSupply","_callee143","_context143","getCurvePoolContract","_callee144","_args144","_context144","_callee145","_args145","_context145","_ref240","_callee146","_ref241","_ref242","_context146","_x226","_callee147","depositContractInfo","_context147","getCurveZapContract","_callee148","zapContractInfo","_context148","_callee149","poolContractInfo","_context149","getCurveSwapContract","_callee150","migrationContractInfo","_context150","getCurveIdleTokensAmounts","_callee152","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args152","_context152","_ref248","_callee151","coinIndex","curveIdleTokens","_context151","migrationParams","_x227","getCurveTokensAmounts","_callee154","useCoinIndex","_args154","_context154","_ref250","_callee153","_ref251","_ref252","idleTokenPrice","totalTokenSupply","_context153","_x228","getCurveAmounts","_ref253","_callee156","_args156","_context156","_ref254","_callee155","_context155","_x231","_x229","_x230","getCurveTokenAmount","_ref255","_callee157","_args157","_context157","_x232","getCurveSlippage","_ref256","_callee158","uneven_amounts","depositContract","_ref257","_ref258","Sv","_args158","_context158","_x233","_x234","_ref259","_callee159","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref260","_ref261","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args159","_context159","IAaveIncentivesController","emissionPerSecond","_x235","_callee161","_args161","_context161","_ref263","_callee160","_ref264","_ref265","_context160","_x236","getWMaticApr","_ref266","_callee162","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args162","_context162","_x237","_x238","getStkAaveApr","_ref267","_callee163","aaveConversionRate","stkAaveAPR","stkAaveValue","_args163","_context163","_x239","_x240","getCompAPR","_ref268","_callee164","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args164","_context164","_x241","_x242","getCompSpeed","_ref269","_callee165","cTokenAddress","compSpeed","_context165","_x243","_ref270","_callee166","cTokenInfo","compoundAllocationPerc","_ref271","_ref272","cTokenTotalSupply","compoundPoolShare","_args166","_context166","_x244","_callee168","_args168","_context168","_ref274","_callee167","_ref275","_ref276","_context167","_x245","_callee170","_args170","_context170","_ref278","_callee169","_ref279","_ref280","compApr","_context169","_x246","getTokensCsv","_callee173","csv","_context173","prototype","sum","pv","cv","avg","_ref282","_callee172","_context172","_ref283","_callee171","rates","header","aprAvg","scoreAvg","lastRow","_context171","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee175","convertToken","_args175","_context175","_ref285","_callee174","compTokenBalance","_context174","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref286","_callee177","govTokensUserDistribution","_args177","_context177","_ref287","_callee176","_context176","_x251","_x250","getGovTokensDistributionSpeed","_ref288","_callee179","govTokensDistribution","_args179","_context179","_ref289","_callee178","govSpeed","_context178","_x253","_x252","getGovTokensAprs","_ref290","_callee181","govTokensAprs","_args181","_context181","_ref291","_callee180","_ref292","_ref293","_ref294","_ref295","cTokenConfig","_context180","aprTooltipMode","_x256","_x254","_x255","_callee183","_args183","_context183","_ref297","_callee182","govTokenBalance","fromTokenConfig","_context182","_x257","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee184","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args184","_context184","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref299","_callee186","govTokensAmounts","_context186","getGovTokensUserAmounts","_ref300","_callee185","govTokenIndex","govTokenAddress","_context185","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref301","_callee187","_context187","_x262","_x263","_ref302","_callee188","_context188","_x264","_x265","_callee191","govTokenConfigForced","_args191","_context191","_ref304","_callee190","_context190","_ref305","_callee189","_context189","_x267","_x268","_x266","getTokenFees","_callee192","_args192","_context192","_callee193","_ref308","_ref309","feePercentage","gain","fees","_args193","_context193","_ref310","_callee194","_args194","_context194","_x269","getTotalTVL","_callee195","tokensTVL","_context195","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee199","_context199","_ref313","_callee198","_context198","_ref314","_callee197","oldTokenTVL","idleTokenName","_ref315","_ref316","oldTokenConfig","_ref320","_ref321","oldTokenPrice","oldTotalSupply","_context197","showAUM","_ref317","_callee196","_ref318","_ref319","govTokenConversionRate","govTokenBalanceConverted","_context196","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee200","idleSubstackFeed","latestFeed","_context200","getTrancheAggregatedStats","_callee204","totalAUM","_args204","_context204","_ref324","_callee203","_context203","_ref325","_callee202","_context202","_ref326","_callee201","_ref327","_ref328","_context201","_x275","_x274","_x273","getAggregatedStats","_callee206","allNetworks","networkIds","_args206","_context206","_ref330","_callee205","tvls","_context205","getAggregatedStats_chain","_x276","_callee210","avgAPR","_args210","_context210","_ref332","_callee209","_context209","_ref333","_callee208","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context208","_ref334","_callee207","_ref335","_ref336","_context207","_x279","_x278","_x277","getTokenApy","_ref337","_callee211","_context211","_x280","getTokensToMigrate","_callee214","_args214","_context214","_ref339","_callee213","_context213","_ref340","_callee212","_ref341","_context212","_x282","_x281","getProtocolsTokensBalances","_callee216","tokenBalances","minTokenBalance","protocolsTokens","_args216","_context216","_ref343","_callee215","_context215","_x283","getTokenConversionRateField","_ref344","_callee217","_args217","_context217","getTokenConversionRateUniswap","_x284","_x285","_ref345","_callee218","_args218","_context218","_x286","_x287","_x288","getAvgAPYStats","_ref346","_callee219","apiResults","_args219","_context219","_x289","_x290","_ref347","_callee220","statsTokenConfig","ToTokenConfig","_args220","_context220","addressForPriceFrom","_x291","_ref348","_callee221","count","_conversionRate","_args221","_context221","_x292","_x293","getTokenScore","_ref349","_callee222","_ref350","_ref351","tokenScore","_context222","protocolScore","getTokenScoreApi","_x294","_x295","_ref352","_callee223","scores","_context223","_x296","_x297","_ref353","_callee224","idleGovTokenShowAPR","idleAPR","_args224","_context224","_x298","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","unstakeWithBalance","Button","transactionSucceeded","unstake","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewards","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","LDO","MTA","CRV","FRAX3CRV","MIM3CRV","ALUSD3CRV","MUSD3CRV","MUSD","ANGLE","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TrancheStakingRewards","mUSD","steCRV","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.a8319e1a.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          // console.log('trancheApy',tokenConfig.token,trancheApy.toString(),apr.toString(),apy.toString());\n          // tokensApy[tokenConfig.token] = baseApy;\n          \n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                // console.log('trancheApy',token,rewardTokenInfo,tokenApy.toString(),apy.toString());\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price, null);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // if (token === 'FEI'){\n                  // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n                // }\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1881,\n\t\"./testnet/mumbai/index.json\": 1882\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4445;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4452,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4453,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4454,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4455,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4463,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4464,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4465,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4466,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4655,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4656,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4657,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4658,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4659,\n\t\"./mainnet/v1/index.json\": 1881,\n\t\"./networks.json\": 1880,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4665,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4666,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4667,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4668,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4676,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4677,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4678,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4679,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4868,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4869,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4870,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4871,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4872,\n\t\"./testnet/mumbai/index.json\": 1882\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4446;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_stETH',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_stETH'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_stETH_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_stETH',\n        token:'AA_convex_stETH',\n        label:'convex stETH AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_stETH',\n        token:'BB_convex_stETH',\n        label:'convex stETH BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}