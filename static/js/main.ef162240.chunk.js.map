{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Title/Title.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","getContractBalance","loadTrancheFieldRaw","convertTrancheTokenBalance","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref22","_callee15","stakingDistributions","stakingRewards","_context15","_ref23","_callee14","eventFilters","transfers","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref24","_callee17","_ref25","_ref26","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref27","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref28","_callee19","tokensDistribution","_context19","_ref29","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref30","_ref31","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref32","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref33","_ref34","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context21","_ref35","_callee20","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context20","trancheTokens","_x19","_x16","_x17","_x18","getTrancheUserTransactions","_ref36","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref37","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref38","_callee24","_context24","_x26","_x27","_x28","_ref39","_callee25","_ref40","_ref41","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref44","_ref45","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref46","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref47","_callee28","_context28","_x32","match","_ref48","_callee29","_context29","_x33","_ref49","_callee30","_context30","_x34","items","to_address","_ref50","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","sort","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref56","_callee38","_ref57","_ref58","_context38","getTransactionReceipt","_x36","_ref59","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref60","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref61","_callee41","processTxs","_args41","_context41","_x40","_ref62","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref63","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref64","_callee46","minedTxs","_context46","_ref65","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref66","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref67","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref68","_callee53","txsToProcess","_args53","_context53","_ref69","_callee52","_context52","_ref70","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref71","_callee48","_context48","_x54","_x55","_ref72","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref73","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","makePostRequest","_ref74","_callee54","postData","error_callback","config","_args54","_context54","post","catch","_x60","_ref75","_callee55","_args55","_context55","_x61","_ref76","_callee56","apiKeyIndex","apiKey","_args56","_context56","message","_x62","_ref77","_callee57","return_data","_args57","_context57","_x63","makeCachedPostRequest","_ref78","_callee58","_args58","_context58","_x64","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee59","page","googlePageviewInfo","isOrigin","_args59","_context59","ga","_ref80","_callee61","googleEventsInfo","debugEnabled","originOk","_args61","_context61","analytics","google","addPostfixForTestnet","availableNetworks","_ref81","_callee60","_context60","hitCallback","hitCallbackFail","_x66","_x67","_x65","createContract","_ref82","_callee62","_context62","_x68","_x69","_x70","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee65","activeOnly","whitelist","query","proposals","currTime","validProposals","_args65","_context65","addr","_ref84","_callee64","checkedStrategies","_context64","end","author","snapshot","strategies","_ref85","_callee63","tokenContract","_context63","_x72","_x71","getAprsFromApi","_callee66","endpointInfo","aprs","_args66","_context66","_ref87","_callee67","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args67","_context67","_x73","getTokenExchangeRate","_ref88","_callee68","exchangeRateParams","exchangeRate","_context68","_x74","_x75","getTokenDecimals","_ref89","_callee69","_context69","_x76","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee70","idleTokenConfig","feeDistributorConfig","_context70","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee71","contractPaused","_args71","_context71","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref92","_callee73","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context73","lastAllocationsPromise","_ref93","_callee72","lastAllocations","_context72","_x78","_x79","alloc","_x77","_ref94","_callee74","oldContractBalance","oldContractTokenDecimals","oldContractName","_context74","_x80","_x81","_ref95","_callee75","eventName","_args75","_context75","getContractPastEvents","_x82","_x83","estimateMethodGasUsage","_ref96","_callee76","methodParams","_contract$methods","functionCall","gasLimit","_ref97","_ref98","_args76","_context76","getGasPrice","estimateGas","_x84","_x85","_ref99","_callee77","userAddress","signedParameters","callback_receipt","_contract$methods2","_context77","on","once","confirmationNumber","receipt","_x86","_x87","_x88","_x89","_x90","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref100","_callee78","biconomyInfo","res","_context78","limits","apiId","headers","x-api-key","_x91","sendTxWithPermit","_ref101","_callee79","_contract$methods3","messageToSign","_this$getSignaturePar","_context79","encodeABI","personal","sign","_x92","_x93","_x94","_x95","_x96","_x97","buildBiconomyErc20ForwarderTx","_ref102","_callee80","permitType","callData","buildParams","_context80","txGas","erc20ForwarderClient","buildTx","_x98","_x99","_x100","_x101","_x102","_ref103","_callee82","_context82","_ref104","_callee81","_context81","_x104","_x105","_x103","sendBiconomyTxWithErc20Forwarder","_ref105","_callee83","req","metaInfo","txResponse","fetchReceiptIntervalId","_context83","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x106","_x107","_x108","_x109","sendBiconomyTxWithPersonalSign","_ref106","_callee84","_this$getSignaturePar2","_context84","getNonce","_x110","_x111","_x112","_x113","signPermitEIP2612","_ref107","_callee85","erc20Name","owner","spender","deadline","domain","permit","domainData","_context85","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x114","_x115","_x116","_x117","_x118","_x119","_x120","_x121","signPermit","_ref108","_callee86","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args86","_context86","net","getId","round","nonceMethod","pow","allowed","response","_x122","_x123","_x124","_ref109","_callee87","permitParams","methodAbi","useNonce","_args87","_context87","_jsonInterface","f","unshift","_x125","_x126","_x127","_x128","_x129","_x130","_x131","sendSignedTx","_ref110","_callee88","MetaTransaction","dataToSign","_context88","_x132","_x133","_x134","_x135","_x136","checkTokenApproved","_ref111","_callee89","contractAddr","walletAddr","_ref112","_ref113","allowance","_context89","getAllowance","gte","_x137","_x138","_x139","_ref114","_callee90","_context90","_x140","_x141","_x142","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee92","highestValue","_args92","_context92","lendRates","aprInfo","tokenAPR","_ref116","_callee91","_context91","_x143","getTrancheStakedBalance","_ref117","_callee93","stakedBalance","_args93","_context93","_x144","_x145","getTrancheStakingRewards","_ref118","_callee95","_context95","_ref119","_callee94","tokenGlobalConfig","_context94","_x148","_x146","_x147","_ref120","_callee96","field","addGovTokens","_args96","_context96","loadTrancheField","_x149","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_ref121","_callee97","formatValue","addTokenName","rewardsTokensInfo","internal_view","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref122","_ref123","totalSupply","virtualPrice","_ref124","_ref125","staked1","lastPrice1","_ref126","_ref127","deposited1","lastPrice","_ref128","_ref129","redeemable1","staked2","_ref130","_ref131","earningsStart","trancheApy2","deposited3","earningsEnd","_ref132","_ref133","trancheFee","earningsCounter","feesStart","feesEnd","_ref134","_ref135","deposited4","redeemable3","_ref136","_ref137","deposited2","redeemable2","_ref138","_ref139","_ref140","_ref141","earningsPerc","secondsFromFirstTx","_ref142","_ref143","rewardsTokens","incentiveTokens","govTokens","_args97","_context97","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x157","_x158","_x159","_x160","_x161","_x162","_x163","loadAssetField","_ref144","_callee98","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref145","_ref146","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref147","_ref148","amountLentCurve1","redeemableBalanceCurve","_ref149","_ref150","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref151","_ref152","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref153","_ref154","tokenPriceFirstDeposit","_ref155","_ref156","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref157","_ref158","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref159","_ref160","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref161","_ref162","amountLentCurve2","redeemableBalanceCurve1","_ref163","_ref164","redeemableBalance2","_args98","_context98","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x164","_x165","_x166","_x167","getIdleTokenSupply","_ref165","_callee99","idleTokenSupply","_args99","_context99","_x168","getIdleTokenPriceWithFee","_ref166","_callee100","_ref167","_ref168","fee","priceWFee","_args100","_context100","eq","_x169","_x170","_ref169","_callee101","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args101","_context101","_x171","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref170","_callee102","_ref171","_ref172","idleTokensTotalSupply","userShare","_context102","_x172","_x173","open","_callee104","coverProtocolConfig","nexusMutualConfig","_args104","_context104","_ref174","_callee103","coverage","coverageTokens","protocolImage","_context103","tokens","expirationTimestamp","utc","_x174","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref175","_callee106","incidentsInfo","_ref176","_ref177","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context106","directProps","startBlock","contractInfo","buyer","_ref178","_callee105","cover","coverId","claimSubmittedEvent","_ref179","_ref180","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref181","_ref182","_context105","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x176","_x175","getBatchedDepositExecutions","_ref183","_callee107","_context107","_x177","getBatchedDeposits","_callee109","filter_by_status","batchDepositConfig","batchedDeposits","_args109","_context109","_ref185","_callee108","currBatchIndex","batchIndex","_ref186","_ref187","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context108","_x178","getETHBalance","_ref188","_callee110","fixDecimals","_args110","_context110","_x179","_ref189","_callee111","_ref190","_ref191","_args111","_context111","_x180","_x181","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref192","_callee112","_args112","_context112","_x182","_ref193","_callee113","_args113","_context113","_x183","_ref194","_callee114","_args114","_context114","_x184","_x185","getProtocolBalance","_ref195","_callee115","_context115","_x186","_x187","getAprs","_ref196","_callee116","_context116","addresses","_x188","genericIdleCall","_ref197","_callee117","callParams","_args117","_context117","_x189","_ref198","_callee118","_contract$methods4","_args118","_context118","_x190","_x191","_ref199","_callee120","_args120","_context120","_ref200","_callee119","_context119","_x193","_x194","_x192","getTxDecodedLogs","_ref201","_callee122","logAddr","decodeLogs","internalTransfers","_context122","_ref202","_callee121","_context121","_x199","_x200","_x195","_x196","_x197","_x198","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee123","_context123","_callee124","_args124","_context124","getBlock","_ref205","_callee125","_args125","_context125","getPastEvents","_x201","_x202","_ref206","_callee126","_args126","_context126","_x203","_x204","cachedContractCall","_ref207","_callee127","_args127","_context127","_x205","_x206","_ref208","_callee128","_contract$methods5","_args128","_context128","_x207","_x208","_ref209","_callee129","async","_args129","_context129","_x209","_x210","getUnlentBalance","_ref210","_callee130","unlentBalance","_context130","_x211","_ref211","_callee131","_args131","_context131","_x212","getLastAllocations","_ref212","_callee133","tokenAllocations","_context133","_ref213","_callee132","_context132","_x214","_x215","_x213","_ref214","_callee134","protocolsAprs","_ref215","_ref216","govTokensBalances","_args134","_context134","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x216","getSushiswapPoolTokenPrice","_ref217","_callee135","_ref218","_ref219","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref220","_ref221","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context135","getSushiswapConversionRate","_x217","_ref222","_callee136","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context136","_x218","_x219","_ref223","_callee137","unires","_context137","addressForPrice","_x220","_x221","getCurveDepositedTokens","_ref224","_callee138","idleTokensBalances","remainingCurveTokens","_args138","_context138","_x222","getCurveUnevenTokenAmounts","_ref225","_callee139","amounts","max_burn_amount","unevenAmounts","_context139","getCurveDepositContract","_x223","_x224","_callee140","curveRatesInfo","_context140","strategyTokens","getCurveAPYContract","_callee141","blocksForPrevTokenPrice","_ref228","_ref229","prevTokenPrice","blocksMultiplier","curveAPR","_context141","getCurveTokenSupply","_callee142","_context142","getCurvePoolContract","_callee143","_args143","_context143","_callee144","_args144","_context144","_ref233","_callee145","_ref234","_ref235","_context145","_x225","_callee146","depositContractInfo","_context146","getCurveZapContract","_callee147","zapContractInfo","_context147","_callee148","poolContractInfo","_context148","getCurveSwapContract","_callee149","migrationContractInfo","_context149","getCurveIdleTokensAmounts","_callee151","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args151","_context151","_ref241","_callee150","coinIndex","curveIdleTokens","_context150","migrationParams","_x226","getCurveTokensAmounts","_callee153","useCoinIndex","_args153","_context153","_ref243","_callee152","_ref244","_ref245","idleTokenPrice","totalTokenSupply","_context152","_x227","getCurveAmounts","_ref246","_callee155","_args155","_context155","_ref247","_callee154","_context154","_x230","_x228","_x229","getCurveTokenAmount","_ref248","_callee156","_args156","_context156","_x231","getCurveSlippage","_ref249","_callee157","uneven_amounts","depositContract","_ref250","_ref251","Sv","_args157","_context157","_x232","_x233","_ref252","_callee158","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref253","_ref254","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args158","_context158","IAaveIncentivesController","emissionPerSecond","_x234","_callee160","_args160","_context160","_ref256","_callee159","_ref257","_ref258","_context159","_x235","getWMaticApr","_ref259","_callee161","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args161","_context161","_x236","_x237","getStkAaveApr","_ref260","_callee162","aaveConversionRate","stkAaveAPR","stkAaveValue","_args162","_context162","_x238","_x239","getCompAPR","_ref261","_callee163","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args163","_context163","_x240","_x241","getCompSpeed","_ref262","_callee164","cTokenAddress","compSpeed","_context164","_x242","_ref263","_callee165","cTokenInfo","compoundAllocationPerc","_ref264","_ref265","cTokenTotalSupply","compoundPoolShare","_args165","_context165","_x243","_callee167","_args167","_context167","_ref267","_callee166","_ref268","_ref269","_context166","_x244","_callee169","_args169","_context169","_ref271","_callee168","_ref272","_ref273","compApr","_context168","_x245","getTokensCsv","_callee172","csv","_context172","prototype","sum","pv","cv","avg","_ref275","_callee171","_context171","_ref276","_callee170","rates","header","aprAvg","scoreAvg","lastRow","_context170","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x247","_x246","_callee174","convertToken","_args174","_context174","_ref278","_callee173","compTokenBalance","_context173","_x248","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref279","_callee176","govTokensUserDistribution","_args176","_context176","_ref280","_callee175","_context175","_x250","_x249","getGovTokensDistributionSpeed","_ref281","_callee178","govTokensDistribution","_args178","_context178","_ref282","_callee177","govSpeed","_context177","_x252","_x251","getGovTokensAprs","_ref283","_callee180","govTokensAprs","_args180","_context180","_ref284","_callee179","_ref285","_ref286","_ref287","_ref288","cTokenConfig","_context179","aprTooltipMode","_x255","_x253","_x254","_callee182","_args182","_context182","_ref290","_callee181","govTokenBalance","tokenConversionRate","fromTokenConfig","_context181","_x256","_callee183","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args183","_context183","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref292","_callee185","govTokensAmounts","_context185","getGovTokensUserAmounts","_ref293","_callee184","govTokenIndex","_context184","getGovTokenAddessByIndex","_x259","_x260","_x257","_x258","_ref294","_callee186","_context186","_x261","_x262","_ref295","_callee187","_context187","_x263","_x264","_callee190","govTokenConfigForced","_args190","_context190","_ref297","_callee189","_context189","_ref298","_callee188","_context188","_x266","_x267","_x265","getTokenFees","_callee191","_args191","_context191","_callee192","_ref301","_ref302","feePercentage","gain","fees","_args192","_context192","_ref303","_callee193","_args193","_context193","_x268","getTotalTVL","_callee194","tokensTVL","_context194","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee198","_context198","_ref306","_callee197","_context197","_ref307","_callee196","oldTokenTVL","idleTokenName","_ref308","_ref309","oldTokenConfig","_ref313","_ref314","oldTokenPrice","oldTotalSupply","_context196","showAUM","_ref310","_callee195","_ref311","_ref312","govTokenConversionRate","govTokenBalanceConverted","_context195","_x271","oldProtocols","oldProtocol","protocolPos","_x270","_x269","getSubstackLatestFeed","_callee199","idleSubstackFeed","latestFeed","_context199","getTrancheAggregatedStats","_callee203","totalAUM","_args203","_context203","_ref317","_callee202","_context202","_ref318","_callee201","_context201","_ref319","_callee200","_ref320","_ref321","_context200","_x274","_x273","_x272","getAggregatedStats","_callee205","allNetworks","networkIds","_args205","_context205","_ref323","_callee204","tvls","_context204","getAggregatedStats_chain","_x275","_callee209","avgAPR","_args209","_context209","_ref325","_callee208","_context208","_ref326","_callee207","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context207","_ref327","_callee206","_ref328","_ref329","_context206","_x278","_x277","_x276","getTokenApy","_ref330","_callee210","_context210","_x279","getTokensToMigrate","_callee213","_args213","_context213","_ref332","_callee212","_context212","_ref333","_callee211","_ref334","_context211","_x281","_x280","getProtocolsTokensBalances","_callee215","tokenBalances","minTokenBalance","protocolsTokens","_args215","_context215","_ref336","_callee214","_context214","_x282","getTokenConversionRateField","_ref337","_callee216","_context216","getTokenConversionRateUniswap","_x283","_x284","_ref338","_callee217","_args217","_context217","_x285","_x286","_x287","getAvgAPYStats","_ref339","_callee218","apiResults","_args218","_context218","_x288","_x289","_ref340","_callee219","ToTokenConfig","_context219","_x290","_ref341","_callee220","count","_conversionRate","_args220","_context220","_x291","_x292","getTokenScore","_ref342","_callee221","_ref343","_ref344","tokenScore","_context221","protocolScore","getTokenScoreApi","_x293","_x294","_ref345","_callee222","scores","_context222","_x295","_x296","_ref346","_callee223","idleGovTokenShowAPR","idleAPR","_args223","_context223","_x297","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","CRV","FRAX3CRV","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.ef162240.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let trancheTokenBalance = await this.getContractBalance(trancheConfig.name,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n              this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n            ]);\n\n            let tokenBalance = trancheTokenBalance.times(tranchePrice);\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()) {\n              tokenBalance = await this.convertTrancheTokenBalance(tokenBalance,tokenConfig);\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = await this.convertTrancheTokenBalance(trancheUserInfo.amountDeposited,tokenConfig);\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'trancheApy',trancheApy.toFixed(5),'amountDeposited',amountDeposited.toFixed(5));\n              \n              portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited,\n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length - 1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens', token]);\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo) {\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n          const totalAmount = transfers.reduce((total, t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            return total;\n          }, this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr: tokenApr,\n            apy: tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, 'usersStakes', [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, 'expectedUserReward', [account, tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    return await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          output = await this.convertTrancheTokenBalance(output, tokenConfig);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n          output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1) {\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue) {\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = null;\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          show_idle_apy ? this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          const apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          let apy = this.apr2apy(apr.div(100)).times(100);\n\n          if (rewardsTokensInfo && rewardsTokensInfo.IDLE && !this.BNify(rewardsTokensInfo.IDLE.apy).isNaN()){\n            apy = apy.plus(this.BNify(rewardsTokensInfo.IDLE.apy).times(100));\n          }\n\n          if (apy.gt(9999)){\n            output = this.BNify(9999.99);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio')\n        output= output/1000\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens);\n\n        if (govTokens) {\n          govTokens.forEach(govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePool', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig) => {\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRateUniswap_${tokenConfig.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.buyText ? this.props.buyText : (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Box\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.23, this.state.useTrancheType ? 0.13 : 0.12]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.14 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.12 : 0.10],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks: [1, 137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:1700000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:1700000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      limit:1700000,\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      limit:1700000,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig.icon || `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}