{"version":3,"sources":["TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js"],"names":["TotalEarningsCounter","state","earningsEnd","earningsStart","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","loadTotalEarnings","prevProps","prevState","contractsInitialized","availableStrategies","JSON","stringify","isRisk","selectedStrategy","availableTokens","portfolio","getAccountPortfolio","account","depositedTokens","Object","keys","tokensBalance","filter","token","_this2","BNify","idleTokenBalance","gt","avgAPY","totalEarnings","totalAmountLent","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee3","tokenConfig","_ref2","_ref3","tokenAprs","amountLent","tokenEarnings","tokenAPY","tokenWeight","amountLentToken","wrap","_context3","prev","next","Promise","all","getTokenAprs","getAmountLent","loadAssetField","sent","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","avgApy","tokenBalance","div","totalBalance","convertTokenBalance","plus","times","stop","_x3","apply","arguments","setState","_this3","counterStyle","lineHeight","color","theme","colors","copyColor","fontFamily","fonts","counter","fontWeight","isMobile","fontSize","length","forEach","p","decimals","maxPrecision","minPrecision","react__WEBPACK_IMPORTED_MODULE_10___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","width","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","parseFloat","start","formattingFn","n","abbreviateNumber","_ref4","countUpRef","ref","style","size","Component","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","enabledTokens","amountLents","aggregatedEarnings","earnings","earningsYear","avgBuyPrice","idleTokenPrice","earningsPerc","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getIdleTokenPrice","minus","avgApr","Math","floor","parseInt","pop","max","isNaN","orderedTokensEarnings","map","step","estimationStep","values","label","value","option","react__WEBPACK_IMPORTED_MODULE_9___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_10__","flexProps","flexDirection","minHeight","height","loaderProps","textProps","ml","text","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","pr","my","px","py","boxShadow","borderRadius","mt","mb","zIndex","justifyContent","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_14__","innerProps","name","options","onChange","v","setEstimationStepsPerc","defaultValue","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","min","tokenRGBColor","getGlobalConfig","join","id","concat","key","borderTop","divider","position","alignItems","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","formatMoney","lt","pt","borderRight","wordBreak","gte","pb","backgroundColor","background","pl","src","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_11__","assign","fieldInfo","_TotalEarningsCounter_TotalEarningsCounter__WEBPACK_IMPORTED_MODULE_15__","sansSerif","estimationLabel"],"mappings":"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","file":"static/js/15.564732f3.chunk.js","sourcesContent":["import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.functionsUtil.BNify(0);\n    let totalEarnings = this.functionsUtil.BNify(0);\n    let totalAmountLent = this.functionsUtil.BNify(0);\n\n    await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountLent,\n        tokenEarnings\n      ] = await Promise.all([\n        this.functionsUtil.getTokenAprs(tokenConfig),\n        this.functionsUtil.getAmountLent([token],this.props.account),\n        this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n      const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n      const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n    });\n\n    const earningsStart = totalEarnings;\n    const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n    const maxPrecision =  this.props.maxPrecision || 10;\n    const minPrecision =  this.props.minPrecision || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n"],"sourceRoot":""}